{
	"eslint.workingDirectories": [
		".eslintrc.js",
		{
			"mode": "auto"
		}
	],
	"editor.formatOnPaste": true,

	"eslint.options": {
		//指定vscode的eslint所处理的文件的后缀
		"extensions": [".js", ".vue", ".ts", ".tsx"]
	},
	"eslint.probe": [
		"javascript",
		"javascriptreact",
		"html",
		"vue",
		"typescript"
	],
	"workbench.fontAliasing": "antialiased",
	// "workbench.statusBar.visible": true,
	"editor.minimap.enabled": false,
	"editor.overviewRulerBorder": false,
	"workbench.tips.enabled": false,
	"editor.cursorBlinking": "solid",
	"editor.quickSuggestions": {
		"other": true,
		"comments": false,
		"strings": false
	},
	"editor.roundedSelection": false,
	"materialTheme.fixIconsRunning": false,
	"workbench.iconTheme": "file-icons",
	"material-icon-theme.folders.theme": "classic",
	"material-icon-theme.hidesExplorerArrows": false,
	"material-icon-theme.opacity": 0.85,
	"debug.toolBarLocation": "docked",

	"files.autoSave": "onFocusChange",
	"vscode_vibrancy.theme": "Default Dark",
	"vscode_vibrancy.opacity": 0.4,

	"[javascriptreact]": {
		"editor.defaultFormatter": "esbenp.prettier-vscode"
	},
	"[jsonc]": {
		"editor.defaultFormatter": "esbenp.prettier-vscode"
	},
	"[typescript]": {
		"editor.defaultFormatter": "vscode.typescript-language-features",
		"editor.formatOnSave": true,
		"editor.formatOnPaste": true
	},
	"[javascript]": {
		"editor.defaultFormatter": "vscode.typescript-language-features"
	},
	"[vue]": {
		"editor.defaultFormatter": "octref.vetur"
	},

	"vetur.format.options.useTabs": true,
	"vetur.completion.scaffoldSnippetSources": {},
	"vetur.experimental.templateInterpolationService": false,
	"files.associations": {
		"*.wpy": "vue",
		// 让 eslint 识别 .vue 文件
		"*.vue": "vue",
		"*.cjson": "jsonc",
		"*.wxss": "css",
		"*.wxs": "javascript"
	},
	"vetur.grammar.customBlocks": {},
	"eslint.codeAction.disableRuleComment": {},
	"eslint.packageManager": "yarn",
	// "vetur.format.defaultFormatterOptions": {
	// 	"js-beautify-html": {
	// 		"wrap_line_length": 80, //换行长度
	// 		"wrap_attributes": "auto", //属性换行
	// 		"end_with_newline": false
	// 	}
	// }
	"vetur.format.defaultFormatterOptions": {
		"prettyhtml": {
			"printWidth": 80, // No line exceeds 100 characters
			"singleQuote": false, // Prefer double quotes over single quotes
			"sortAttributes": true,
			"wrapAttributes": false
		}
	},
	// "[json]": {
	// 	"editor.defaultFormatter": "esbenp.prettier-vscode"
	// },
	"[html]": {
		"editor.defaultFormatter": "Wscats.eno"
	},
	"auto-close-tag.activationOnLanguage": [
		"xml",
		"php",
		"blade",
		"ejs",
		"jinja",
		"javascript",
		"javascriptreact",
		"typescript",
		"typescriptreact",
		"plaintext",
		"markdown",
		"vue",
		"liquid",
		"erb",
		"lang-cfml",
		"cfml",
		"HTML (EEx)",
		"HTML (Eex)",
		"plist"
	],
	"eslint.nodePath": "",
	"minapp-vscode.disableAutoConfig": true,
	"cSpell.userWords": [
		"Backtop",
		"bodify",
		"bundleless",
		"Childrens",
		"chunkhash",
		"codemirror",
		"countup",
		"datepicker",
		"dedupe",
		"dumi",
		"echarts",
		"Entrypoint",
		"errcode",
		"esbuild",
		"fastify",
		"fullhash",
		"funcs",
		"guanghui",
		"icomoon",
		"iconfont",
		"iconmoon",
		"imageback",
		"imgs",
		"instanceof",
		"iterm",
		"josephxia",
		"KHTML",
		"leetcode",
		"linktype",
		"mfsu",
		"middlewares",
		"mixins",
		"mvvm",
		"nativeshare",
		"noopener",
		"noreferrer",
		"notranslate",
		"nums",
		"picther",
		"pnpm",
		"postrelease",
		"proto",
		"qingteng",
		"qinguanghui",
		"rwnd",
		"sendmsg",
		"stylelint",
		"svgs",
		"Tapable",
		"timepicker",
		"typeof",
		"UUIDV",
		"vant",
		"vite",
		"vitejs",
		"vnode",
		"vuepress",
		"Vuex",
		"wechat",
		"weex",
		"zhapi",
		"zhihu",
		"zindex"
	],

	"javascript.format.insertSpaceAfterSemicolonInForStatements": false,
	"better-comments.tags": [
		{
			"tag": "-",
			"color": "#98C379",
			"strikethrough": false,
			"underline": false,
			"backgroundColor": "transparent",
			"bold": false,
			"italic": false
		},
		{
			"tag": "!",
			"color": "#FF2D00",
			"strikethrough": false,
			"underline": false,
			"backgroundColor": "transparent",
			"bold": true,
			"italic": false
		},
		{
			"tag": "?",
			"color": "#70b673",
			"strikethrough": false,
			"underline": false,
			"backgroundColor": "transparent",
			"bold": true,
			"italic": false
		},
		{
			"tag": "//",
			"color": "#474747",
			"strikethrough": true,
			"underline": false,
			"backgroundColor": "transparent",
			"bold": false,
			"italic": false
		},
		{
			"tag": "todo",
			"color": "#FF8C00",
			"strikethrough": false,
			"underline": false,
			"backgroundColor": "transparent",
			"bold": true,
			"italic": false
		},
		{
			"tag": "*",
			"color": "#98C379",
			"strikethrough": false,
			"underline": false,
			"backgroundColor": "transparent",
			"bold": false,
			"italic": false
		}
	],
	"eslint.alwaysShowStatus": true,
	"vetur.format.enable": false,

	// 青藤云安全配置 开始

	"eslint.run": "onSave",
	"editor.defaultFormatter": "esbenp.prettier-vscode",
	"typescript.updateImportsOnFileMove.enabled": "always",
	"javascript.updateImportsOnFileMove.enabled": "always",
	"stylelint.validate": ["css", "less", "sass", "scss"],
	"[typescriptreact]": {
		"editor.defaultFormatter": "vscode.typescript-language-features"
	},
	"bracketPairColorizer.depreciation-notice": false,
	"markdown.math.enabled": false,
	"window.zoomLevel": 1,
	"security.workspace.trust.untrustedFiles": "open",
	"tslint.jsEnable": true,
	// 青藤云安全配置 结束

	// editor
	"editor.wordWrapColumn": 80,
	"editor.formatOnSave": true,
	"editor.accessibilitySupport": "off",
	"editor.cursorSmoothCaretAnimation": true,
	"editor.find.addExtraSpaceOnTop": false,
	"editor.fontFamily": "Monaco, Input Mono, Fira Code, monospace",
	"editor.fontLigatures": "'ss01', 'ss02', 'ss03', 'ss06', 'zero'",
	"editor.fontSize": 14,
	"editor.glyphMargin": true,
	"editor.guides.bracketPairs": "active",
	"editor.inlineSuggest.enabled": true,
	"editor.lineNumbers": "interval",
	"editor.multiCursorModifier": "ctrlCmd",
	"editor.renderWhitespace": "boundary",
	"editor.suggestSelection": "first",
	"editor.tabSize": 2,
	"editor.unicodeHighlight.invisibleCharacters": false,
	"editor.codeActionsOnSave": {
		"source.fixAll": false,
		"source.fixAll.eslint": true, // this allows ESLint to auto fix on save
		"source.organizeImports": false
	},

	// explorer
	"explorer.confirmDelete": false,
	"explorer.confirmDragAndDrop": false,

	// workbench
	"window.dialogStyle": "custom",
	"window.nativeTabs": true, // this is great, macOS only
	"window.titleBarStyle": "custom",
	"workbench.activityBar.visible": true,
	"workbench.editor.closeOnFileDelete": true,
	"workbench.editor.highlightModifiedTabs": true,
	"workbench.editor.tabCloseButton": "right",
	"workbench.list.smoothScrolling": true,
	"workbench.sideBar.location": "left",
	"workbench.startupEditor": "newUntitledFile",
	"workbench.tree.expandMode": "singleClick",
	"workbench.tree.indent": 10,

	// extensions
	"extensions.autoUpdate": "onlyEnabledExtensions",
	"extensions.ignoreRecommendations": true,

	// files
	"files.eol": "\n",
	"files.insertFinalNewline": true,
	"files.simpleDialog.enable": true,

	// Git
	"git.autofetch": true,
	"git.confirmSync": false,
	"git.enableSmartCommit": true,
	"git.untrackedChanges": "separate",

	// 其他
	"scm.diffDecorationsGutterWidth": 2,
	"debug.onTaskErrors": "debugAnyway",
	"diffEditor.ignoreTrimWhitespace": false,

	// search
	"search.exclude": {
		"**/.git": true,
		"**/.github": true,
		"**/.nuxt": true,
		"**/.output": true,
		"**/.pnpm": true,
		"**/.vscode": true,
		"**/.yarn": true,
		"**/bower_components": true,
		"**/dist/**": true,
		"**/logs": true,
		"**/node_modules": true,
		"**/out/**": true,
		"**/package-lock.json": true,
		"**/pnpm-lock.yaml": true,
		"**/tmp": true,
		"**/yarn.lock": true
	},

	// terminal 配置开始
	"terminal.integrated.fontSize": 12,
	"terminal.integrated.fontFamily": "Monaco",
	"terminal.integrated.lineHeight": 1.2,
	// 默认终端，改为 zsh (默认为 /bin/bash)
	"terminal.integrated.defaultProfile.osx": "zsh",
	"terminal.integrated.cursorBlinking": true,
	"terminal.integrated.cursorStyle": "line",
	"terminal.integrated.fontWeight": "300",
	"terminal.integrated.persistentSessionReviveProcess": "never",
	"terminal.integrated.tabs.enabled": true,

	// 侧边栏文件折叠
	"explorer.experimental.fileNesting.enabled": true,
	"explorer.experimental.fileNesting.expand": false,
	"explorer.experimental.fileNesting.patterns": {
		".gitignore": ".gitattributes, .gitmodules, .gitmessage, .mailmap, .git-blame*",
		"*.js": "$(capture).js.map, $(capture).min.js, $(capture).d.ts",
		"*.jsx": "$(capture).js",
		"*.ts": "$(capture).js, $(capture).*.ts",
		"*.tsx": "$(capture).ts",
		"*.vue": "$(capture).*.ts, $(capture).*.js",
		"index.d.ts": "*.d.ts",
		"shims.d.ts": "*.d.ts",
		"*.cpp": "$(capture).hpp, $(capture).h, $(capture).hxx",
		"*.cxx": "$(capture).hpp, $(capture).h, $(capture).hxx",
		"*.cc": "$(capture).hpp, $(capture).h, $(capture).hxx",
		"*.c": "$(capture).h",
		"go.mod": ".air*, go.sum",
		"default.nix": "shell.nix",
		"flake.nix": "flake.lock",
		"BUILD.bazel": "*.bzl, *.bazel, *.bazelrc, bazel.rc, .bazelignore, .bazelproject, WORKSPACE",
		"CMakeLists.txt": "*.cmake, *.cmake.in, .cmake-format.yaml, CMakePresets.json",
		".clang-tidy": ".clang-format",
		".env": "*.env, .env.*, env.d.ts",
		"dockerfile": ".dockerignore, dockerfile*",
		"package.json": ".browserslist*, .circleci*, .codecov, .commitlint*, .editorconfig, .eslint*, .firebase*, .flowconfig, .github*, .gitlab*, .gitpod*, .huskyrc*, .jslint*, .lintstagedrc*, .markdownlint*, .mocha*, .node-version, .nodemon*, .npm*, .nvmrc, .pm2*, .pnp.*, .pnpm*, .prettier*, .releaserc*, .sentry*, .stackblitz*, .styleci*, .stylelint*, .tazerc*, .textlint*, .tool-versions, .travis*, .vscode*, .watchman*, .xo-config*, .yamllint*, .yarnrc*, api-extractor.json, appveyor*, ava.config.*, azure-pipelines*, bower.json, build.config.*, commitlint*, crowdin*, cypress.json, dangerfile*, dprint.json, firebase.json, grunt*, gulp*, jasmine.*, jenkins*, jest.config.*, jsconfig.*, karma*, lerna*, lint-staged*, nest-cli.*, netlify*, nodemon*, nx.*, package-lock.json, playwright.config.*, pm2.*, pnpm*, prettier*, pullapprove*, puppeteer.config.*, renovate*, rollup.config.*, stylelint*, tsconfig.*, tsdoc.*, tslint*, tsup.config.*, turbo*, typedoc*, vercel*, vetur.config.*, vitest.config.*, webpack.config.*, workspace.json, xo.config.*, yarn*",
		"rush.json": ".browserslist*, .circleci*, .codecov, .commitlint*, .editorconfig, .eslint*, .firebase*, .flowconfig, .github*, .gitlab*, .gitpod*, .huskyrc*, .jslint*, .lintstagedrc*, .markdownlint*, .mocha*, .node-version, .nodemon*, .npm*, .nvmrc, .pm2*, .pnp.*, .pnpm*, .prettier*, .releaserc*, .sentry*, .stackblitz*, .styleci*, .stylelint*, .tazerc*, .textlint*, .tool-versions, .travis*, .vscode*, .watchman*, .xo-config*, .yamllint*, .yarnrc*, api-extractor.json, appveyor*, ava.config.*, azure-pipelines*, bower.json, build.config.*, commitlint*, crowdin*, cypress.json, dangerfile*, dprint.json, firebase.json, grunt*, gulp*, jasmine.*, jenkins*, jest.config.*, jsconfig.*, karma*, lerna*, lint-staged*, nest-cli.*, netlify*, nodemon*, nx.*, package-lock.json, playwright.config.*, pm2.*, pnpm*, prettier*, pullapprove*, puppeteer.config.*, renovate*, rollup.config.*, stylelint*, tsconfig.*, tsdoc.*, tslint*, tsup.config.*, turbo*, typedoc*, vercel*, vetur.config.*, vitest.config.*, webpack.config.*, workspace.json, xo.config.*, yarn*",
		"readme.*": "authors, backers.md, changelog*, citation*, code_of_conduct.md, codeowners, contributing.md, contributors, copying, credits, governance.md, history.md, license*, maintainers, readme*, security.md, sponsors.md",
		"cargo.toml": ".clippy.toml, .rustfmt.toml, cargo.lock, clippy.toml, cross.toml, rust-toolchain.toml, rustfmt.toml",
		"gemfile": ".ruby-version, gemfile.lock",
		"composer.json": "composer.lock, phpunit.xml*, psalm*.xml",
		"vite.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .htmlnanorc*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, cssnano.config.*, cypress.json, env.d.ts, htmlnanorc.*, index.html, jasmine.*, jest.config.*, jsconfig.*, karma*, playwright.config.*, postcss.config.*, puppeteer.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
		"vue.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .htmlnanorc*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, cssnano.config.*, cypress.json, env.d.ts, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, playwright.config.*, postcss.config.*, puppeteer.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
		"nuxt.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .htmlnanorc*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, cssnano.config.*, cypress.json, env.d.ts, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, playwright.config.*, postcss.config.*, puppeteer.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
		"next.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .htmlnanorc*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, cssnano.config.*, cypress.json, env.d.ts, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, next-env.d.ts, playwright.config.*, postcss.config.*, puppeteer.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
		"svelte.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .htmlnanorc*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, cssnano.config.*, cypress.json, env.d.ts, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, mdsvex.config.js, playwright.config.*, postcss.config.*, puppeteer.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*",
		"remix.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .htmlnanorc*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, cssnano.config.*, cypress.json, env.d.ts, htmlnanorc.*, jasmine.*, jest.config.*, jsconfig.*, karma*, playwright.config.*, postcss.config.*, puppeteer.config.*, remix.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, unocss.config.*, vitest.config.*, webpack.config.*, windi.config.*"
	},

	// vitesse 主题
	"window.autoDetectColorScheme": true,
	"workbench.preferredLightColorTheme": "Vitesse Light",
	"workbench.preferredDarkColorTheme": "Vitesse Dark",
	"workbench.productIconTheme": "icons-carbon",

	// Extension configs
	"emmet.includeLanguages": {
		"javascript": "javascriptreact",
		"wxml": "html"
	},
	"emmet.showSuggestionsAsSnippets": true,
	"emmet.triggerExpansionOnTab": false,
	"errorLens.enabledDiagnosticLevels": ["warning", "error"],
	"errorLens.excludeBySource": ["cSpell", "Grammarly", "eslint"],

	// Eslint
	"eslint.format.enable": true,
	"eslint.validate": [
		"javascript",
		"typescript",
		"javascriptreact",
		"typescriptreact",
		"vue",
		"html",
		"markdown",
		"jsonc",
		"json5"
	],
	// "eslint.codeAction.showDocumentation": {
	// 	"enable": true
	// },
	// "eslint.quiet": false,

	// github.copilot
	"github.copilot.enable": {
		"*": true,
		"markdown": true,
		"plaintext": false,
		"yaml": false
	},

	// cSpell
	"cSpell.allowCompoundWords": true,
	"cSpell.language": "en,en-US",

	// github
	"css.lint.hexColorLength": "ignore",
	"githubIssues.workingIssueFormatScm": "#${issueNumberLabel}",
	"githubPullRequests.fileListLayout": "tree",
	"gitlens.codeLens.authors.enabled": false,
	"gitlens.codeLens.enabled": false,
	"gitlens.codeLens.recentChange.enabled": false,
	"gitlens.menus": {
		"editor": {
			"blame": false,
			"clipboard": true,
			"compare": true,
			"history": false,
			"remote": false
		},
		"editorGroup": {
			"blame": true,
			"compare": false
		},
		"editorTab": {
			"clipboard": true,
			"compare": true,
			"history": true,
			"remote": true
		},
		"explorer": {
			"clipboard": true,
			"compare": true,
			"history": true,
			"remote": true
		},
		"scm": {
			"authors": true
		},
		"scmGroup": {
			"compare": true,
			"openClose": true,
			"stash": true
		},
		"scmGroupInline": {
			"stash": true
		},
		"scmItem": {
			"clipboard": true,
			"compare": true,
			"history": true,
			"remote": false,
			"stash": true
		}
	},

	// svg
	"svg.preview.mode": "svg",

	// vue3
	"volar.autoCompleteRefs": false,
	"volar.codeLens.pugTools": false,
	"volar.codeLens.scriptSetupTools": true,
	"volar.completion.preferredTagNameCase": "pascal",
	"volar.showWelcomePage": false,
	"volar.takeOverMode.enabled": true,

	// prettier
	"prettier.jsxSingleQuote": true,
	"prettier.requirePragma": true,
	"prettier.useEditorConfig": false,
	"prettier.vueIndentScriptAndStyle": true,
	"prettier.jsxBracketSameLine": true,
	"prettier.useTabs": true,
	"prettier.enable": true, // I only use Prettier for manually formatting
	"prettier.printWidth": 80,
	"prettier.semi": true,
	"prettier.trailingComma": "none",
	"prettier.singleQuote": true,
	"workbench.colorTheme": "Vitesse Dark"
}
