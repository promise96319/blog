import{_ as s,o as a,c as n,Q as l}from"./chunks/framework.c610f10c.js";const h=JSON.parse('{"title":"jiti / unbuild / tsup","description":"","frontmatter":{},"headers":[],"relativePath":"trend/jiti.md","filePath":"trend/jiti.md","lastUpdated":1695631559000}'),p={name:"trend/jiti.md"},o=l(`<h1 id="jiti-unbuild-tsup" tabindex="-1">jiti / unbuild / tsup <a class="header-anchor" href="#jiti-unbuild-tsup" aria-label="Permalink to &quot;jiti / unbuild / tsup&quot;">​</a></h1><h2 id="jiti" tabindex="-1">jiti <a class="header-anchor" href="#jiti" aria-label="Permalink to &quot;jiti&quot;">​</a></h2><p><a href="https://github.com/unjs/jiti" target="_blank" rel="noreferrer">https://github.com/unjs/jiti</a></p><blockquote><p>Runtime typescript and ESM support for Node.js (CommonJS) 用运行时的方式加载 typescript 和 ESM 文件。</p></blockquote><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// color.ts</span></span>
<span class="line"><span style="color:#F97583;">interface</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Color</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">red</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">number</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">green</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">number</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#FFAB70;">blue</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">number</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">color</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Color</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  red: </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  green: </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  blue: </span><span style="color:#79B8FF;">0</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;color&#39;</span><span style="color:#E1E4E8;">, color);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// color.ts</span></span>
<span class="line"><span style="color:#D73A49;">interface</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Color</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">red</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">number</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">green</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">number</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#E36209;">blue</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">number</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">color</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Color</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  red: </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  green: </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  blue: </span><span style="color:#005CC5;">0</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;color&#39;</span><span style="color:#24292E;">, color);</span></span></code></pre></div><p>通过 <code>jiti color.ts</code> 命令，可以看到，运行时加载的文件是：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">color { red: 0, green: 0, blue: 0 }</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">color { red: 0, green: 0, blue: 0 }</span></span></code></pre></div><p>同时可以通过程序的方式加载：</p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">jiti</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">require</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;jiti&#39;</span><span style="color:#E1E4E8;">)(__filename)</span></span>
<span class="line"><span style="color:#B392F0;">jiti</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;./color.ts&#39;</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">jiti</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">require</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;jiti&#39;</span><span style="color:#24292E;">)(__filename)</span></span>
<span class="line"><span style="color:#6F42C1;">jiti</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;./color.ts&#39;</span><span style="color:#24292E;">)</span></span></code></pre></div><p>运行这段代码可以将 <code>color.ts</code> 文件中的内容输出到控制台。</p><h2 id="unbuild" tabindex="-1">unbuild <a class="header-anchor" href="#unbuild" aria-label="Permalink to &quot;unbuild&quot;">​</a></h2><p><a href="https://github.com/unjs/unbuild" target="_blank" rel="noreferrer">https://github.com/unjs/unbuild</a></p><h3 id="stub" tabindex="-1">stub <a class="header-anchor" href="#stub" aria-label="Permalink to &quot;stub&quot;">​</a></h3><p><code>unbuild --stub</code> 命令会将文件转换为 <code>jiti</code> 程序形式:</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// color.ts.mjs</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> jiti </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;jiti&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">default</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">jiti</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">, { interopDefault: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;"> })(</span><span style="color:#9ECBFF;">&#39;/Users/qinguanghui/Desktop/tmp/jiti/a.ts&#39;</span><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// color.ts.mjs</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> jiti </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;jiti&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">default</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">jiti</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">null</span><span style="color:#24292E;">, { interopDefault: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;"> })(</span><span style="color:#032F62;">&#39;/Users/qinguanghui/Desktop/tmp/jiti/a.ts&#39;</span><span style="color:#24292E;">);</span></span></code></pre></div><p>对于库开发者来讲非常棒，省去了 <code>watch</code> 编译，直接 <code>unbuild --stub</code> 命令生成的产物等于引用 <code>typescript</code> 源码。</p><h3 id="mkdist" tabindex="-1">mkdist <a class="header-anchor" href="#mkdist" aria-label="Permalink to &quot;mkdist&quot;">​</a></h3><p><a href="https://github.com/unjs/mkdist" target="_blank" rel="noreferrer">https://github.com/unjs/mkdist</a> 打包后生成结构化的文件</p><h3 id="untype" tabindex="-1">untype <a class="header-anchor" href="#untype" aria-label="Permalink to &quot;untype&quot;">​</a></h3><p><a href="https://github.com/unjs/untyped" target="_blank" rel="noreferrer">https://github.com/unjs/untyped</a> 数据 =&gt; 解析数据结构 =&gt; 生成类型 =&gt; 生成 <code>markdown</code></p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { resolveSchema, generateTypes, generateMarkdown } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;untyped&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">markdown</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">generateMarkdown</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">generateTypes</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">resolveSchema</span><span style="color:#E1E4E8;">(defaultPlanet)))</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { resolveSchema, generateTypes, generateMarkdown } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;untyped&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">markdown</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">generateMarkdown</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">generateTypes</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">resolveSchema</span><span style="color:#24292E;">(defaultPlanet)))</span></span></code></pre></div><h2 id="tsup" tabindex="-1">tsup <a class="header-anchor" href="#tsup" aria-label="Permalink to &quot;tsup&quot;">​</a></h2><ul><li>基于 <code>esbuild</code></li><li>支持 <code>js/json/mjs/ts/tsx</code> 打包</li></ul><h2 id="参考" tabindex="-1">参考 <a class="header-anchor" href="#参考" aria-label="Permalink to &quot;参考&quot;">​</a></h2><p><a href="https://antfu.me/posts/publish-esm-and-cjs" target="_blank" rel="noreferrer">https://antfu.me/posts/publish-esm-and-cjs</a></p>`,25),e=[o];function t(r,c,i,y,E,d){return a(),n("div",null,e)}const b=s(p,[["render",t]]);export{h as __pageData,b as default};
