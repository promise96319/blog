import{_ as n,c as s,o as a,a as t}from"./app.f27e6278.js";const m='{"title":"\u865A\u62DF\u6EDA\u52A8","description":"","frontmatter":{},"headers":[{"level":2,"title":"\u9700\u6C42","slug":"\u9700\u6C42"},{"level":2,"title":"\u601D\u8DEF","slug":"\u601D\u8DEF"},{"level":3,"title":"\u5B9E\u9645\u6E32\u67D3\u5185\u5BB9\u8BA1\u7B97","slug":"\u5B9E\u9645\u6E32\u67D3\u5185\u5BB9\u8BA1\u7B97"},{"level":3,"title":"\u504F\u79FB\u91CF\u8BA1\u7B97","slug":"\u504F\u79FB\u91CF\u8BA1\u7B97"},{"level":2,"title":"\u95EE\u9898","slug":"\u95EE\u9898"},{"level":3,"title":"tree \u7EC4\u4EF6\u4F7F\u7528\u865A\u62DF\u6EDA\u52A8\u65F6\uFF0C\u6536\u8D77\u5C55\u5F00\u600E\u4E48\u5B9E\u73B0\u52A8\u753B\u6548\u679C\uFF1F","slug":"tree-\u7EC4\u4EF6\u4F7F\u7528\u865A\u62DF\u6EDA\u52A8\u65F6\uFF0C\u6536\u8D77\u5C55\u5F00\u600E\u4E48\u5B9E\u73B0\u52A8\u753B\u6548\u679C\uFF1F"},{"level":3,"title":"\u6EDA\u52A8\u5230\u67D0\u4E00\u884C","slug":"\u6EDA\u52A8\u5230\u67D0\u4E00\u884C"},{"level":2,"title":"\u77E5\u8BC6\u70B9","slug":"\u77E5\u8BC6\u70B9"}],"relativePath":"project/virtual-list.md","lastUpdated":1658881380000}',p={},o=t(`<h1 id="\u865A\u62DF\u6EDA\u52A8" tabindex="-1">\u865A\u62DF\u6EDA\u52A8 <a class="header-anchor" href="#\u865A\u62DF\u6EDA\u52A8" aria-hidden="true">#</a></h1><h2 id="\u9700\u6C42" tabindex="-1">\u9700\u6C42 <a class="header-anchor" href="#\u9700\u6C42" aria-hidden="true">#</a></h2><p>\u7EC4\u4EF6\u5E93\u91CC\u7684<code>tree</code>\u548C<code>select</code>\u7B49\u7EC4\u4EF6\u7531\u4E8E\u5C55\u793A\u7684\u6570\u636E\u91CF\u8FC7\u5927\uFF0C\u5BFC\u81F4\u754C\u9762\u5361\u987F\uFF0C\u9700\u8981\u901A\u8FC7\u865A\u62DF\u6EDA\u52A8\u6765\u89E3\u51B3\u8FD9\u4E2A\u95EE\u9898\uFF0C\u5E76\u4E14\u9700\u8981\u652F\u6301\u884C\u9AD8\u5EA6\u975E\u7B49\u9AD8\u7684\u60C5\u51B5\u3002</p><h2 id="\u601D\u8DEF" tabindex="-1">\u601D\u8DEF <a class="header-anchor" href="#\u601D\u8DEF" aria-hidden="true">#</a></h2><h3 id="\u5B9E\u9645\u6E32\u67D3\u5185\u5BB9\u8BA1\u7B97" tabindex="-1">\u5B9E\u9645\u6E32\u67D3\u5185\u5BB9\u8BA1\u7B97 <a class="header-anchor" href="#\u5B9E\u9645\u6E32\u67D3\u5185\u5BB9\u8BA1\u7B97" aria-hidden="true">#</a></h3><p>\u9996\u6B21\u6E32\u67D3\u65F6\uFF0C\u7531\u4E8E\u4E0D\u77E5\u9053\u6BCF\u4E00\u884C\u7684\u9AD8\u5EA6\uFF0C\u6B64\u65F6\u53EF\u4EE5\u901A\u8FC7\u7ED9\u5B9A\u4E00\u4E2A\u6700\u5C0F\u9AD8\u5EA6 <code>minItemHeight</code> \u6765\u8BA1\u7B97\u9700\u8981\u6E32\u67D3\u7684\u5185\u5BB9\u3002\u56E0\u4E3A\u6839\u636E\u6700\u5C0F\u9AD8\u5EA6\u8BA1\u7B97\u51FA\u6765\u7684\u7ED3\u679C\u6700\u7EC8\u6E32\u67D3\u51FA\u6765\u7684\u5185\u5BB9\u9AD8\u5EA6\u80AF\u5B9A\u662F\u5927\u4E8E\u89C6\u53E3\u9AD8\u5EA6\u7684\u3002\u5982\uFF1A</p><div class="language-ts"><pre><code><span class="token comment">// \u5E94\u8BE5\u6E32\u67D3\u7684\u6570\u76EE</span>
<span class="token keyword">const</span> count <span class="token operator">=</span> viewportHeight <span class="token operator">/</span> minItemHeight

<span class="token comment">// \u5B9E\u9645\u6E32\u67D3\u7684\u9AD8\u5EA6\u6C38\u8FDC\u662F\u5927\u4E8E\u89C6\u53E3\u9AD8\u5EA6\u7684</span>
count <span class="token operator">*</span> \u6BCF\u884C\u7684\u5B9E\u9645\u9AD8\u5EA6 <span class="token operator">&gt;</span> viewportHeight
</code></pre></div><p>\u5B9E\u9645\u7684\u8BA1\u7B97\u7ED3\u679C\u5982\u4E0B\uFF1A</p><div class="language-ts"><pre><code><span class="token function-variable function">calculateChildrenRange</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  start<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span> <span class="token comment">// \u8D77\u59CB\u7D22\u5F15</span>
  end<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span> <span class="token comment">// \u7ED3\u675F\u7D22\u5F15</span>
  offset<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span> <span class="token comment">// \u5185\u5BB9\u504F\u79FB\u91CF</span>
  scrollHeight<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span> <span class="token comment">// \u6574\u4F53\u6EDA\u52A8\u9AD8\u5EA6</span>
<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> data <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> scrollTop <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">;</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>isVirtual<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      start<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
      end<span class="token operator">:</span> data<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span>
      offset<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
      scrollHeight<span class="token operator">:</span> <span class="token number">0</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">let</span> startIndex<span class="token punctuation">;</span>
  <span class="token keyword">let</span> endIndex<span class="token punctuation">;</span>
  <span class="token keyword">let</span> startOffset<span class="token punctuation">;</span>
  <span class="token keyword">let</span> itemTop <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> data<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> item <span class="token operator">=</span> data<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token comment">// \u5982\u679C\u6CA1\u6709\u5B9E\u9645\u9AD8\u5EA6\uFF0C\u5C31\u91C7\u7528\u6700\u5C0F\u9AD8\u5EA6</span>
    <span class="token keyword">const</span> height <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getHeight</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> itemBottomOffset <span class="token operator">=</span> itemTop <span class="token operator">+</span> height<span class="token punctuation">;</span>

    <span class="token comment">// \u8BA1\u7B97\u7B2C\u4E00\u4E2A\u9700\u8981\u663E\u793A\u7684\u5185\u5BB9</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>itemBottomOffset <span class="token operator">&gt;=</span> scrollTop <span class="token operator">&amp;&amp;</span> startIndex <span class="token operator">===</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      startIndex <span class="token operator">=</span> i<span class="token punctuation">;</span>
      startOffset <span class="token operator">=</span> itemTop<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u8BA1\u7B97\u6700\u540E\u4E00\u4E2A\u9700\u8981\u663E\u793A\u7684\u5185\u5BB9</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>itemBottomOffset <span class="token operator">&gt;</span> scrollTop <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>height <span class="token operator">&amp;&amp;</span> endIndex <span class="token operator">===</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      endIndex <span class="token operator">=</span> i<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    itemTop <span class="token operator">=</span> itemBottomOffset<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  endIndex <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span><span class="token punctuation">(</span>endIndex <span class="token operator">||</span> data<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> data<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    start<span class="token operator">:</span> startIndex <span class="token operator">||</span> <span class="token number">0</span><span class="token punctuation">,</span>
    end<span class="token operator">:</span> endIndex<span class="token punctuation">,</span>
    offset<span class="token operator">:</span> startOffset <span class="token operator">||</span> <span class="token number">0</span><span class="token punctuation">,</span>
    scrollHeight<span class="token operator">:</span> itemTop
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="\u504F\u79FB\u91CF\u8BA1\u7B97" tabindex="-1">\u504F\u79FB\u91CF\u8BA1\u7B97 <a class="header-anchor" href="#\u504F\u79FB\u91CF\u8BA1\u7B97" aria-hidden="true">#</a></h3><p>\u7531\u4E8E\u884C\u9AD8\u672A\u77E5\uFF0C\u90A3\u4E48\u6EDA\u52A8\u540E\u5B9E\u9645\u6E32\u67D3\u5185\u5BB9\u7684\u5411\u4E0A\u504F\u79FB\u8DDD\u79BB\u4E5F\u5C31\u672A\u77E5\u3002\u6B64\u65F6\u53EF\u4EE5\u901A\u8FC7\u8BB0\u5F55\u6BCF\u4E00\u884C\u7684\u5B9E\u9645\u9AD8\u5EA6\u6765\u8BA1\u7B97\u504F\u79FB\u91CF\u3002\u6BCF\u6B21\u5185\u5BB9\u533A\u57DF\u6E32\u67D3\u5B8C\u6210\u65F6\uFF0C\u83B7\u53D6\u5B9E\u9645\u7684\u9AD8\u5EA6\u5E76\u8BB0\u5F55\u4E0B\u6765\uFF0C\u8FD9\u6837\u5728\u6EDA\u52A8\u540E\u504F\u79FB\u91CF\u5C31\u80FD\u901A\u8FC7\u8BB0\u5F55\u7684\u5B9E\u9645\u9AD8\u5EA6\u6765\u8BA1\u7B97\u4E86\uFF1A</p><div class="language-ts"><pre><code><span class="token comment">// \u6536\u96C6\u7684\u9AD8\u5EA6</span>
<span class="token keyword">private</span> itemHeights<span class="token operator">:</span> Map<span class="token operator">&lt;</span><span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span><span class="token punctuation">,</span> <span class="token builtin">number</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u5B9E\u9645\u6E32\u67D3</span>
<span class="token function-variable function">renderList</span> <span class="token operator">=</span> <span class="token punctuation">(</span>start<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> end<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> data<span class="token punctuation">,</span> <span class="token function-variable function">renderItem</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">null</span> <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">;</span>

  <span class="token keyword">return</span> data<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>start<span class="token punctuation">,</span> end <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>item<span class="token punctuation">,</span> index<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> originIndex <span class="token operator">=</span> start <span class="token operator">+</span> index<span class="token punctuation">;</span>
    <span class="token keyword">const</span> node <span class="token operator">=</span> <span class="token function">renderItem</span><span class="token punctuation">(</span>item<span class="token punctuation">,</span> originIndex<span class="token punctuation">)</span> <span class="token keyword">as</span> React<span class="token punctuation">.</span>ReactElement<span class="token punctuation">;</span>
    <span class="token keyword">const</span> key <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getKey</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> React<span class="token punctuation">.</span><span class="token function">cloneElement</span><span class="token punctuation">(</span>node<span class="token punctuation">,</span> <span class="token punctuation">{</span>
      key<span class="token punctuation">,</span>
      <span class="token comment">// \u6536\u96C6 ref \u5E76\u66F4\u65B0\u5B9E\u9645\u884C\u9AD8</span>
      <span class="token function-variable function">ref</span><span class="token operator">:</span> <span class="token punctuation">(</span>ele<span class="token operator">:</span> React<span class="token punctuation">.</span>ReactNode<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">collectRef</span><span class="token punctuation">(</span>item<span class="token punctuation">,</span> ele<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="\u95EE\u9898" tabindex="-1">\u95EE\u9898 <a class="header-anchor" href="#\u95EE\u9898" aria-hidden="true">#</a></h2><h3 id="tree-\u7EC4\u4EF6\u4F7F\u7528\u865A\u62DF\u6EDA\u52A8\u65F6\uFF0C\u6536\u8D77\u5C55\u5F00\u600E\u4E48\u5B9E\u73B0\u52A8\u753B\u6548\u679C\uFF1F" tabindex="-1"><code>tree</code> \u7EC4\u4EF6\u4F7F\u7528\u865A\u62DF\u6EDA\u52A8\u65F6\uFF0C\u6536\u8D77\u5C55\u5F00\u600E\u4E48\u5B9E\u73B0\u52A8\u753B\u6548\u679C\uFF1F <a class="header-anchor" href="#tree-\u7EC4\u4EF6\u4F7F\u7528\u865A\u62DF\u6EDA\u52A8\u65F6\uFF0C\u6536\u8D77\u5C55\u5F00\u600E\u4E48\u5B9E\u73B0\u52A8\u753B\u6548\u679C\uFF1F" aria-hidden="true">#</a></h3><p>\u7531\u4E8E\u662F\u865A\u62DF\u6EDA\u52A8\uFF0C\u6BCF\u6B21\u5C55\u5F00\u65F6\u4F1A\u81EA\u52A8\u8BA1\u7B97\u9700\u8981\u663E\u793A\u7684\u5185\u5BB9\u6570\u76EE\u3002\u5982\u679C\u6309\u7167\u539F\u6709\u7684\u5B9E\u73B0\uFF0C\u5728\u5C55\u5F00\u6536\u8D77\u65F6\uFF0C\u66F4\u65B0\u6570\u636E\uFF0C\u91CD\u65B0\u8BA1\u7B97\u663E\u793A\u5185\u5BB9\uFF0C\u662F\u4E0D\u4F1A\u6709\u5C55\u5F00\u6536\u8D77\u52A8\u753B\u7684\u3002</p><p>\u901A\u8FC7\u53C2\u8003<a href="https://github.dev/react-component/tree" target="_blank" rel="noopener noreferrer">rc-tree</a>\uFF0C\u603B\u7ED3\u4E86\u4E00\u4E0B\u5B9E\u73B0\u52A8\u753B\u7684\u601D\u8DEF\uFF1A</p><ul><li>\u5C55\u5F00\u6536\u8D77\u65F6\u8BB0\u5F55\u5C55\u5F00\u6536\u8D77\u7684\u5B50\u8282\u70B9\u6570\u636E <code>rangeNodes</code>\uFF08\u7528\u4E8E\u540E\u7EED\u505A\u52A8\u753B\uFF09\uFF0C\u4E0A\u4E00\u6B21\u7684\u6E32\u67D3\u6570\u636E <code>prevData</code>\uFF0C\u8FD9\u6B21\u66F4\u65B0\u7684\u6570\u636E <code>data</code>\u3002 <ul><li>\u5176\u4E2D <code>rangeNodes</code> \u9700\u8981\u8BA1\u7B97\u6700\u5C0F\u52A8\u753B\u7684\u8303\u56F4\uFF0C\u56E0\u4E3A\u5C55\u5F00\u7684\u5B50\u8282\u70B9\u6709\u53EF\u80FD\u6570\u636E\u91CF\u4E5F\u975E\u5E38\u5927\uFF0C\u53EF\u4EE5\u901A\u8FC7 <code>height/itemHeight</code> \u8BA1\u7B97\u5E94\u8BE5\u5C55\u793A\u52A8\u753B\u7684\u8282\u70B9\u6570\u3002</li></ul></li><li>\u5982\u679C\u662F\u5C55\u5F00\u65F6\uFF0C\u6B64\u65F6\u4E3A\u65B0\u589E\u6570\u636E\uFF1A <ul><li>\u5728\u4E0A\u4E00\u6B21\u6570\u636E <code>prevData</code> \u4E0A\uFF0C\u627E\u5230\u9700\u8981\u5C55\u5F00\u7684\u8282\u70B9\uFF0C\u5728\u540E\u9762\u6DFB\u52A0\u4E00\u4E2A\u5360\u4F4D\u8282\u70B9\uFF0C\u8BB0\u505A <code>transitionData</code>\uFF0C\u7528\u4E8E\u540E\u7EED\u6E32\u67D3\u5B50\u8282\u70B9\u5E76\u505A\u52A8\u753B\u3002</li><li>\u5728\u6E32\u67D3\u65F6\uFF0C\u901A\u8FC7 <code>transitionData</code> \u6765\u6E32\u67D3\uFF0C\u5F53\u9047\u5230\u5360\u4F4D\u8282\u70B9\u65F6\uFF0C\u7528 <code>rangeNodes</code> \u6E32\u67D3\u9700\u8981\u5C55\u5F00\u7684\u5185\u5BB9\u3002\u8FD9\u4E2A\u65F6\u5019\u53EF\u4EE5\u901A\u8FC7 <code>rc-motion</code> \u6765\u5B9E\u73B0\u5C55\u5F00\u52A8\u753B\u3002</li><li><code>rc-motion</code> \u5C55\u5F00\u52A8\u753B\u7ED3\u675F\u540E\uFF0C\u4EA7\u751F <code>onAppearEnd</code> \u56DE\u8C03\uFF0C\u5728\u56DE\u8C03\u91CC\u5C06 <code>transitionData</code> \u8BBE\u7F6E\u4E3A <code>data</code> \u7528\u6700\u65B0\u7684\u6570\u636E\u91CD\u65B0\u6E32\u67D3\u3002</li></ul></li><li>\u5982\u679C\u662F\u6536\u8D77\uFF0C\u6B64\u65F6\u4E3A\u5220\u51CF\u6570\u636E\uFF1A <ul><li>\u6B64\u65F6\u903B\u8F91\u4E0E\u5C55\u5F00\u65F6\u5927\u4F53\u4E00\u81F4\uFF0C\u901A\u8FC7\u6700\u5148\u6570\u636E <code>data</code> \u6DFB\u52A0\u5360\u4F4D\u8282\u70B9\uFF0C\u5B9E\u73B0\u6536\u8D77\u52A8\u753B\uFF0C\u6536\u8D77\u5B8C\u6BD5\u540E\uFF0C\u5237\u65B0\u6570\u636E\u3002</li></ul></li></ul><p>\u56E0\u6B64\uFF0C\u6574\u4F53\u7684\u601D\u8DEF\u5927\u81F4\u662F\uFF1A\u5728\u76F4\u63A5\u66F4\u65B0\u6570\u636E\u524D\uFF0C\u4F1A\u8BA1\u7B97\u9700\u8981\u5C55\u5F00\u6536\u8D77\u7684\u6570\u636E\uFF0C\u7528\u8FD9\u4E9B\u6570\u636E\u505A\u52A8\u753B\uFF0C\u505A\u5B8C\u4E86\u52A8\u753B\u5C06\u6570\u636E\u66F4\u65B0\u91CD\u65B0\u6E32\u67D3\uFF08\u76F8\u5F53\u4E8E\u505A\u52A8\u753B\u6E32\u67D3\u7684\u8282\u70B9\u52A8\u753B\u5B8C\u6210\u540E\u4F1A\u88AB\u79FB\u9664\uFF0C\u7528\u6700\u65B0\u7684\u6570\u636E\u66FF\u4EE3\uFF09\u3002</p><p>\u4EE3\u7801\u5B9E\u73B0\u65F6\uFF0C\u9700\u8981\u5206\u4E3A\u51E0\u4E2A\u9636\u6BB5\uFF0C\u4E5F\u5BF9\u5E94\u7740\u51E0\u6B21\u66F4\u65B0\uFF1A</p><ul><li><code>done</code> \u9636\u6BB5\uFF1A\u4E3A\u521D\u59CB\u72B6\u6001\uFF0C\u8868\u793A\u65E0\u52A8\u753B\u6216\u8005\u52A8\u753B\u5B8C\u6210\u3002\u5F53\u6570\u636E\u66F4\u65B0\u65F6\uFF0C\u4F1A\u8BA1\u7B97\u53D8\u66F4\u7684\u6570\u636E\u3002\u5982\u679C\u662F\u5C55\u5F00\uFF0C\u4F1A\u8FDB\u5165\u5230 <code>show</code> \u9636\u6BB5\u3002\u5982\u679C\u662F\u6536\u8D77\uFF0C\u4F1A\u8FDB\u5165\u5230 <code>prepareHide</code> \u9636\u6BB5\u3002</li><li><code>show</code> \u9636\u6BB5\uFF1A\u6839\u636E\u8BA1\u7B97\u7684\u52A8\u753B\u6570\u636E\uFF0C\u505A\u5C55\u5F00\u52A8\u753B\u3002\u52A8\u753B\u7ED3\u675F\u540E\uFF0C\u56DE\u5230 <code>done</code> \u9636\u6BB5\u3002</li><li><code>prepareHide</code> \u9636\u6BB5\uFF1A\u51C6\u5907\u6536\u8D77\u7684\u9636\u6BB5\u3002\u7531\u4E8E <code>rc-motion</code> \u6E32\u67D3\u8282\u70B9\u65F6\uFF0C\u9700\u8981 <code>visible</code> \u4ECE <code>true</code> \u5230 <code>false</code> \u7684\u4E00\u4E2A\u8F6C\u53D8\u624D\u80FD\u505A\u52A8\u753B\uFF0C\u5373\u5148\u5C55\u5F00\u540E\u9690\u85CF\u3002\u5C55\u5F00\u65F6\u4E0D\u9700\u8981\u52A8\u753B\u6548\u679C\u3002\u5C55\u5F00\u5B8C\u6210\u540E\u901A\u8FC7 <code>onAppearEnd</code> \u8FDB\u5165\u5230 <code>hide</code> \u9636\u6BB5\u3002</li><li><code>hide</code> \u9636\u6BB5\uFF1A\u5C06 <code>visible</code> \u7F6E\u4E3A <code>false</code>\uFF0C\u52A8\u753B\u5B8C\u6210\u540E\u56DE\u5230 <code>done</code> \u9636\u6BB5\u3002</li></ul><p>\u6838\u5FC3\u903B\u8F91\u5B9E\u73B0\uFF1A</p><div class="language-ts"><pre><code><span class="token function">updateTransitionData</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> status<span class="token punctuation">,</span> data<span class="token punctuation">,</span> prevData<span class="token punctuation">,</span> expandInfo <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>status <span class="token operator">===</span> <span class="token string">&#39;prepareHide&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> visible<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> status<span class="token operator">:</span> <span class="token string">&#39;hide&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>status <span class="token operator">!==</span> <span class="token string">&#39;done&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">const</span> <span class="token punctuation">{</span> expandStatus<span class="token punctuation">,</span> key<span class="token punctuation">,</span> list <span class="token punctuation">}</span> <span class="token operator">=</span> expandInfo<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>data <span class="token operator">===</span> prevData<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">isExpandInfoChange</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> prevData<span class="token operator">:</span> data<span class="token punctuation">,</span> transitionData<span class="token operator">:</span> data <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> status<span class="token operator">:</span> <span class="token string">&#39;prepare&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// \u5360\u4F4D\u8282\u70B9</span>
  <span class="token keyword">const</span> placeholderNode<span class="token operator">:</span> TreeNodeData <span class="token operator">=</span> <span class="token punctuation">{</span>
    label<span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
    value<span class="token operator">:</span> <span class="token constant">PLACEHOLDER_NODE_KEY</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> targetIndex <span class="token operator">=</span> prevData<span class="token punctuation">.</span><span class="token function">findIndex</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">{</span> value <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> value <span class="token operator">===</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// \u8BA1\u7B97\u6700\u5C0F\u52A8\u753B\u6570\u636E</span>
  <span class="token keyword">const</span> rangeNodes <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getMinimumRangeTransitionRange</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// \u5C55\u5F00</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>expandStatus<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> transitionData <span class="token operator">=</span> prevData<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    transitionData<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>targetIndex <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> placeholderNode<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      transitionData<span class="token punctuation">,</span>
      transitionRange<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token operator">...</span>rangeNodes<span class="token punctuation">]</span><span class="token punctuation">,</span>
      transitionType<span class="token operator">:</span> <span class="token string">&#39;show&#39;</span><span class="token punctuation">,</span>
      status<span class="token operator">:</span> <span class="token string">&#39;show&#39;</span><span class="token punctuation">,</span>
      visible<span class="token operator">:</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u6536\u8D77</span>
    <span class="token keyword">const</span> transitionData <span class="token operator">=</span> data<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    transitionData<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>targetIndex <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> placeholderNode<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      transitionData<span class="token punctuation">,</span>
      transitionRange<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token operator">...</span>rangeNodes<span class="token punctuation">]</span><span class="token punctuation">,</span>
      transitionType<span class="token operator">:</span> <span class="token string">&#39;hide&#39;</span><span class="token punctuation">,</span>
      status<span class="token operator">:</span> <span class="token string">&#39;prepareHide&#39;</span><span class="token punctuation">,</span>
      visible<span class="token operator">:</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token function">componentDidUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">updateTransitionData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function-variable function">handleMotionEnd</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> data<span class="token punctuation">,</span> expandInfo <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">;</span>
  <span class="token comment">// \u52A8\u753B\u7ED3\u675F\u540E\uFF0C\u66F4\u65B0\u5230\u6700\u65B0\u6570\u636E</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    prevData<span class="token operator">:</span> data<span class="token punctuation">,</span>
    prevExpandInfo<span class="token operator">:</span> expandInfo<span class="token punctuation">,</span>
    transitionData<span class="token operator">:</span> data<span class="token punctuation">,</span>
    transitionRange<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    transitionType<span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
    status<span class="token operator">:</span> <span class="token string">&#39;done&#39;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// \u6E32\u67D3\u52A8\u753B\u8282\u70B9</span>
<span class="token function-variable function">renderMotionTreeNode</span> <span class="token operator">=</span> <span class="token punctuation">(</span>node<span class="token operator">:</span> TreeNodeData<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> transitionType<span class="token punctuation">,</span> transitionRange <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">;</span>

  <span class="token comment">// \u5982\u679C\u662F\u5360\u4F4D\u8282\u70B9\uFF0C\u505A\u52A8\u753B\u6548\u679C</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>value <span class="token operator">===</span> <span class="token constant">PLACEHOLDER_NODE_KEY</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token function-variable function">getCollapsedHeight</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token punctuation">{</span> height<span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> <span class="token function-variable function">getRealHeight</span> <span class="token operator">=</span> <span class="token punctuation">(</span>dom<span class="token operator">:</span> HTMLElement<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> <span class="token punctuation">{</span> scrollHeight <span class="token punctuation">}</span> <span class="token operator">=</span> dom<span class="token punctuation">;</span>
      <span class="token keyword">return</span> <span class="token punctuation">{</span> height<span class="token operator">:</span> scrollHeight <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> <span class="token function-variable function">getCurrentHeight</span> <span class="token operator">=</span> <span class="token punctuation">(</span>dom<span class="token operator">:</span> HTMLElement<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token punctuation">{</span> height<span class="token operator">:</span> dom<span class="token punctuation">.</span>offsetHeight <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token keyword">const</span> motion <span class="token operator">=</span> <span class="token punctuation">{</span>
      onAppearStart<span class="token operator">:</span> getCollapsedHeight<span class="token punctuation">,</span>
      onEnterStart<span class="token operator">:</span> getCollapsedHeight<span class="token punctuation">,</span>
      onAppearActive<span class="token operator">:</span> getRealHeight<span class="token punctuation">,</span>
      onEnterActive<span class="token operator">:</span> getRealHeight<span class="token punctuation">,</span>
      onLeaveStart<span class="token operator">:</span> getCurrentHeight<span class="token punctuation">,</span>
      onLeaveActive<span class="token operator">:</span> getCollapsedHeight<span class="token punctuation">,</span>
      motionDeadline<span class="token operator">:</span> <span class="token number">500</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token punctuation">(</span>
      <span class="token operator">&lt;</span>CSSMotion
        <span class="token punctuation">{</span><span class="token operator">...</span>motion<span class="token punctuation">}</span>
        key<span class="token operator">=</span><span class="token punctuation">{</span>node<span class="token punctuation">.</span>value<span class="token punctuation">}</span>
        motionName<span class="token operator">=</span><span class="token punctuation">{</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>styleName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">-node-motion</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">}</span>
        onAppearEnd<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleMotionEnd<span class="token punctuation">}</span>
        onLeaveEnd<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>handleMotionEnd<span class="token punctuation">}</span>
        visible<span class="token operator">=</span><span class="token punctuation">{</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>visible<span class="token punctuation">}</span>
        motionAppear<span class="token operator">=</span><span class="token punctuation">{</span>transitionType <span class="token operator">===</span> <span class="token string">&#39;show&#39;</span><span class="token punctuation">}</span>
      <span class="token operator">&gt;</span>
        <span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">{</span> className<span class="token operator">:</span> motionClassName<span class="token punctuation">,</span> style<span class="token operator">:</span> motionStyle <span class="token punctuation">}</span><span class="token punctuation">,</span> motionRef<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token keyword">return</span> <span class="token punctuation">(</span>
            <span class="token operator">&lt;</span>div
              ref<span class="token operator">=</span><span class="token punctuation">{</span>motionRef<span class="token punctuation">}</span>
              className<span class="token operator">=</span><span class="token punctuation">{</span><span class="token function">classNames</span><span class="token punctuation">(</span>motionClassName<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>styleName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">-transition-block</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">}</span>
              style<span class="token operator">=</span><span class="token punctuation">{</span>motionStyle<span class="token punctuation">}</span>
            <span class="token operator">&gt;</span>
              <span class="token punctuation">{</span>transitionRange<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>renderTreeNode<span class="token punctuation">)</span><span class="token punctuation">}</span>
            <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
          <span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">}</span>
      <span class="token operator">&lt;</span><span class="token operator">/</span>CSSMotion<span class="token operator">&gt;</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">renderTreeNode</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

</code></pre></div><h3 id="\u6EDA\u52A8\u5230\u67D0\u4E00\u884C" tabindex="-1">\u6EDA\u52A8\u5230\u67D0\u4E00\u884C <a class="header-anchor" href="#\u6EDA\u52A8\u5230\u67D0\u4E00\u884C" aria-hidden="true">#</a></h3><h2 id="\u77E5\u8BC6\u70B9" tabindex="-1">\u77E5\u8BC6\u70B9 <a class="header-anchor" href="#\u77E5\u8BC6\u70B9" aria-hidden="true">#</a></h2><p><a href="https://www.zhangxinxu.com/wordpress/2020/08/css-overflow-anchor/" target="_blank" rel="noopener noreferrer">CSS overflow-anchor\u5C5E\u6027\u4E0E\u6EDA\u52A8\u951A\u5B9A</a></p>`,25),e=[o];function c(l,u,k,i,r,d){return a(),s("div",null,e)}var g=n(p,[["render",c]]);export{m as __pageData,g as default};
