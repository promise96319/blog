import{_ as s,o as a,c as n,a as l}from"./app.5a1d1f50.js";const d=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":2,"title":"函数式编程","slug":"函数式编程","link":"#函数式编程","children":[]},{"level":2,"title":"纯度","slug":"纯度","link":"#纯度","children":[]},{"level":2,"title":"幂等","slug":"幂等","link":"#幂等","children":[]},{"level":2,"title":"不变性","slug":"不变性","link":"#不变性","children":[]},{"level":2,"title":"链式编程","slug":"链式编程","link":"#链式编程","children":[{"level":3,"title":"惰性链","slug":"惰性链","link":"#惰性链","children":[]}]}],"relativePath":"javascript/函数式编程.md","lastUpdated":1693935732000}'),p={name:"javascript/函数式编程.md"},o=l(`<p>#《javascript 函数式编程》</p><h2 id="函数式编程" tabindex="-1">函数式编程 <a class="header-anchor" href="#函数式编程" aria-hidden="true">#</a></h2><p>函数既可以作为参数传入也可以作为值返回。</p><h2 id="纯度" tabindex="-1">纯度 <a class="header-anchor" href="#纯度" aria-hidden="true">#</a></h2><ul><li>其结果只能从它参数的值来计算。<div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> random </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#BABED8;"> Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">random</span><span style="color:#BABED8;">()</span></span>
<span class="line"></span></code></pre></div></li><li>不能依赖能被外部操作改变的数据。<div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#BABED8;"> global </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">1</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> random </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#BABED8;"> global </span></span>
<span class="line"><span style="color:#BABED8;">global </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">2</span></span>
<span class="line"><span style="color:#BABED8;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#BABED8;">(</span><span style="color:#82AAFF;">random</span><span style="color:#BABED8;">())</span></span>
<span class="line"></span></code></pre></div></li><li>不能改变外部的状态。<div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#BABED8;"> global </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">1</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> random </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#BABED8;"> global</span><span style="color:#89DDFF;">++</span></span>
<span class="line"></span></code></pre></div></li></ul><p>纯函数对于测试更加友好，功能职责清晰。</p><h2 id="幂等" tabindex="-1">幂等 <a class="header-anchor" href="#幂等" aria-hidden="true">#</a></h2><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 执行无数次后结果还是一样。</span></span>
<span class="line"><span style="color:#82AAFF;">add</span><span style="color:#BABED8;">(</span><span style="color:#82AAFF;">add</span><span style="color:#BABED8;">(</span><span style="color:#82AAFF;">add</span><span style="color:#BABED8;">())) </span><span style="color:#89DDFF;">===</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">add</span><span style="color:#BABED8;">()</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 比如</span></span>
<span class="line"><span style="color:#BABED8;">Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">abs</span><span style="color:#BABED8;">(Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">abs</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">42</span><span style="color:#BABED8;">)) </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> Math</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">abs</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">42</span><span style="color:#BABED8;">)</span></span>
<span class="line"></span></code></pre></div><h2 id="不变性" tabindex="-1">不变性 <a class="header-anchor" href="#不变性" aria-hidden="true">#</a></h2><ul><li>不可变对象应该在构造时固定它们的值而之后不能再修改。</li><li>不可变对象操作并返回新的对象。</li></ul><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> person </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span><span style="color:#BABED8;"> </span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">user</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 改变了原有的 person</span></span>
<span class="line"><span style="color:#BABED8;">person</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">age </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">18</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 隐藏可变性</span></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">merge</span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">obj1</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#BABED8;font-style:italic;">obj2</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{...</span><span style="color:#BABED8;">obj1</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">...</span><span style="color:#BABED8;">obj2</span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 不会修改原有的 person</span></span>
<span class="line"><span style="color:#82AAFF;">merge</span><span style="color:#BABED8;">(person</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span><span style="color:#BABED8;"> </span><span style="color:#F07178;">age</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#F78C6C;">18</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span></span>
<span class="line"></span></code></pre></div><h2 id="链式编程" tabindex="-1">链式编程 <a class="header-anchor" href="#链式编程" aria-hidden="true">#</a></h2><h3 id="惰性链" tabindex="-1">惰性链 <a class="header-anchor" href="#惰性链" aria-hidden="true">#</a></h3><blockquote><p>封装了一些行为的函数通常被称为 <code>chunk</code>。</p></blockquote>`,14),e=[o];function t(c,r,i,y,D,F){return a(),n("div",null,e)}const A=s(p,[["render",t]]);export{d as __pageData,A as default};
