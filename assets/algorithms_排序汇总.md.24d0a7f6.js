import{_ as n,c as s,o as a,a as p}from"./app.d5a482e8.js";const b='{"title":"\u6392\u5E8F\u7B97\u6CD5\u6C47\u603B","description":"","frontmatter":{},"headers":[{"level":2,"title":"\u5192\u6CE1\u6392\u5E8F","slug":"\u5192\u6CE1\u6392\u5E8F"},{"level":2,"title":"\u9009\u62E9\u6392\u5E8F","slug":"\u9009\u62E9\u6392\u5E8F"},{"level":2,"title":"\u63D2\u5165\u6392\u5E8F","slug":"\u63D2\u5165\u6392\u5E8F"},{"level":2,"title":"\u5E0C\u5C14\u6392\u5E8F","slug":"\u5E0C\u5C14\u6392\u5E8F"},{"level":2,"title":"\u5F52\u5E76\u6392\u5E8F","slug":"\u5F52\u5E76\u6392\u5E8F"},{"level":2,"title":"\u5FEB\u901F\u6392\u5E8F","slug":"\u5FEB\u901F\u6392\u5E8F"},{"level":2,"title":"\u5806\u6392\u5E8F","slug":"\u5806\u6392\u5E8F"}],"relativePath":"algorithms/\u6392\u5E8F\u6C47\u603B.md","lastUpdated":1657366488000}',t={},o=p(`<h1 id="\u6392\u5E8F\u7B97\u6CD5\u6C47\u603B" tabindex="-1">\u6392\u5E8F\u7B97\u6CD5\u6C47\u603B <a class="header-anchor" href="#\u6392\u5E8F\u7B97\u6CD5\u6C47\u603B" aria-hidden="true">#</a></h1><ul><li>\u5192\u6CE1\u6392\u5E8F</li><li>\u9009\u62E9\u6392\u5E8F</li><li>\u63D2\u5165\u6392\u5E8F</li><li>\u5E0C\u5C14\u6392\u5E8F</li><li>\u5F52\u5E76\u6392\u5E8F</li><li>\u5FEB\u901F\u6392\u5E8F</li><li>\u5806\u6392\u5E8F</li></ul><h2 id="\u5192\u6CE1\u6392\u5E8F" tabindex="-1">\u5192\u6CE1\u6392\u5E8F <a class="header-anchor" href="#\u5192\u6CE1\u6392\u5E8F" aria-hidden="true">#</a></h2><div class="tip custom-block"><p class="custom-block-title">\u5192\u6CE1\u6392\u5E8F</p><p>\u6838\u5FC3\u601D\u8DEF\uFF1A\u6BD4\u8F83\u201C\u5927\u201D\u7684\u5143\u7D20\u5411\u540E\u5192\u6CE1\u3002</p><p>\u65F6\u95F4\u590D\u6742\u5EA6\uFF1AO(n2)</p><p>\u7F3A\u70B9\uFF1A\u9891\u7E41\u4EA4\u6362\u5143\u7D20\uFF0C\u66F4\u591A\u7684\u5185\u5B58\u8BFB\u5199\u64CD\u4F5C\uFF0C\u5F71\u54CD\u6267\u884C\u6548\u7387\u3002</p></div><div class="language-javascript"><pre><code><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">52</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">,</span> <span class="token number">42</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">231</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">]</span>

<span class="token keyword">const</span> <span class="token function-variable function">bubbleSort</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">arr<span class="token punctuation">,</span> compare</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  compare <span class="token operator">=</span> compare <span class="token operator">||</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> a <span class="token operator">&lt;</span> b<span class="token punctuation">)</span>
  <span class="token comment">// \u4F18\u53161\uFF1A\u5982\u679C\u8FC7\u7A0B\u4E2D\u4E0D\u5B58\u5728\u4EA4\u6362\u7684\u72B6\u51B5\uFF0C\u8BF4\u660E\u5DF2\u7ECF\u6392\u5E8F\u597D\u4E86</span>
  <span class="token keyword">let</span> isSortCompleted <span class="token operator">=</span> <span class="token boolean">true</span>
  <span class="token comment">// \u4F18\u53162\uFF1A\u8BB0\u5F55\u6700\u540E\u4E00\u6B21\u4EA4\u6362\u7684index</span>
  <span class="token keyword">let</span> lastSwapIndex <span class="token operator">=</span> arr<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span>
  <span class="token comment">// \u904D\u5386\u7684\u8FB9\u754C</span>
  <span class="token keyword">let</span> sortBorder <span class="token operator">=</span> arr<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>j <span class="token operator">&lt;</span> sortBorder<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">compare</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span> arr<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token punctuation">[</span>arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span> arr<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>arr<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">]</span>
        isSortCompleted <span class="token operator">=</span> <span class="token boolean">false</span>
        lastSwapIndex <span class="token operator">=</span> j
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    sortBorder <span class="token operator">=</span> lastSwapIndex
    <span class="token keyword">if</span> <span class="token punctuation">(</span>isSortCompleted<span class="token punctuation">)</span> <span class="token keyword">break</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> arr
<span class="token punctuation">}</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">bubbleSort</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> a <span class="token operator">&lt;</span> b<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">// [2, 2, 3, 4, 10, 12, 13, 23, 42, 52, 231]</span>
</code></pre></div><h2 id="\u9009\u62E9\u6392\u5E8F" tabindex="-1">\u9009\u62E9\u6392\u5E8F <a class="header-anchor" href="#\u9009\u62E9\u6392\u5E8F" aria-hidden="true">#</a></h2><div class="tip custom-block"><p class="custom-block-title">\u9009\u62E9\u6392\u5E8F</p><p>\u6838\u5FC3\u601D\u8DEF\uFF1A\u4F9D\u6B21\u9009\u62E9\u6BD4\u8F83\u201C\u5927\u201D\u7684\u5143\u7D20\uFF0C\u6328\u4E2A\u5F80\u524D\u9762\u653E\u3002</p><p>\u65F6\u95F4\u590D\u6742\u5EA6\uFF1AO(n2)</p><p>\u7F3A\u70B9\uFF1A\u4E0D\u7A33\u5B9A\u6392\u5E8F\uFF0C\u503C\u76F8\u540C\u7684\u5143\u7D20\u6392\u5E8F\u540E\u53EF\u80FD\u987A\u5E8F\u53D1\u751F\u4E86\u53D8\u5316\u3002</p></div><div class="language-javascript"><pre><code><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">52</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">,</span> <span class="token number">42</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">231</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">]</span>

<span class="token keyword">const</span> <span class="token function-variable function">selectSort</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">arr<span class="token punctuation">,</span> compare</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  compare <span class="token operator">=</span> compare <span class="token operator">||</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> a <span class="token operator">&lt;</span> b<span class="token punctuation">)</span>

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>j <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">compare</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token punctuation">[</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> arr
<span class="token punctuation">}</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">selectSort</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> a <span class="token operator">&lt;</span> b<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">// [2, 2, 3, 4, 10, 12, 13, 23, 42, 52, 231]</span>
</code></pre></div><h2 id="\u63D2\u5165\u6392\u5E8F" tabindex="-1">\u63D2\u5165\u6392\u5E8F <a class="header-anchor" href="#\u63D2\u5165\u6392\u5E8F" aria-hidden="true">#</a></h2><div class="tip custom-block"><p class="custom-block-title">\u63D2\u5165\u6392\u5E8F</p><p>\u6838\u5FC3\u601D\u8DEF\uFF1A\u5BF9\u6BD4\u5F53\u524D\u5143\u7D20\u548C\u524D\u9762\u7684\u5143\u7D20\uFF0C\u5982\u679C\u4E0D\u7B26\u5408\u60C5\u51B5\u5219\u5C06\u524D\u9762\u5143\u7D20\u4F9D\u6B21\u540E\u79FB\u4E00\u4F4D\uFF0C\u76F4\u5230\u627E\u5230\u6B63\u786E\u7684\u4F4D\u7F6E\u8FDB\u884C\u63D2\u5165\u3002</p><p>\u65F6\u95F4\u590D\u6742\u5EA6\uFF1A\u6700\u574F\u60C5\u51B5\u4E0BO(n2)</p></div><div class="language-javascript"><pre><code><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">52</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">,</span> <span class="token number">42</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">231</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">]</span>

<span class="token keyword">const</span> <span class="token function-variable function">insertSort</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">arr<span class="token punctuation">,</span> compare</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  compare <span class="token operator">=</span> compare <span class="token operator">||</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> a <span class="token operator">&lt;</span> b<span class="token punctuation">)</span>

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u9700\u8981\u63D2\u5165\u7684\u5143\u7D20</span>
    <span class="token keyword">const</span> insertValue <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
    <span class="token keyword">let</span> j <span class="token operator">=</span> i <span class="token operator">-</span> <span class="token number">1</span>
    <span class="token comment">// \u4E0E\u524D\u9762\u5143\u7D20\u8FDB\u884C\u5224\u65AD\uFF0C\u4E0D\u6EE1\u8DB3\u7684\u8BDD\u4F9D\u6B21\u5C06\u5143\u7D20\u540E\u79FB</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>j <span class="token operator">&gt;=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token function">compare</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span> insertValue<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      arr<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span>
      j<span class="token operator">--</span>
    <span class="token punctuation">}</span>
    arr<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> insertValue
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> arr
<span class="token punctuation">}</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">insertSort</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> a <span class="token operator">&lt;</span> b<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">// [2, 2, 3, 4, 10, 12, 13, 23, 42, 52, 231]</span>
</code></pre></div><h2 id="\u5E0C\u5C14\u6392\u5E8F" tabindex="-1">\u5E0C\u5C14\u6392\u5E8F <a class="header-anchor" href="#\u5E0C\u5C14\u6392\u5E8F" aria-hidden="true">#</a></h2><div class="tip custom-block"><p class="custom-block-title">\u5E0C\u5C14\u6392\u5E8F</p><p>\u6838\u5FC3\u601D\u8DEF\uFF1A\u76F8\u5F53\u4E8E\u5728\u63D2\u5165\u6392\u5E8F\u4E4B\u524D\u505A\u4E86\u4E00\u4E2A\u9884\u5904\u7406\uFF0C\u8BA9\u6570\u636E\u53D8\u5F97\u66F4\u52A0\u201C\u6709\u5E8F\u201D\u3002\u8FD9\u6837\u5728\u63D2\u5165\u6392\u5E8F\u65F6\uFF0C\u5C31\u4F1A\u8FDB\u884C\u66F4\u5C11\u7684\u67E5\u627E\u548C\u5BF9\u6BD4\u4E86\u3002\u8FD9\u91CC\u7684\u201D\u9884\u5904\u7406\u201C\u8FC7\u7A0B\u662F\u7531\u5927\u95F4\u9694\u7684\u63D2\u5165\u6392\u5E8F\u5230\u5C0F\u95F4\u9694\u7684\u63D2\u5165\u6392\u5E8F\u7684\u8FC7\u7A0B\u3002</p></div><div class="language-javascript"><pre><code><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">52</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">,</span> <span class="token number">42</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">231</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">]</span>

<span class="token keyword">const</span> <span class="token function-variable function">shellSort</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">arr<span class="token punctuation">,</span> compare</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  compare <span class="token operator">=</span> compare <span class="token operator">||</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> a <span class="token operator">&lt;</span> b<span class="token punctuation">)</span>

  <span class="token keyword">let</span> hill <span class="token operator">=</span> <span class="token number">0</span>
  <span class="token comment">// \u8BA1\u7B97\u5E0C\u5C14\u95F4\u95F4\u9694\u5E8F\u5217\uFF0C\u4E3B\u8981\u76EE\u7684\u662F\u4F7F\u5F97\u8BA1\u7B97\u91CF\u5C3D\u53EF\u80FD\u7684\u5C0F</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>hill <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length <span class="token operator">/</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    hill <span class="token operator">=</span> hill <span class="token operator">*</span> <span class="token number">3</span> <span class="token operator">+</span> <span class="token number">1</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">while</span> <span class="token punctuation">(</span>hill <span class="token operator">&gt;=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> hill<span class="token punctuation">;</span>i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u9700\u8981\u63D2\u5165\u7684\u5143\u7D20</span>
      <span class="token keyword">const</span> insertValue <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
      <span class="token comment">// \u4E0E\u524D\u9762\u5143\u7D20\u8FDB\u884C\u5224\u65AD\uFF0C\u4E0D\u6EE1\u8DB3\u7684\u8BDD\u4F9D\u6B21\u5C06\u5143\u7D20\u540E\u79FB</span>
      <span class="token keyword">let</span> j <span class="token operator">=</span> i <span class="token operator">-</span> hill
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token punctuation">;</span>j <span class="token operator">&gt;=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token function">compare</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span> insertValue<span class="token punctuation">)</span><span class="token punctuation">;</span>j <span class="token operator">=</span> j <span class="token operator">-</span> hill<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        arr<span class="token punctuation">[</span>j <span class="token operator">+</span> hill<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span>
      <span class="token punctuation">}</span>
      arr<span class="token punctuation">[</span>j <span class="token operator">+</span> hill<span class="token punctuation">]</span> <span class="token operator">=</span> insertValue
    <span class="token punctuation">}</span>

    hill <span class="token operator">=</span> <span class="token punctuation">(</span>hill <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">3</span>
  <span class="token punctuation">}</span>


  <span class="token keyword">return</span> arr
<span class="token punctuation">}</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">shellSort</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> a <span class="token operator">&lt;</span> b<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">// [2, 2, 3, 4, 10, 12, 13, 23, 42, 52, 231]</span>
</code></pre></div><h2 id="\u5F52\u5E76\u6392\u5E8F" tabindex="-1">\u5F52\u5E76\u6392\u5E8F <a class="header-anchor" href="#\u5F52\u5E76\u6392\u5E8F" aria-hidden="true">#</a></h2><div class="tip custom-block"><p class="custom-block-title">\u5F52\u5E76\u6392\u5E8F</p><p>\u6838\u5FC3\u601D\u60F3\uFF1A\u5C06\u6570\u7EC4\u9012\u5F52\u5E73\u5206\uFF0C\u5148\u5C06\u6700\u5C0F\u7684\u6570\u7EC4\u6392\u5E8F\uFF0C\u7136\u540E\u5C06\u8FD9\u4E9B\u6570\u7EC4\u8FDB\u884C\u5408\u5E76\u3002\u7531\u4E8E\u5C0F\u6570\u7EC4\u5DF2\u7ECF\u5B58\u5728\u987A\u5E8F\u4E86\uFF0C\u6240\u4EE5\u5408\u5E76\u7684\u65F6\u5019\u53EA\u9700\u8981\u904D\u5386\u4E00\u904D\u5373\u53EF\u3002</p><p>\u65F6\u95F4\u590D\u6742\u5EA6\uFF1A\u9012\u5F52\u8FC7\u7A0B\u4E3Alogn\uFF0C\u6BCF\u4E00\u5C42\u7684\u6392\u5E8F\u4E3An\uFF0C\u56E0\u6B64\u590D\u6742\u5EA6\u4E3AO(nlogn)</p></div><div class="language-javascript"><pre><code><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">52</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">,</span> <span class="token number">42</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">231</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">]</span>

<span class="token keyword">const</span> <span class="token function-variable function">merge</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">arr<span class="token punctuation">,</span> start<span class="token punctuation">,</span> end<span class="token punctuation">,</span> compare</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5982\u679C\u53EA\u6709\u4E00\u4E2A\u5143\u7D20\uFF0C\u8FD4\u56DE</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>end <span class="token operator">===</span> start<span class="token punctuation">)</span> <span class="token keyword">return</span>
  <span class="token comment">// \u5982\u679C\u53EA\u6709\u4E24\u4E2A\u5143\u7D20\uFF0C\u8FDB\u884C\u4EA4\u6362</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>end <span class="token operator">-</span> start <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">compare</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>start<span class="token punctuation">]</span><span class="token punctuation">,</span> arr<span class="token punctuation">[</span>end<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token punctuation">[</span>arr<span class="token punctuation">[</span>start<span class="token punctuation">]</span><span class="token punctuation">,</span> arr<span class="token punctuation">[</span>end<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>arr<span class="token punctuation">[</span>end<span class="token punctuation">]</span><span class="token punctuation">,</span> arr<span class="token punctuation">[</span>start<span class="token punctuation">]</span><span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">const</span> middle <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token punctuation">(</span>end <span class="token operator">+</span> start<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span>
  <span class="token function">merge</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> start<span class="token punctuation">,</span> middle<span class="token punctuation">,</span> compare<span class="token punctuation">)</span>
  <span class="token function">merge</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> middle <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> end<span class="token punctuation">,</span> compare<span class="token punctuation">)</span>

  <span class="token keyword">let</span> leftIndex <span class="token operator">=</span> <span class="token number">0</span>
  <span class="token keyword">let</span> rightIndex <span class="token operator">=</span> <span class="token number">0</span>
  <span class="token keyword">let</span> tempArray <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token comment">// \u904D\u5386\u8FD9\u4E00\u6574\u6BB5\u6570\u7EC4</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> start<span class="token punctuation">;</span>i <span class="token operator">&lt;=</span> end<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5DE6\u4FA7\u6570\u7EC4\u7684\u503C</span>
    <span class="token keyword">const</span> leftValue <span class="token operator">=</span> arr<span class="token punctuation">[</span>start <span class="token operator">+</span> leftIndex<span class="token punctuation">]</span>
    <span class="token comment">// \u53F3\u4FA7\u6570\u7EC4\u7684\u503C</span>
    <span class="token keyword">const</span> rightValue <span class="token operator">=</span> arr<span class="token punctuation">[</span>middle <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">+</span> rightIndex<span class="token punctuation">]</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>leftIndex <span class="token operator">&lt;=</span> middle <span class="token operator">-</span> start <span class="token operator">&amp;&amp;</span> <span class="token function">compare</span><span class="token punctuation">(</span>leftValue<span class="token punctuation">,</span> rightValue<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      tempArray<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>leftValue<span class="token punctuation">)</span>
      leftIndex <span class="token operator">+=</span> <span class="token number">1</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      tempArray<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>rightValue<span class="token punctuation">)</span>
      rightIndex <span class="token operator">+=</span> <span class="token number">1</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u66F4\u6539\u6570\u7EC4\u7684\u539F\u59CB\u987A\u5E8F</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>i <span class="token operator">&lt;</span> tempArray<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    arr<span class="token punctuation">[</span>start <span class="token operator">+</span> i<span class="token punctuation">]</span> <span class="token operator">=</span> tempArray<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token function-variable function">mergeSort</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">arr<span class="token punctuation">,</span> compare</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  compare <span class="token operator">=</span> compare <span class="token operator">||</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> a <span class="token operator">&lt;</span> b<span class="token punctuation">)</span>
  <span class="token function">merge</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> arr<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> compare<span class="token punctuation">)</span>
  <span class="token keyword">return</span> arr
<span class="token punctuation">}</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">mergeSort</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> a <span class="token operator">&lt;</span> b<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">// [2, 2, 3, 4, 10, 12, 13, 23, 42, 52, 231]</span>
</code></pre></div><h2 id="\u5FEB\u901F\u6392\u5E8F" tabindex="-1">\u5FEB\u901F\u6392\u5E8F <a class="header-anchor" href="#\u5FEB\u901F\u6392\u5E8F" aria-hidden="true">#</a></h2><div class="tip custom-block"><p class="custom-block-title">\u5FEB\u901F\u6392\u5E8F</p><p>\u6838\u5FC3\u601D\u8DEF\uFF1A\u9009\u53D6\u57FA\u51C6\u503C\uFF0C\u904D\u5386\u6570\u7EC4\uFF0C\u5C0F\u4E8E\u57FA\u51C6\u503C\u7684\u653E\u5165\u5DE6\u4FA7\uFF0C\u5927\u4E8E\u57FA\u51C6\u503C\u7684\u653E\u5165\u53F3\u4FA7\uFF0C\u9012\u5F52\u6267\u884C\uFF0C\u76F4\u5230\u6700\u5C0F\u7684\u6570\u7EC4\u5747\u5B8C\u6210\u6392\u5E8F\u3002</p><p>\u65F6\u95F4\u590D\u6742\u5EA6\uFF1A\u6700\u574F\u60C5\u51B5\u4E0BO(n2)\uFF0C\u6700\u597D\u60C5\u51B5\u4E0BO(nlogn)</p></div><div class="language-javascript"><pre><code><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">52</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">,</span> <span class="token number">42</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">231</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">]</span>

<span class="token keyword">const</span> <span class="token function-variable function">quickSort</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">arr<span class="token punctuation">,</span> compare</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>arr<span class="token punctuation">.</span>length <span class="token operator">&lt;=</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">return</span> arr
  <span class="token keyword">let</span> lesser <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token keyword">let</span> greater <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token keyword">let</span> pivot <span class="token operator">=</span> arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">compare</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> pivot<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      lesser<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      greater<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">const</span> sortLesser <span class="token operator">=</span> <span class="token function">quickSort</span><span class="token punctuation">(</span>lesser<span class="token punctuation">,</span> compare<span class="token punctuation">)</span>
  <span class="token keyword">const</span> sortGreater <span class="token operator">=</span> <span class="token function">quickSort</span><span class="token punctuation">(</span>greater<span class="token punctuation">,</span> compare<span class="token punctuation">)</span>
  <span class="token keyword">return</span> sortLesser<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>pivot<span class="token punctuation">,</span> sortGreater<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">quickSort</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> a <span class="token operator">&lt;</span> b<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">// [2, 2, 3, 4, 10, 12, 13, 23, 42, 52, 231]</span>
</code></pre></div><h2 id="\u5806\u6392\u5E8F" tabindex="-1">\u5806\u6392\u5E8F <a class="header-anchor" href="#\u5806\u6392\u5E8F" aria-hidden="true">#</a></h2><div class="tip custom-block"><p class="custom-block-title">\u5806\u6392\u5E8F</p><p>\u6838\u5FC3\u601D\u8DEF\uFF1A\u5148\u5C06\u65E0\u5E8F\u6570\u7EC4\u6784\u5EFA\u6210\u5806\uFF0C\u7136\u540E\u904D\u5386\u53D6\u5806\u7684\u5934\u90E8\u6570\u636E\u653E\u5230\u6570\u7EC4\u672B\u5C3E\u3002</p><p>\u65F6\u95F4\u590D\u6742\u5EA6\uFF1AO(nlogn)</p></div><div class="language-javascript"><pre><code><span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">52</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">,</span> <span class="token number">42</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">231</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">]</span>

<span class="token keyword">const</span> <span class="token function-variable function">heapDown</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">arr<span class="token punctuation">,</span> parentIndex<span class="token punctuation">,</span> length<span class="token punctuation">,</span> compare</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> leftChildIndex <span class="token operator">=</span> <span class="token number">2</span> <span class="token operator">*</span> parentIndex <span class="token operator">+</span> <span class="token number">1</span>
  <span class="token keyword">let</span> rightChildIndex <span class="token operator">=</span> <span class="token number">2</span> <span class="token operator">*</span> parentIndex <span class="token operator">+</span> <span class="token number">2</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>leftChildIndex <span class="token operator">&gt;=</span> length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5DE6index\u8D85\u51FA\u754C\u9650</span>
    <span class="token keyword">return</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u627E\u51FA\u5DE6\u53F3\u8282\u70B9\u7684\u6700\u5927\u503C</span>
  <span class="token comment">// \u6CE8\u610F\u8FD9\u91CC\u7684 compare\u662F\u53D6\u53CD\u7684\uFF0C\u56E0\u4E3A\u540E\u7EED\u6392\u5E8F\u65F6\uFF0C\u6700\u5927\u503C\u653E\u5230\u6700\u540E\u9762\u4E86</span>
  <span class="token keyword">let</span> maxValueIndex <span class="token operator">=</span> leftChildIndex
  <span class="token keyword">if</span> <span class="token punctuation">(</span>rightChildIndex <span class="token operator">&lt;</span> length <span class="token operator">&amp;&amp;</span> <span class="token function">compare</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>maxValueIndex<span class="token punctuation">]</span><span class="token punctuation">,</span> arr<span class="token punctuation">[</span>rightChildIndex<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    maxValueIndex <span class="token operator">=</span> rightChildIndex
  <span class="token punctuation">}</span>

  <span class="token comment">// \u5982\u679C parentValue \u7B26\u5408\u8981\u6C42\uFF0C\u5219\u8DF3\u8FC7\u3002</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">compare</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>parentIndex<span class="token punctuation">]</span><span class="token punctuation">,</span> arr<span class="token punctuation">[</span>maxValueIndex<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u4EA4\u6362\u4F4D\u7F6E\uFF0C\u7136\u540E\u7EE7\u7EED\u5411\u4E0B\u8C03\u6574</span>
    <span class="token punctuation">[</span>arr<span class="token punctuation">[</span>parentIndex<span class="token punctuation">]</span><span class="token punctuation">,</span> arr<span class="token punctuation">[</span>maxValueIndex<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>arr<span class="token punctuation">[</span>maxValueIndex<span class="token punctuation">]</span><span class="token punctuation">,</span> arr<span class="token punctuation">[</span>parentIndex<span class="token punctuation">]</span><span class="token punctuation">]</span>
    <span class="token function">heapDown</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> maxValueIndex<span class="token punctuation">,</span> length<span class="token punctuation">,</span> compare<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token function-variable function">heapSort</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">arr<span class="token punctuation">,</span> compare</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> middleIndex <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span>length <span class="token operator">/</span> <span class="token number">2</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span>
  <span class="token comment">// \u4ECE n/2-1 \u957F\u5EA6\u5F00\u59CB\u904D\u5386\uFF0C\u4F9D\u6B21\u5C06\u7236\u5143\u7D20\u4E0B\u5C42\u3002</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> middleIndex<span class="token punctuation">;</span>i <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">heapDown</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> i<span class="token punctuation">,</span> arr<span class="token punctuation">.</span>length<span class="token punctuation">,</span> compare<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u904D\u5386 arr\uFF0C\u53D6\u51FA\u5934\u90E8\u6570\u636E</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> arr<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>i <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u6BCF\u6B21\u90FD\u53D6\u7B2C\u4E00\u4E2A\uFF0C\u7136\u540E\u4E0E\u6700\u540E\u4E00\u4E2A\u5143\u7D20\u4EA4\u6362</span>
    <span class="token punctuation">[</span>arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
    <span class="token comment">// \u4EA4\u6362\u5B8C\u540E\u8FDB\u884C\u8C03\u6574</span>
    <span class="token function">heapDown</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> i<span class="token punctuation">,</span> compare<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> arr
<span class="token punctuation">}</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">heapSort</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> a <span class="token operator">&lt;</span> b<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">// [2, 2, 3, 4, 10, 12, 13, 23, 42, 52, 231]</span>
</code></pre></div>`,23),e=[o];function c(u,l,k,r,i,m){return a(),s("div",null,e)}var h=n(t,[["render",c]]);export{b as __pageData,h as default};
