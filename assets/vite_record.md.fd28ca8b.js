import{_ as e,o as i,c as l,Q as r}from"./chunks/framework.b96c6c14.js";const u=JSON.parse('{"title":"record","description":"","frontmatter":{},"headers":[],"relativePath":"vite/record.md","filePath":"vite/record.md","lastUpdated":1698927918000}'),t={name:"vite/record.md"},a=r('<h1 id="record" tabindex="-1">record <a class="header-anchor" href="#record" aria-label="Permalink to &quot;record&quot;">​</a></h1><h2 id="依赖" tabindex="-1">依赖 <a class="header-anchor" href="#依赖" aria-label="Permalink to &quot;依赖&quot;">​</a></h2><ul><li>picocolors：打印信息，比 chalk 体积小，速度快。</li><li>execa： 执行命令，比 child_process 更好用。</li><li>fast-glob: 用于匹配文件，比 glob 更快。</li><li>fs-extra: 用于文件操作，比 fs 更好用。</li><li>minimist: 用于解析命令行参数，比 yargs 更好用。</li><li>prompts: 用于交互式命令行，比 inquirer 更好用。</li><li>resolve: 用于解析模块路径，比 require.resolve 更好用。</li><li>simple-git-hooks: 用于 git hooks，比 husky 更好用。</li><li>tslib: ts 运行时库，包含了一些工具函数。</li><li>cross-spawn: 跨平台执行命令，比 child_process 更好用。</li><li>unbuild: 用于解析模块依赖，比 esbuild 更好用。</li><li>cac: 用于构建命令行工具，比 commander 更好用。</li><li>chokidar: 用于监测文件变化，比 fs.watch 更好用。</li><li>connect: 用于给 http server 添加中间件的插件。</li><li>cors: 用于跨域。</li><li>es-module-lexer: 用于解析 esm 模块。</li><li>estree-walker: 用于遍历 ast。</li><li>etag: 用于生成 etag。</li></ul>',3),o=[a];function s(c,d,n,_,h,p){return i(),l("div",null,o)}const f=e(t,[["render",s]]);export{u as __pageData,f as default};
