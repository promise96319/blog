import{_ as s,o as a,c as n,Q as e}from"./chunks/framework.baea2d07.js";const _=JSON.parse('{"title":"响应式检测","description":"","frontmatter":{},"headers":[],"relativePath":"project/css-media.md","filePath":"project/css-media.md","lastUpdated":1699268300000}'),o={name:"project/css-media.md"},l=e(`<h1 id="响应式检测" tabindex="-1">响应式检测 <a class="header-anchor" href="#响应式检测" aria-label="Permalink to &quot;响应式检测&quot;">​</a></h1><ul><li>方案一：<code>@media</code> 媒体查询，在 <code>css</code>中使用。</li><li>方案二：<code>window.matchMedia</code> 媒体查询，在 <code>js</code>中使用 <ul><li>比较灵活</li><li>相较于监听窗口变化，性能更好</li></ul></li></ul><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">window.</span><span style="color:#B392F0;">matchMedia</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;(max-width: 600px)&#39;</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">addListener</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">e</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 当窗口宽度变化经过 600px 时，执行该回调。</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 参数中有 matches 判断窗口是否 match。</span></span>
<span class="line"><span style="color:#E1E4E8;">  console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(e)</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">window.</span><span style="color:#6F42C1;">matchMedia</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;(max-width: 600px)&#39;</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">addListener</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">function</span><span style="color:#24292E;">(</span><span style="color:#E36209;">e</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 当窗口宽度变化经过 600px 时，执行该回调。</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 参数中有 matches 判断窗口是否 match。</span></span>
<span class="line"><span style="color:#24292E;">  console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(e)</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><p>案例见：<a href="https://github.com/ant-design/ant-design/blob/master/components/_util/responsiveObserve.ts" target="_blank" rel="noreferrer">antd responsiveObserve</a></p>`,4),p=[l];function t(c,r,i,d,E,y){return a(),n("div",null,p)}const m=s(o,[["render",t]]);export{_ as __pageData,m as default};
