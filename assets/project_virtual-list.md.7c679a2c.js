import{_ as n,c as s,o as a,a as t}from"./app.28de33c1.js";const m='{"title":"\u865A\u62DF\u6EDA\u52A8","description":"","frontmatter":{},"headers":[{"level":2,"title":"\u9700\u6C42","slug":"\u9700\u6C42"},{"level":2,"title":"\u601D\u8DEF","slug":"\u601D\u8DEF"},{"level":3,"title":"\u5B9E\u9645\u6E32\u67D3\u5185\u5BB9\u8BA1\u7B97","slug":"\u5B9E\u9645\u6E32\u67D3\u5185\u5BB9\u8BA1\u7B97"},{"level":3,"title":"\u504F\u79FB\u91CF\u8BA1\u7B97","slug":"\u504F\u79FB\u91CF\u8BA1\u7B97"},{"level":2,"title":"\u95EE\u9898","slug":"\u95EE\u9898"},{"level":3,"title":"\u6EDA\u52A8\u65F6\u51FA\u73B0\u95EA\u52A8\u95EE\u9898","slug":"\u6EDA\u52A8\u65F6\u51FA\u73B0\u95EA\u52A8\u95EE\u9898"},{"level":3,"title":"\u6EDA\u52A8\u5230\u67D0\u4E00\u884C","slug":"\u6EDA\u52A8\u5230\u67D0\u4E00\u884C"},{"level":3,"title":"\u914D\u5408 tree \u65F6\u7684\u6536\u8D77\u5C55\u5F00\u529F\u80FD","slug":"\u914D\u5408-tree-\u65F6\u7684\u6536\u8D77\u5C55\u5F00\u529F\u80FD"}],"relativePath":"project/virtual-list.md","lastUpdated":1658793576000}',p={},o=t(`<h1 id="\u865A\u62DF\u6EDA\u52A8" tabindex="-1">\u865A\u62DF\u6EDA\u52A8 <a class="header-anchor" href="#\u865A\u62DF\u6EDA\u52A8" aria-hidden="true">#</a></h1><h2 id="\u9700\u6C42" tabindex="-1">\u9700\u6C42 <a class="header-anchor" href="#\u9700\u6C42" aria-hidden="true">#</a></h2><p>\u9700\u8981\u5B9E\u73B0\u975E\u56FA\u5B9A\u884C\u9AD8\u7684\u865A\u62DF\u6EDA\u52A8\u3002</p><h2 id="\u601D\u8DEF" tabindex="-1">\u601D\u8DEF <a class="header-anchor" href="#\u601D\u8DEF" aria-hidden="true">#</a></h2><h3 id="\u5B9E\u9645\u6E32\u67D3\u5185\u5BB9\u8BA1\u7B97" tabindex="-1">\u5B9E\u9645\u6E32\u67D3\u5185\u5BB9\u8BA1\u7B97 <a class="header-anchor" href="#\u5B9E\u9645\u6E32\u67D3\u5185\u5BB9\u8BA1\u7B97" aria-hidden="true">#</a></h3><p>\u9996\u6B21\u6E32\u67D3\u65F6\uFF0C\u7531\u4E8E\u4E0D\u77E5\u9053\u6BCF\u4E00\u884C\u7684\u9AD8\u5EA6\uFF0C\u6B64\u65F6\u53EF\u4EE5\u901A\u8FC7\u7ED9\u5B9A\u4E00\u4E2A\u6700\u5C0F\u9AD8\u5EA6 <code>minItemHeight</code> \u6765\u8BA1\u7B97\u9700\u8981\u6E32\u67D3\u7684\u5185\u5BB9\u3002\u56E0\u4E3A\u6839\u636E\u6700\u5C0F\u9AD8\u5EA6\u8BA1\u7B97\u51FA\u6765\u7684\u7ED3\u679C\u6700\u7EC8\u6E32\u67D3\u51FA\u6765\u7684\u5185\u5BB9\u9AD8\u5EA6\u80AF\u5B9A\u662F\u5927\u4E8E\u89C6\u53E3\u9AD8\u5EA6\u7684\u3002\u5982\uFF1A</p><div class="language-ts"><pre><code><span class="token comment">// \u5E94\u8BE5\u6E32\u67D3\u7684\u6570\u76EE</span>
<span class="token keyword">const</span> count <span class="token operator">=</span> viewportHeight <span class="token operator">/</span> minItemHeight

<span class="token comment">// \u5B9E\u9645\u6E32\u67D3\u7684\u9AD8\u5EA6\u6C38\u8FDC\u662F\u5927\u4E8E\u89C6\u53E3\u9AD8\u5EA6\u7684</span>
count <span class="token operator">*</span> \u6BCF\u884C\u7684\u5B9E\u9645\u9AD8\u5EA6 <span class="token operator">&gt;</span> viewportHeight
</code></pre></div><p>\u5B9E\u9645\u7684\u8BA1\u7B97\u7ED3\u679C\u5982\u4E0B\uFF1A</p><div class="language-ts"><pre><code><span class="token function-variable function">calculateChildrenRange</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  start<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span> <span class="token comment">// \u8D77\u59CB\u7D22\u5F15</span>
  end<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span> <span class="token comment">// \u7ED3\u675F\u7D22\u5F15</span>
  offset<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span> <span class="token comment">// \u5185\u5BB9\u504F\u79FB\u91CF</span>
  scrollHeight<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">;</span> <span class="token comment">// \u6574\u4F53\u6EDA\u52A8\u9AD8\u5EA6</span>
<span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> data <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> scrollTop <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">;</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">this</span><span class="token punctuation">.</span>isVirtual<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      start<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
      end<span class="token operator">:</span> data<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span>
      offset<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
      scrollHeight<span class="token operator">:</span> <span class="token number">0</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">let</span> startIndex<span class="token punctuation">;</span>
  <span class="token keyword">let</span> endIndex<span class="token punctuation">;</span>
  <span class="token keyword">let</span> startOffset<span class="token punctuation">;</span>
  <span class="token keyword">let</span> itemTop <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> data<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> item <span class="token operator">=</span> data<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token comment">// \u5982\u679C\u6CA1\u6709\u5B9E\u9645\u9AD8\u5EA6\uFF0C\u5C31\u91C7\u7528\u6700\u5C0F\u9AD8\u5EA6</span>
    <span class="token keyword">const</span> height <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getHeight</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> itemBottomOffset <span class="token operator">=</span> itemTop <span class="token operator">+</span> height<span class="token punctuation">;</span>

    <span class="token comment">// \u8BA1\u7B97\u7B2C\u4E00\u4E2A\u9700\u8981\u663E\u793A\u7684\u5185\u5BB9</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>itemBottomOffset <span class="token operator">&gt;=</span> scrollTop <span class="token operator">&amp;&amp;</span> startIndex <span class="token operator">===</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      startIndex <span class="token operator">=</span> i<span class="token punctuation">;</span>
      startOffset <span class="token operator">=</span> itemTop<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u8BA1\u7B97\u6700\u540E\u4E00\u4E2A\u9700\u8981\u663E\u793A\u7684\u5185\u5BB9</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>itemBottomOffset <span class="token operator">&gt;</span> scrollTop <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">.</span>height <span class="token operator">&amp;&amp;</span> endIndex <span class="token operator">===</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      endIndex <span class="token operator">=</span> i<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    itemTop <span class="token operator">=</span> itemBottomOffset<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  endIndex <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span><span class="token punctuation">(</span>endIndex <span class="token operator">||</span> data<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> data<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    start<span class="token operator">:</span> startIndex <span class="token operator">||</span> <span class="token number">0</span><span class="token punctuation">,</span>
    end<span class="token operator">:</span> endIndex<span class="token punctuation">,</span>
    offset<span class="token operator">:</span> startOffset <span class="token operator">||</span> <span class="token number">0</span><span class="token punctuation">,</span>
    scrollHeight<span class="token operator">:</span> itemTop
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="\u504F\u79FB\u91CF\u8BA1\u7B97" tabindex="-1">\u504F\u79FB\u91CF\u8BA1\u7B97 <a class="header-anchor" href="#\u504F\u79FB\u91CF\u8BA1\u7B97" aria-hidden="true">#</a></h3><p>\u7531\u4E8E\u884C\u9AD8\u672A\u77E5\uFF0C\u90A3\u4E48\u6E32\u67D3\u540E\u7684\u5411\u4E0A\u504F\u79FB\u8DDD\u79BB\u4E5F\u5C31\u672A\u77E5\u3002\u6B64\u65F6\u53EF\u4EE5\u901A\u8FC7\u8BB0\u5F55\u6BCF\u4E00\u884C\u7684\u5B9E\u9645\u9AD8\u5EA6\u6765\u8BA1\u7B97\u504F\u79FB\u91CF\u3002\u6BCF\u6B21\u5185\u5BB9\u533A\u57DF\u6E32\u67D3\u5B8C\u6210\u65F6\uFF0C\u83B7\u53D6\u5B9E\u9645\u7684\u9AD8\u5EA6\u5E76\u8BB0\u5F55\u4E0B\u6765\uFF0C\u8FD9\u6837\u504F\u79FB\u91CF\u5C31\u80FD\u901A\u8FC7\u8BB0\u5F55\u7684\u5B9E\u9645\u9AD8\u5EA6\u6765\u8BA1\u7B97\u4E86\uFF1A</p><div class="language-ts"><pre><code><span class="token comment">// \u6536\u96C6\u7684\u9AD8\u5EA6</span>
<span class="token keyword">private</span> itemHeights<span class="token operator">:</span> Map<span class="token operator">&lt;</span><span class="token builtin">string</span> <span class="token operator">|</span> <span class="token builtin">number</span><span class="token punctuation">,</span> <span class="token builtin">number</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u5B9E\u9645\u6E32\u67D3</span>
<span class="token function-variable function">renderList</span> <span class="token operator">=</span> <span class="token punctuation">(</span>start<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> end<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> data<span class="token punctuation">,</span> <span class="token function-variable function">renderItem</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">null</span> <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">;</span>

  <span class="token keyword">return</span> data<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>start<span class="token punctuation">,</span> end <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>item<span class="token punctuation">,</span> index<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> originIndex <span class="token operator">=</span> start <span class="token operator">+</span> index<span class="token punctuation">;</span>
    <span class="token keyword">const</span> node <span class="token operator">=</span> <span class="token function">renderItem</span><span class="token punctuation">(</span>item<span class="token punctuation">,</span> originIndex<span class="token punctuation">)</span> <span class="token keyword">as</span> React<span class="token punctuation">.</span>ReactElement<span class="token punctuation">;</span>
    <span class="token keyword">const</span> key <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getKey</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> React<span class="token punctuation">.</span><span class="token function">cloneElement</span><span class="token punctuation">(</span>node<span class="token punctuation">,</span> <span class="token punctuation">{</span>
      key<span class="token punctuation">,</span>
      <span class="token comment">// \u6536\u96C6 ref \u5E76\u66F4\u65B0\u5B9E\u9645\u884C\u9AD8</span>
      <span class="token function-variable function">ref</span><span class="token operator">:</span> <span class="token punctuation">(</span>ele<span class="token operator">:</span> React<span class="token punctuation">.</span>ReactNode<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">collectRef</span><span class="token punctuation">(</span>item<span class="token punctuation">,</span> ele<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="\u95EE\u9898" tabindex="-1">\u95EE\u9898 <a class="header-anchor" href="#\u95EE\u9898" aria-hidden="true">#</a></h2><h3 id="\u6EDA\u52A8\u65F6\u51FA\u73B0\u95EA\u52A8\u95EE\u9898" tabindex="-1">\u6EDA\u52A8\u65F6\u51FA\u73B0\u95EA\u52A8\u95EE\u9898 <a class="header-anchor" href="#\u6EDA\u52A8\u65F6\u51FA\u73B0\u95EA\u52A8\u95EE\u9898" aria-hidden="true">#</a></h3><p><a href="https://www.zhangxinxu.com/wordpress/2020/08/css-overflow-anchor/" target="_blank" rel="noopener noreferrer">CSS overflow-anchor\u5C5E\u6027\u4E0E\u6EDA\u52A8\u951A\u5B9A</a></p><h3 id="\u6EDA\u52A8\u5230\u67D0\u4E00\u884C" tabindex="-1">\u6EDA\u52A8\u5230\u67D0\u4E00\u884C <a class="header-anchor" href="#\u6EDA\u52A8\u5230\u67D0\u4E00\u884C" aria-hidden="true">#</a></h3><h3 id="\u914D\u5408-tree-\u65F6\u7684\u6536\u8D77\u5C55\u5F00\u529F\u80FD" tabindex="-1">\u914D\u5408 tree \u65F6\u7684\u6536\u8D77\u5C55\u5F00\u529F\u80FD <a class="header-anchor" href="#\u914D\u5408-tree-\u65F6\u7684\u6536\u8D77\u5C55\u5F00\u529F\u80FD" aria-hidden="true">#</a></h3>`,17),e=[o];function c(l,u,r,k,i,d){return a(),s("div",null,e)}var f=n(p,[["render",c]]);export{m as __pageData,f as default};
