import{_ as n,c as s,o as a,a as p}from"./app.943409a9.js";const m='{"title":"SplitChunksPlugin \u539F\u7406","description":"","frontmatter":{},"headers":[{"level":2,"title":"\u914D\u7F6E\u6587\u6863","slug":"\u914D\u7F6E\u6587\u6863"},{"level":2,"title":"\u9ED8\u8BA4cacheGroups","slug":"\u9ED8\u8BA4cachegroups"},{"level":2,"title":"\u89E6\u53D1\u65F6\u673A","slug":"\u89E6\u53D1\u65F6\u673A"},{"level":2,"title":"SplitChunksPlugin","slug":"splitchunksplugin"},{"level":2,"title":"\u4E3E\u4F8B","slug":"\u4E3E\u4F8B"},{"level":2,"title":"\u5339\u914DcacheGroups","slug":"\u5339\u914Dcachegroups"},{"level":2,"title":"\u8FC7\u6EE4chunksInfoMap","slug":"\u8FC7\u6EE4chunksinfomap"},{"level":2,"title":"\u751F\u6210\u65B0chunk","slug":"\u751F\u6210\u65B0chunk"},{"level":2,"title":"\u5904\u7406size","slug":"\u5904\u7406size"},{"level":2,"title":"\u603B\u7ED3","slug":"\u603B\u7ED3"}],"relativePath":"webpack/SplitChunksPlugin.md","lastUpdated":1652364123000}',t={},o=p(`<h1 id="splitchunksplugin-\u539F\u7406" tabindex="-1">SplitChunksPlugin \u539F\u7406 <a class="header-anchor" href="#splitchunksplugin-\u539F\u7406" aria-hidden="true">#</a></h1><h2 id="\u914D\u7F6E\u6587\u6863" tabindex="-1">\u914D\u7F6E\u6587\u6863 <a class="header-anchor" href="#\u914D\u7F6E\u6587\u6863" aria-hidden="true">#</a></h2><ul><li><a href="https://webpack.docschina.org/plugins/split-chunks-plugin/" target="_blank" rel="noopener noreferrer">webpack SplitChunksPlugin \u914D\u7F6E\u6587\u6863</a></li></ul><h2 id="\u9ED8\u8BA4cachegroups" tabindex="-1">\u9ED8\u8BA4cacheGroups <a class="header-anchor" href="#\u9ED8\u8BA4cachegroups" aria-hidden="true">#</a></h2><p>\u5728<code>webpack/lib/webpack.js</code>\u6587\u4EF6\u4E2D\uFF0C<code>createCompiler</code>\u65F6\u8C03\u7528<code>applyWebpackOptionsDefaults</code>\u51FD\u6570\u3002\u8BE5\u51FD\u6570\u4F1A\u4E3A<code>cacheGroups</code>\u8BBE\u7F6E\u4E24\u4E2A\u9ED8\u8BA4\u503C\uFF0C\u8FD9\u4E24\u4E2A\u9ED8\u8BA4\u503C\u5BF9\u5E94<code>webpack</code>\u7684\u4E24\u4E2A\u9ED8\u8BA4\u5206\u5305\u539F\u5219\u3002\u5176\u4E2D<code>defaultVendors</code>\u662F\u5E94\u7528\u4E8E<code>node_modules</code>\uFF1A</p><div class="language-javascript"><pre><code><span class="token constant">F</span><span class="token punctuation">(</span>cacheGroups<span class="token punctuation">,</span> <span class="token string">&quot;default&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">idHint</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">reuseExistingChunk</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token literal-property property">minChunks</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
  <span class="token literal-property property">priority</span><span class="token operator">:</span> <span class="token operator">-</span><span class="token number">20</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token constant">F</span><span class="token punctuation">(</span>cacheGroups<span class="token punctuation">,</span> <span class="token string">&quot;defaultVendors&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">idHint</span><span class="token operator">:</span> <span class="token string">&quot;vendors&quot;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">reuseExistingChunk</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token constant">NODE_MODULES_REGEXP</span><span class="token punctuation">,</span>
  <span class="token literal-property property">priority</span><span class="token operator">:</span> <span class="token operator">-</span><span class="token number">10</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="\u89E6\u53D1\u65F6\u673A" tabindex="-1">\u89E6\u53D1\u65F6\u673A <a class="header-anchor" href="#\u89E6\u53D1\u65F6\u673A" aria-hidden="true">#</a></h2><p>\u5728<code>Compilation.js</code>\u6587\u4EF6\u4E2D\uFF0C\u8C03\u7528<code>seal</code>\u65B9\u6CD5\u65F6\uFF0C\u5F53\u8C03\u7528<code>buildChunkGraph</code>\u4E4B\u540E\uFF0C\u5C31\u5EFA\u7ACB\u8D77\u4E86<code>modules</code>\u548C<code>chunks</code>\u7684\u5173\u7CFB\uFF0C\u6B64\u65F6\u4F1A\u5F00\u59CB\u89E6\u53D1<code>hooks.optimizeChunks</code>\u94A9\u5B50\uFF1A</p><div class="language-javascript"><pre><code><span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>hooks<span class="token punctuation">.</span><span class="token function">optimizeChunks</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>chunks<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>chunkGroups<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">/* empty */</span>
<span class="token punctuation">}</span>
</code></pre></div><p><code>hooks.optimizeChunks</code>\u94A9\u5B50\u89E6\u53D1\u4EE5\u4E0B\u51E0\u4E2A\u63D2\u4EF6\uFF1A</p><ul><li><code>RemoveEmptyChunksPlugin</code>\uFF1A</li></ul><div class="language-javascript"><pre><code><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> chunk <span class="token keyword">of</span> chunks<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u79FB\u9664\u4E0D\u5305\u542B runtime \u7684\u7A7A chunk</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>
    chunkGraph<span class="token punctuation">.</span><span class="token function">getNumberOfChunkModules</span><span class="token punctuation">(</span>chunk<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span>
    <span class="token operator">!</span>chunk<span class="token punctuation">.</span><span class="token function">hasRuntime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
    chunkGraph<span class="token punctuation">.</span><span class="token function">getNumberOfEntryModules</span><span class="token punctuation">(</span>chunk<span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token number">0</span>
  <span class="token punctuation">)</span> <span class="token punctuation">{</span>
    compilation<span class="token punctuation">.</span>chunkGraph<span class="token punctuation">.</span><span class="token function">disconnectChunk</span><span class="token punctuation">(</span>chunk<span class="token punctuation">)</span><span class="token punctuation">;</span>
    compilation<span class="token punctuation">.</span>chunks<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>chunk<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><ul><li><code>MergeDuplicateChunksPlugin</code>\uFF1A</li></ul><div class="language-javascript"><pre><code><span class="token comment">// \u5408\u5E76\u201D\u91CD\u590D\u201C\u7684chunk\u3002</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>chunkGraph<span class="token punctuation">.</span><span class="token function">canChunksBeIntegrated</span><span class="token punctuation">(</span>chunk<span class="token punctuation">,</span> otherChunk<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  chunkGraph<span class="token punctuation">.</span><span class="token function">integrateChunks</span><span class="token punctuation">(</span>chunk<span class="token punctuation">,</span> otherChunk<span class="token punctuation">)</span><span class="token punctuation">;</span>
  compilation<span class="token punctuation">.</span>chunks<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>otherChunk<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><ul><li><code>SplitChunksPlugin</code>\uFF1A\u8FDB\u884C\u5206\u5305\u3002</li></ul><h2 id="splitchunksplugin" tabindex="-1">SplitChunksPlugin <a class="header-anchor" href="#splitchunksplugin" aria-hidden="true">#</a></h2><p><code>SplitChunksPlugin</code>\u4E3B\u8981\u6709\u4EE5\u4E0B\u51E0\u4E2A\u4F5C\u7528\uFF1A</p><ul><li>\u63D0\u53D6\u516C\u5171\u4EE3\u7801\uFF1A\u6BD4\u5982\u4E0D\u540C<code>entry</code>\u4E2D\u5F15\u5165\u4E86\u76F8\u540C\u7684\u6A21\u5757\uFF0C\u6B64\u65F6\u53EF\u4EE5\u63D0\u53D6\u51FA\u6765\u3002</li><li>\u62C6\u5206\u8FC7\u5927\u7684<code>js</code>\u6587\u4EF6\uFF1A\u6BD4\u5982\u4ECE\u4E3B\u6A21\u5757\u4E2D\u5C06<code>node_modules</code>\u4E2D\u7684\u4EE3\u7801\u5355\u72EC\u62CE\u51FA\u6765\u3002</li><li>\u5408\u5E76\u96F6\u6563\u7684<code>js</code>\u6587\u4EF6\u3002</li></ul><p>\u8FD9\u51E0\u4E2A\u529F\u80FD\u4E3B\u8981\u90FD\u662F\u7531<code>cacheGroups</code>\u5B9E\u73B0\uFF0C\u5728\u521D\u59CB\u5316\u9636\u6BB5\uFF0C\u5DF2\u7ECF\u5B9A\u4E49\u597D\u4E86\u4E24\u4E2A\u9ED8\u8BA4\u7684<code>cacheGroups</code>\u3002</p><p>\u5728<code>webpack/lib/optimize</code>\u4E2D\u627E\u5230<code>SplitChunksPlugin</code>\u63D2\u4EF6\uFF1A</p><div class="language-javascript"><pre><code>compilation<span class="token punctuation">.</span>hooks<span class="token punctuation">.</span>optimizeChunks<span class="token punctuation">.</span><span class="token function">tap</span><span class="token punctuation">(</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;SplitChunksPlugin&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">stage</span><span class="token operator">:</span> <span class="token constant">STAGE_ADVANCED</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token parameter">chunks</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">)</span>
</code></pre></div><p>\u8BE5\u63D2\u4EF6\u56DE\u8C03\u51FD\u6570\u4F1A\u5728<code>hooks.optimizeChunks</code>\u94A9\u5B50\u89E6\u53D1\u65F6\u6267\u884C\uFF1A</p><div class="language-javascript"><pre><code><span class="token comment">// Compilation.js \u6587\u4EF6\u4E2D\u89E6\u53D1</span>
<span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>hooks<span class="token punctuation">.</span><span class="token function">optimizeChunks</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>chunks<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>chunkGroups<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">/* empty */</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u6B64\u65F6\u5DF2\u7ECF\u6784\u5EFA\u597D\u4E86<code>modules</code>\u548C<code>chunks</code>\u4E4B\u95F4\u7684\u5173\u7CFB\uFF0C\u4F46\u662F\u8FD8\u6CA1\u6709\u4E3A<code>chunks</code>\u751F\u6210\u5177\u4F53\u7684\u4EE3\u7801\u3002</p><h2 id="\u4E3E\u4F8B" tabindex="-1">\u4E3E\u4F8B <a class="header-anchor" href="#\u4E3E\u4F8B" aria-hidden="true">#</a></h2><p>\u5047\u8BBE\u6709\u4E24\u4E2A\u5165\u53E3\u6587\u4EF6<code>index1.js</code>\u548C<code>index2.js</code>\uFF0C\u4ED6\u4EEC\u540C\u65F6\u5F15\u5165\u4E86<code>moduleA.js</code>\u6587\u4EF6\uFF0C<code>webpack</code>\u7684\u914D\u7F6E\u5982\u4E0B\uFF1A</p><div class="language-javascript"><pre><code><span class="token comment">// webpack.config.js</span>
<span class="token punctuation">{</span>
  <span class="token literal-property property">splitChunks</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">chunks</span><span class="token operator">:</span> <span class="token string">&#39;all&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">cacheGroups</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">common</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">minSize</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token literal-property property">priority</span><span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span>
        <span class="token literal-property property">minChunks</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="\u5339\u914Dcachegroups" tabindex="-1">\u5339\u914DcacheGroups <a class="header-anchor" href="#\u5339\u914Dcachegroups" aria-hidden="true">#</a></h2><p><code>SplitChunksPlugin</code>\u9996\u5148\u4F1A\u904D\u5386\u6240\u6709<code>modules</code>\uFF0C\u7136\u540E\u6839\u636E\u5B9A\u4E49\u597D<code>cacheGroups</code>\u7684\u89C4\u5219\u8FDB\u884C\u5339\u914D\uFF1A</p><div class="language-javascript"><pre><code><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> module <span class="token keyword">of</span> compilation<span class="token punctuation">.</span>modules<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> cacheGroups <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>options<span class="token punctuation">.</span><span class="token function">getCacheGroups</span><span class="token punctuation">(</span>module<span class="token punctuation">,</span> context<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>cacheGroups<span class="token punctuation">)</span> <span class="token operator">||</span> cacheGroups<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">continue</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> cacheGroupSource <span class="token keyword">of</span> cacheGroups<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> cacheGroup <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">_getCacheGroup</span><span class="token punctuation">(</span>cacheGroupSource<span class="token punctuation">)</span><span class="token punctuation">;</span>

  	<span class="token comment">// ...</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u5E76\u4E14\u904D\u5386\u6240\u6709\u7684<code>cacheGroups</code>\uFF0C\u8FDB\u884C\u4E0B\u4E00\u6B65\u5904\u7406\uFF1A</p><div class="language-javascript"><pre><code><span class="token comment">// 1. \u83B7\u53D6 module \u5173\u8054\u7684 chunks</span>
<span class="token comment">// \u5BF9\u4E8E\u53EA\u6709\u4E00\u4E2A chunk \u4F7F\u7528\u8BE5 module \u65F6\uFF0C\u901A\u5E38\u53EA\u8FD4\u56DE [chunk]</span>
<span class="token comment">// \u5BF9\u4E8E\u591A\u4E2Achunk \u4F7F\u7528\u8BE5 module \u65F6\uFF0C\u901A\u5E38\u8FD4\u56DE [new Set(chunk1, chunk2), chunk1, chunk2]</span>
<span class="token keyword">const</span> combs <span class="token operator">=</span> cacheGroup<span class="token punctuation">.</span>usedExports
<span class="token operator">?</span> <span class="token function">getCombsByUsedExports</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token operator">:</span> <span class="token function">getCombs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> chunkCombination <span class="token keyword">of</span> combs<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5982\u679C\u662F Chunk\uFF0C\u8BF4\u660E\u53EA\u6709\u4E00\u4E2A chunk</span>
  <span class="token keyword">const</span> count <span class="token operator">=</span>
        chunkCombination <span class="token keyword">instanceof</span> <span class="token class-name">Chunk</span> <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> chunkCombination<span class="token punctuation">.</span>size<span class="token punctuation">;</span>
  <span class="token comment">// 2. \u5982\u679Cchunk\u7684\u4F7F\u7528\u6570\u5C0F\u4E8EminChunks\uFF0C\u90A3\u4E48\u4E0D\u7B26\u5408\u8981\u6C42\uFF0C\u76F4\u63A5\u9000\u51FA</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>count <span class="token operator">&lt;</span> cacheGroup<span class="token punctuation">.</span>minChunks<span class="token punctuation">)</span> <span class="token keyword">continue</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token literal-property property">chunks</span><span class="token operator">:</span> selectedChunks<span class="token punctuation">,</span> <span class="token literal-property property">key</span><span class="token operator">:</span> selectedChunksKey <span class="token punctuation">}</span> <span class="token operator">=</span>
        <span class="token function">getSelectedChunks</span><span class="token punctuation">(</span>chunkCombination<span class="token punctuation">,</span> cacheGroup<span class="token punctuation">.</span>chunksFilter<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">// 3. \u5C06\u7ED3\u679C\u8BB0\u5F55\u5230chunksInfoMap\u4E2D</span>
  <span class="token function">addModuleToChunksInfoMap</span><span class="token punctuation">(</span>
    cacheGroup<span class="token punctuation">,</span>
    cacheGroupIndex<span class="token punctuation">,</span>
    selectedChunks<span class="token punctuation">,</span>
    selectedChunksKey<span class="token punctuation">,</span>
    module
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p><code>chunksInfoMap</code>\u7ED3\u6784\u5982\u4E0B</p><div class="language-javascript"><pre><code>chunksInfoMap<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>
  <span class="token comment">// \u4F7F\u7528\u5230\u7684 chunks \u5F62\u6210\u7684 key</span>
  key<span class="token punctuation">,</span>
  <span class="token punctuation">(</span>info <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u540C\u4E00 cacheGroup \u5339\u914D\u5230\u7684 module \u4E14\u5728\u540C\u6837\u7684 chunks \u4E2D\u4F7F\u7528\u65F6</span>
    <span class="token comment">// \u5C06\u8FD9\u4E9B module \u5B58\u4E8E\u6B64\u5904</span>
    <span class="token literal-property property">modules</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">SortableSet</span><span class="token punctuation">(</span>
      <span class="token keyword">undefined</span><span class="token punctuation">,</span>
      compareModulesByIdentifier
    <span class="token punctuation">)</span><span class="token punctuation">,</span>
    cacheGroup<span class="token punctuation">,</span>
    cacheGroupIndex<span class="token punctuation">,</span>
    name<span class="token punctuation">,</span>
    <span class="token comment">// \u5BF9\u8C61\u5F62\u5F0F\uFF0C\u8BB0\u5F55\u5404\u79CD\u4E0D\u540C\u7684\u8D44\u6E90\u7684\u5927\u5C0F\uFF0C\u6BD4\u5982\uFF1A{ javascript: 200 }</span>
    <span class="token literal-property property">sizes</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token comment">// \u5305\u542B\u7684 chunks</span>
    <span class="token literal-property property">chunks</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token literal-property property">reuseableChunks</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token literal-property property">chunksKeys</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>\u8FD9\u6837\u6240\u6709<code>modules</code>\u7ECF\u8FC7\u4E0E<code>cacheGroup</code>\u5339\u914D\u540E\uFF0C\u5F62\u6210\u7684<code>chunksInfoMap</code>\u5C31\u80FD\u8868\u793A\u6BCF\u4E2A<code>cacheGroup</code>\u6D89\u53CA\u5230\u4E86\u54EA\u4E9B<code>module</code>\uFF0C\u800C\u8FD9\u4E9B<code>module</code>\u53C8\u5728\u54EA\u4E9B<code>chunks</code>\u91CC\u88AB\u7528\u5230\u3002</p><h2 id="\u8FC7\u6EE4chunksinfomap" tabindex="-1">\u8FC7\u6EE4chunksInfoMap <a class="header-anchor" href="#\u8FC7\u6EE4chunksinfomap" aria-hidden="true">#</a></h2><p>\u5F97\u5230<code>chunksInfoMap</code>\u540E\uFF0C\u4F1A\u5148\u5BF9\u5176\u8FDB\u884C\u8FC7\u6EE4\uFF1A</p><div class="language-javascript"><pre><code><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token punctuation">[</span>key<span class="token punctuation">,</span> info<span class="token punctuation">]</span> <span class="token keyword">of</span> chunksInfoMap<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">removeMinSizeViolatingModules</span><span class="token punctuation">(</span>info<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    chunksInfoMap<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>
    <span class="token operator">!</span><span class="token function">checkMinSizeReduction</span><span class="token punctuation">(</span>
      info<span class="token punctuation">.</span>sizes<span class="token punctuation">,</span>
      info<span class="token punctuation">.</span>cacheGroup<span class="token punctuation">.</span>minSizeReduction<span class="token punctuation">,</span>
      info<span class="token punctuation">.</span>chunks<span class="token punctuation">.</span>size
    <span class="token punctuation">)</span>
  <span class="token punctuation">)</span> <span class="token punctuation">{</span>
    chunksInfoMap<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p><code>chunksInfoMap</code>\u5B9E\u9645\u4E0A\u5BF9\u5E94\u4E8E\u5F85\u5206\u5305\u7684<code>chunk</code>\u3002\u901A\u8FC7<code>removeMinSizeViolatingModules</code>\u65B9\u6CD5\u5C06<code>chunks.size</code>\u548C<code>minSize</code>\u5BF9\u6BD4\uFF0C\u5982\u679C\u5C0F\u4E8E<code>minSize</code>\uFF0C\u90A3\u4E48\u5C06\u4E0D\u7B26\u5408\u5206\u5305\u7684\u89C4\u5B9A\uFF0C\u56E0\u6B64\u5C06\u5176\u5254\u9664\u6389\u3002</p><h2 id="\u751F\u6210\u65B0chunk" tabindex="-1">\u751F\u6210\u65B0chunk <a class="header-anchor" href="#\u751F\u6210\u65B0chunk" aria-hidden="true">#</a></h2><p>\u904D\u5386<code>chunksInfoMap</code>\uFF0C\u751F\u6210\u65B0\u7684<code>chunk</code>\uFF1A</p><div class="language-javascript"><pre><code><span class="token keyword">while</span> <span class="token punctuation">(</span>chunksInfoMap<span class="token punctuation">.</span>size <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> bestEntryKey<span class="token punctuation">;</span>
  <span class="token keyword">let</span> bestEntry<span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> pair <span class="token keyword">of</span> chunksInfoMap<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> key <span class="token operator">=</span> pair<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> info <span class="token operator">=</span> pair<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>
      bestEntry <span class="token operator">===</span> <span class="token keyword">undefined</span> <span class="token operator">||</span>
      <span class="token function">compareEntries</span><span class="token punctuation">(</span>bestEntry<span class="token punctuation">,</span> info<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">0</span>
    <span class="token punctuation">)</span> <span class="token punctuation">{</span>
      bestEntry <span class="token operator">=</span> info<span class="token punctuation">;</span>
      bestEntryKey <span class="token operator">=</span> key<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">const</span> item <span class="token operator">=</span> bestEntry<span class="token punctuation">;</span>
  chunksInfoMap<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>bestEntryKey<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u9996\u5148\u4F1A\u901A\u8FC7<code>compareEntries</code>\u65B9\u6CD5\u5BF9\u6BD4\u4F18\u5148\u7EA7\uFF0C\u770B\u54EA\u4E2A<code>cacheGroup</code>\u5BF9\u5E94\u7684<code>chunk</code>\u4F18\u5148\u751F\u6210\u3002\u7ECF\u8FC7\u4E00\u7CFB\u5217\u7684\u5904\u7406\u540E\uFF0C\u6700\u540E\u4F1A\u751F\u6210\u4E00\u4E2A\u7A7A<code>chunk</code>\uFF1A</p><div class="language-javascript"><pre><code><span class="token keyword">if</span> <span class="token punctuation">(</span>newChunk <span class="token operator">===</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  newChunk <span class="token operator">=</span> compilation<span class="token punctuation">.</span><span class="token function">addChunk</span><span class="token punctuation">(</span>chunkName<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u7136\u540E\u5BF9\u4E8E<code>cacheGroups</code>\u7684<code>module</code>\u6D89\u53CA\u5230\u7684\u5176\u4ED6<code>chunks</code>(\u4E5F\u5C31\u662F<code>usedChunks</code>)\uFF0C\u8C03\u7528<code>split</code>\u65B9\u6CD5\u8FDB\u884C\u5206\u5305\uFF1A</p><div class="language-javascript"><pre><code><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> chunk <span class="token keyword">of</span> usedChunks<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  chunk<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span>newChunk<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// Chunk \u7684 split \u65B9\u6CD5</span>
<span class="token function">split</span><span class="token punctuation">(</span><span class="token parameter">newChunk</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5BF9\u4E8E\u6BCF\u4E2A\u4F7F\u7528\u5230 chunk \u7684\u5730\u65B9\uFF0CnewChunk \u4E5F\u5E94\u8BE5\u88AB\u4F7F\u7528</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> chunkGroup <span class="token keyword">of</span> <span class="token keyword">this</span><span class="token punctuation">.</span>_groups<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    chunkGroup<span class="token punctuation">.</span><span class="token function">insertChunk</span><span class="token punctuation">(</span>newChunk<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    newChunk<span class="token punctuation">.</span><span class="token function">addGroup</span><span class="token punctuation">(</span>chunkGroup<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> idHint <span class="token keyword">of</span> <span class="token keyword">this</span><span class="token punctuation">.</span>idNameHints<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    newChunk<span class="token punctuation">.</span>idNameHints<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>idHint<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  newChunk<span class="token punctuation">.</span>runtime <span class="token operator">=</span> <span class="token function">mergeRuntime</span><span class="token punctuation">(</span>newChunk<span class="token punctuation">.</span>runtime<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>runtime<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u5BF9<code>newChunk</code>\u8FDB\u884C\u5904\u7406\uFF0C\u5176\u4E2D\u6BD4\u8F83\u91CD\u8981\u7684\u662F<code>modules</code>\u548C<code>usedChunks</code>\u7684\u5904\u7406\uFF1A</p><div class="language-javascript"><pre><code><span class="token comment">// usedChunks \u91CC\u9762\u9700\u8981\u79FB\u9664\u6240\u6709\u5DF2\u7ECF\u5206\u5305\u51FA\u53BB\u7684 modules</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> module <span class="token keyword">of</span> item<span class="token punctuation">.</span>modules<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> chunk <span class="token keyword">of</span> usedChunks<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    chunkGraph<span class="token punctuation">.</span><span class="token function">disconnectChunkAndModule</span><span class="token punctuation">(</span>chunk<span class="token punctuation">,</span> module<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token punctuation">[</span>key<span class="token punctuation">,</span> info<span class="token punctuation">]</span> <span class="token keyword">of</span> chunksInfoMap<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5982\u679C\u4E0E\u540E\u7EED\u5904\u7406\u7684 chunks \u5B58\u5728\u76F8\u540C chunk</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isOverlap</span><span class="token punctuation">(</span>info<span class="token punctuation">.</span>chunks<span class="token punctuation">,</span> usedChunks<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> updated <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> module <span class="token keyword">of</span> item<span class="token punctuation">.</span>modules<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5982\u679C\u540E\u7EED\u5904\u7406\u7684 modules \u5305\u542B\u6B64 module\uFF0C\u90A3\u4E48\u9700\u8981\u5220\u9664\u6389\uFF0C\u540E\u7EED\u4E0D\u518D\u5BF9\u8BE5module\u5206\u5305</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">.</span>modules<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>module<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        info<span class="token punctuation">.</span>modules<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>module<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> key <span class="token keyword">of</span> module<span class="token punctuation">.</span><span class="token function">getSourceTypes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          info<span class="token punctuation">.</span>sizes<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">-=</span> module<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        updated <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>updated<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>info<span class="token punctuation">.</span>modules<span class="token punctuation">.</span>size <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        chunksInfoMap<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">continue</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>
        <span class="token function">removeMinSizeViolatingModules</span><span class="token punctuation">(</span>info<span class="token punctuation">)</span> <span class="token operator">||</span>
        <span class="token operator">!</span><span class="token function">checkMinSizeReduction</span><span class="token punctuation">(</span>
          info<span class="token punctuation">.</span>sizes<span class="token punctuation">,</span>
          info<span class="token punctuation">.</span>cacheGroup<span class="token punctuation">.</span>minSizeReduction<span class="token punctuation">,</span>
          info<span class="token punctuation">.</span>chunks<span class="token punctuation">.</span>size
        <span class="token punctuation">)</span>
      <span class="token punctuation">)</span> <span class="token punctuation">{</span>
        chunksInfoMap<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">continue</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u81F3\u6B64\uFF0C\u5BF9\u4E8E\u6BCF\u4E2A<code>cacheGroup</code>\u5C31\u5DF2\u7ECF\u751F\u6210\u4E86\u76F8\u5E94\u7684<code>chunk</code>\u3002</p><h2 id="\u5904\u7406size" tabindex="-1">\u5904\u7406size <a class="header-anchor" href="#\u5904\u7406size" aria-hidden="true">#</a></h2><p>\u5F97\u5230<code>chunks</code>\u540E\u8FD8\u4F1A\u8FDB\u4E00\u6B65\u5BF9<code>chunk</code>\u5904\u7406\uFF0C\u5982<code>chunk</code>\u8FC7\u5927\u65F6\uFF0C\u4F1A\u518D\u6B21\u8FDB\u884C\u5206\u5305\u3002</p><div class="language-javascript"><pre><code><span class="token comment">// \u5C06 chunk \u518D\u6B21\u7EC6\u5206</span>
<span class="token keyword">const</span> results <span class="token operator">=</span> <span class="token function">deterministicGroupingForModules</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
	<span class="token comment">// ...</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><h2 id="\u603B\u7ED3" tabindex="-1">\u603B\u7ED3 <a class="header-anchor" href="#\u603B\u7ED3" aria-hidden="true">#</a></h2><p><code>SplitChunksPlugin</code>\u5728<code>hooks.optimizeChunks</code>\u94A9\u5B50\u89E6\u53D1\u65F6\u6267\u884C\uFF0C\u6B64\u65F6<code>modules</code>\u548C<code>chunks</code>\u7684\u5173\u7CFB\u5DF2\u5EFA\u7ACB\uFF0C\u4F46\u8FD8\u672A\u8FDB\u884C<code>code generate</code>\u3002</p><p><code>SplitChunksPlugin</code>\u4E3B\u8981\u7528\u4E8E\u63D0\u53D6\u516C\u5171\u4EE3\u7801\uFF0C\u62C6\u5206\u6216\u5408\u5E76\u4EE3\u7801\u7B49\uFF0C\u5176\u6838\u5FC3\u539F\u7406\u5982\u4E0B\uFF1A</p><ol><li>\u901A\u8FC7<code>cacheGroups</code>\u5339\u914D<code>modules</code>\uFF0C\u751F\u6210<code>chunksInfoMap</code>\u3002\u786E\u5B9A\u6BCF\u4E2A<code>cacheGroups</code>\u5BF9\u5E94\u54EA\u4E9B<code>modules</code>\uFF0C\u4EE5\u53CA\u8FD9\u4E9B<code>modules</code>\u6240\u5728\u7684<code>chunks</code>\u3002</li><li>\u904D\u5386<code>chunksInfoMap</code>\uFF0C\u6839\u636E<code>cacheGroups</code>\u91CC\u7684<code>modules</code>\u751F\u6210\u65B0<code>chunk</code>\u3002\u65AD\u5F00\u8FD9\u4E9B<code>modules</code>\u548C\u539F\u6709\u7684<code>chunks</code>\u7684\u5173\u7CFB\uFF0C\u5C06\u65B0<code>chunk</code>\u52A0\u5165\u5230\u539F\u6709<code>chunks</code>\u7684<code>chunkGroups</code>\u5F53\u4E2D\u3002</li><li>\u5BF9\u5206\u5305\u540E\u7684<code>chunks</code>\u518D\u6B21\u8FDB\u884C\u5904\u7406\uFF0C\u5982\u679C\u4F53\u79EF\u8FC7\u5927\u5C31\u4F1A\u8FDB\u884C\u518D\u6B21\u5206\u5305\u3002</li></ol>`,56),c=[o];function e(u,l,k,i,r,d){return a(),s("div",null,c)}var y=n(t,[["render",e]]);export{m as __pageData,y as default};
