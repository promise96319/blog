import{_ as s,c as a,o as n,a as l}from"./app.788a9091.js";const F=JSON.parse('{"title":"jiti / unbuild / tsup","description":"","frontmatter":{},"headers":[{"level":2,"title":"jiti","slug":"jiti","link":"#jiti","children":[]},{"level":2,"title":"unbuild","slug":"unbuild","link":"#unbuild","children":[{"level":3,"title":"stub","slug":"stub","link":"#stub","children":[]},{"level":3,"title":"mkdist","slug":"mkdist","link":"#mkdist","children":[]},{"level":3,"title":"untype","slug":"untype","link":"#untype","children":[]}]},{"level":2,"title":"tsup","slug":"tsup","link":"#tsup","children":[]},{"level":2,"title":"参考","slug":"参考","link":"#参考","children":[]}],"relativePath":"trend/jiti.md","lastUpdated":1677396047000}'),e={name:"trend/jiti.md"},p=l(`<h1 id="jiti-unbuild-tsup" tabindex="-1">jiti / unbuild / tsup <a class="header-anchor" href="#jiti-unbuild-tsup" aria-hidden="true">#</a></h1><h2 id="jiti" tabindex="-1">jiti <a class="header-anchor" href="#jiti" aria-hidden="true">#</a></h2><p><a href="https://github.com/unjs/jiti" target="_blank" rel="noreferrer">https://github.com/unjs/jiti</a></p><blockquote><p>Runtime typescript and ESM support for Node.js (CommonJS) 用运行时的方式加载 typescript 和 ESM 文件。</p></blockquote><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">// color.ts</span></span>
<span class="line"><span style="color:#C792EA;">interface</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Color</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">red</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">green</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">blue</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">number</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> color</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Color</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">red</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">green</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">blue</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">color</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> color)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><p>通过 <code>jiti color.ts</code> 命令，可以看到，运行时加载的文件是：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#A6ACCD;">color { red: 0, green: 0, blue: 0 }</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p>同时可以通过程序的方式加载：</p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> jiti </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">require</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">jiti</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)(__filename)</span></span>
<span class="line"><span style="color:#82AAFF;">jiti</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">./color.ts</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div><p>运行这段代码可以将 <code>color.ts</code> 文件中的内容输出到控制台。</p><h2 id="unbuild" tabindex="-1">unbuild <a class="header-anchor" href="#unbuild" aria-hidden="true">#</a></h2><p><a href="https://github.com/unjs/unbuild" target="_blank" rel="noreferrer">https://github.com/unjs/unbuild</a></p><h3 id="stub" tabindex="-1">stub <a class="header-anchor" href="#stub" aria-hidden="true">#</a></h3><p><code>unbuild --stub</code> 命令会将文件转换为 <code>jiti</code> 程序形式:</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">// color.ts.mjs</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> jiti </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">jiti</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">jiti</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">null,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">interopDefault</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">/Users/qinguanghui/Desktop/tmp/jiti/a.ts</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><p>对于库开发者来讲非常棒，省去了 <code>watch</code> 编译，直接 <code>unbuild --stub</code> 命令生成的产物等于引用 <code>typescript</code> 源码。</p><h3 id="mkdist" tabindex="-1">mkdist <a class="header-anchor" href="#mkdist" aria-hidden="true">#</a></h3><p><a href="https://github.com/unjs/mkdist" target="_blank" rel="noreferrer">https://github.com/unjs/mkdist</a> 打包后生成结构化的文件</p><h3 id="untype" tabindex="-1">untype <a class="header-anchor" href="#untype" aria-hidden="true">#</a></h3><p><a href="https://github.com/unjs/untyped" target="_blank" rel="noreferrer">https://github.com/unjs/untyped</a> 数据 =&gt; 解析数据结构 =&gt; 生成类型 =&gt; 生成 <code>markdown</code></p><div class="language-typescript"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">resolveSchema</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">generateTypes</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">generateMarkdown</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">untyped</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> markdown </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">generateMarkdown</span><span style="color:#A6ACCD;">(</span><span style="color:#82AAFF;">generateTypes</span><span style="color:#A6ACCD;">(</span><span style="color:#82AAFF;">resolveSchema</span><span style="color:#A6ACCD;">(defaultPlanet)))</span></span>
<span class="line"></span></code></pre></div><h2 id="tsup" tabindex="-1">tsup <a class="header-anchor" href="#tsup" aria-hidden="true">#</a></h2><ul><li>基于 <code>esbuild</code></li><li>支持 <code>js/json/mjs/ts/tsx</code> 打包</li></ul><h2 id="参考" tabindex="-1">参考 <a class="header-anchor" href="#参考" aria-hidden="true">#</a></h2><p><a href="https://antfu.me/posts/publish-esm-and-cjs" target="_blank" rel="noreferrer">https://antfu.me/posts/publish-esm-and-cjs</a></p>`,25),o=[p];function t(c,r,i,y,D,d){return n(),a("div",null,o)}const u=s(e,[["render",t]]);export{F as __pageData,u as default};
