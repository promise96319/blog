import{_ as e,o as l,c as r,a as i}from"./app.5a1d1f50.js";const f=JSON.parse('{"title":"SSR","description":"","frontmatter":{},"headers":[{"level":2,"title":"传统服务端渲染 SSR","slug":"传统服务端渲染-ssr","link":"#传统服务端渲染-ssr","children":[]},{"level":2,"title":"客户端渲染 CSR","slug":"客户端渲染-csr","link":"#客户端渲染-csr","children":[]},{"level":2,"title":"Node 服务端渲染 SSR","slug":"node-服务端渲染-ssr","link":"#node-服务端渲染-ssr","children":[]},{"level":2,"title":"同构渲染","slug":"同构渲染","link":"#同构渲染","children":[]},{"level":2,"title":"流式渲染","slug":"流式渲染","link":"#流式渲染","children":[{"level":3,"title":"React API","slug":"react-api","link":"#react-api","children":[]},{"level":3,"title":"Web Stream","slug":"web-stream","link":"#web-stream","children":[]}]},{"level":2,"title":"Astro 选择性流式渲染","slug":"astro-选择性流式渲染","link":"#astro-选择性流式渲染","children":[]},{"level":2,"title":"边缘渲染 ESR","slug":"边缘渲染-esr","link":"#边缘渲染-esr","children":[]},{"level":2,"title":"Remix 嵌套路由渲染","slug":"remix-嵌套路由渲染","link":"#remix-嵌套路由渲染","children":[]},{"level":2,"title":"网页性能指标","slug":"网页性能指标","link":"#网页性能指标","children":[]},{"level":2,"title":"其他","slug":"其他","link":"#其他","children":[]}],"relativePath":"articles/react-ssr/index.md","lastUpdated":1694075415000}'),a={name:"articles/react-ssr/index.md"},t=i('<h1 id="ssr" tabindex="-1">SSR <a class="header-anchor" href="#ssr" aria-hidden="true">#</a></h1><h2 id="传统服务端渲染-ssr" tabindex="-1">传统服务端渲染 SSR <a class="header-anchor" href="#传统服务端渲染-ssr" aria-hidden="true">#</a></h2><ul><li>前后端代码杂糅在一起，不利于维护。</li><li>前后端存在两种语言，代码复用率低。</li><li>用户每次切换页面都会刷新页面，体验不好。</li></ul><ul><li>代表 <ul><li>JSP/PHP/ASP</li></ul></li></ul><h2 id="客户端渲染-csr" tabindex="-1">客户端渲染 CSR <a class="header-anchor" href="#客户端渲染-csr" aria-hidden="true">#</a></h2><ul><li><p>优点</p><ul><li>单页面应用，无感切换页面，用户体验号</li><li>前后端分离，维护方便</li></ul></li><li><p>缺点</p><ul><li>首屏渲染慢，白屏时间长</li><li>SEO 不友好</li></ul></li><li><p>代表</p><ul><li>React / Vue</li></ul></li></ul><h2 id="node-服务端渲染-ssr" tabindex="-1">Node 服务端渲染 SSR <a class="header-anchor" href="#node-服务端渲染-ssr" aria-hidden="true">#</a></h2><ul><li>优点 <ul><li>首屏渲染快，白屏时间短</li><li>SEO 友好</li><li>前后端技术栈统一，代码复用率高，维护方便。</li></ul></li><li>缺点 <ul><li>服务端压力大，性能不稳定</li><li>服务端渲染代码复杂，维护成本高</li><li>用户每次切换页面都会刷新页面，体验不好。</li></ul></li><li>代表</li></ul><h2 id="同构渲染" tabindex="-1">同构渲染 <a class="header-anchor" href="#同构渲染" aria-hidden="true">#</a></h2><p>首次渲染使用服务端渲染，后续流程都采用客户端渲染。这个过程需要进行 hydrate 操作，为已渲染的 html 注入事件等内容，同时转换为客户端渲染形态。 同构渲染，也就是一套代码既可以在客户端运行，也能在服务端运行。</p><ul><li>优点：结合客户端渲染，服务端渲染优点。 <ul><li>SEO 友好</li><li>首屏较快</li><li>技术栈统一，代码复用率高，维护方便</li><li>服务端渲染压力适中</li><li>用户体验较好</li></ul></li><li>缺点： <ul><li>hydrate 过程复杂。</li><li>服务端渲染有一定的限制，比如没有 mount 等钩子、window 等对象等，与客户端渲染有一定的差别。</li></ul></li><li>代表 <ul><li>Next.js / Nuxt.js</li></ul></li></ul><h2 id="流式渲染" tabindex="-1">流式渲染 <a class="header-anchor" href="#流式渲染" aria-hidden="true">#</a></h2><p>react 采取流式渲染，动态获取的内容可以稍后再加载，而不需要在第一次（首屏）时渲染。</p><h3 id="react-api" tabindex="-1">React API <a class="header-anchor" href="#react-api" aria-hidden="true">#</a></h3><ul><li>client -&gt; hydrate</li><li>server -&gt; renderToString/renderToPipeableStream</li><li>react 流式传输</li></ul><h3 id="web-stream" tabindex="-1">Web Stream <a class="header-anchor" href="#web-stream" aria-hidden="true">#</a></h3><ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/API/Streams_API" target="_blank" rel="noreferrer">Web Streams API</a></li><li><a href="https://juejin.cn/post/7022807505856102408" target="_blank" rel="noreferrer">精读 web streams</a></li></ul><h2 id="astro-选择性流式渲染" tabindex="-1">Astro 选择性流式渲染 <a class="header-anchor" href="#astro-选择性流式渲染" aria-hidden="true">#</a></h2><p>astro 采取的是选择式渲染，能标明哪些内容是动态获取的。</p><ul><li><a href="https://juejin.cn/post/7131928500373553160?searchId=20230901172405E8FD2F4922260E0586F3%3Ftheme%3Ddark" target="_blank" rel="noreferrer">Astro 1.0 正式发布，给前端带来了什么？</a></li><li><a href="https://docs.astro.build/en/getting-started/" target="_blank" rel="noreferrer">官网</a></li><li><a href="https://docs.astro.build/en/concepts/islands/" target="_blank" rel="noreferrer">孤岛</a></li><li><a href="https://juejin.cn/post/7155300194773860382?searchId=20230901172405E8FD2F4922260E0586F3" target="_blank" rel="noreferrer">孤岛实现</a></li></ul><h2 id="边缘渲染-esr" tabindex="-1">边缘渲染 ESR <a class="header-anchor" href="#边缘渲染-esr" aria-hidden="true">#</a></h2><p>边缘渲染，静态内容通过 CDN 节点获取，动态内容向中心服务器获取。</p><h2 id="remix-嵌套路由渲染" tabindex="-1">Remix 嵌套路由渲染 <a class="header-anchor" href="#remix-嵌套路由渲染" aria-hidden="true">#</a></h2><h2 id="网页性能指标" tabindex="-1">网页性能指标 <a class="header-anchor" href="#网页性能指标" aria-hidden="true">#</a></h2><h2 id="其他" tabindex="-1">其他 <a class="header-anchor" href="#其他" aria-hidden="true">#</a></h2><ul><li><a href="https://juejin.cn/post/7134495255075749901?searchId=20230901172405E8FD2F4922260E0586F3" target="_blank" rel="noreferrer">Fresh</a></li></ul>',26),s=[t];function n(d,h,c,u,o,p){return l(),r("div",null,s)}const S=e(a,[["render",n]]);export{f as __pageData,S as default};
