import{_ as s,c as a,o as n,a as l}from"./app.da177e40.js";const C=JSON.parse('{"title":"组件库前缀","description":"","frontmatter":{},"headers":[{"level":2,"title":"问题","slug":"问题","link":"#问题","children":[]},{"level":2,"title":"业界方案：","slug":"业界方案","link":"#业界方案","children":[]},{"level":2,"title":"解决方式","slug":"解决方式","link":"#解决方式","children":[]},{"level":2,"title":"方案","slug":"方案","link":"#方案","children":[{"level":3,"title":"设置组件类名前缀","slug":"设置组件类名前缀","link":"#设置组件类名前缀","children":[]},{"level":3,"title":"设置样式前缀","slug":"设置样式前缀","link":"#设置样式前缀","children":[]}]},{"level":2,"title":"一些问题","slug":"一些问题","link":"#一些问题","children":[]},{"level":2,"title":"后续出现的问题","slug":"后续出现的问题","link":"#后续出现的问题","children":[]}],"relativePath":"project/prefix-cls.md","lastUpdated":1677324754000}'),e={name:"project/prefix-cls.md"},o=l(`<h1 id="组件库前缀" tabindex="-1">组件库前缀 <a class="header-anchor" href="#组件库前缀" aria-hidden="true">#</a></h1><h2 id="问题" tabindex="-1">问题 <a class="header-anchor" href="#问题" aria-hidden="true">#</a></h2><p>公司内部通过 <code>webpack</code> 联邦模块将多个项目运行在一起，由于其中的一些项目会对 <code>@qt/design</code> 进行样式覆盖，最终运行在一起时会相互影响，导致样式异常。</p><h2 id="业界方案" tabindex="-1">业界方案： <a class="header-anchor" href="#业界方案" aria-hidden="true">#</a></h2><ul><li>ant-design： <ul><li>组件类名通过 <code>ConfigProvider</code> 下传，组件将前缀进行拼接。</li><li><code>css</code> 通过 <code>less-loader</code> 自带的 <code>modifyVars</code> 参数进行替换。</li><li>补充：v5.x <code>css in js</code>，</li></ul></li></ul><h2 id="解决方式" tabindex="-1">解决方式 <a class="header-anchor" href="#解决方式" aria-hidden="true">#</a></h2><p><code>@qt/design</code> 增加样式前缀，每一个项目可以配置自己的独有的项目前缀，这样在样式覆盖时就不会冲突。</p><h2 id="方案" tabindex="-1">方案 <a class="header-anchor" href="#方案" aria-hidden="true">#</a></h2><h3 id="设置组件类名前缀" tabindex="-1">设置组件类名前缀 <a class="header-anchor" href="#设置组件类名前缀" aria-hidden="true">#</a></h3><p>通过一个 <code>Context</code> 向下所有组件传递前缀，如：</p><div class="language-tsx"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">Config.Provider</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">value</span><span style="color:#89DDFF;">={{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">prefixCls</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">test-prefix</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}}&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">App</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#FFCB6B;">Config.Provider</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><p>每一个组件都会根据这个前缀生成带前缀的类名。</p><h3 id="设置样式前缀" tabindex="-1">设置样式前缀 <a class="header-anchor" href="#设置样式前缀" aria-hidden="true">#</a></h3><p>在组件库中通过 <code>scss</code> 的样式变量定义前缀，在项目中覆盖该变量。如：</p><div class="language-scss"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">// @qt/design 中</span></span>
<span class="line"><span style="color:#A6ACCD;">$prefix</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">qtc</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">.</span><span style="color:#89DDFF;">#{</span><span style="color:#A6ACCD;">$prefix</span><span style="color:#89DDFF;">}-</span><span style="color:#A6ACCD;">button { </span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">// ... </span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 项目中覆盖前缀</span></span>
<span class="line"><span style="color:#A6ACCD;">$prefix: </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">test-prefix</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span></code></pre></div><h2 id="一些问题" tabindex="-1">一些问题 <a class="header-anchor" href="#一些问题" aria-hidden="true">#</a></h2><ol><li>组件类名前缀覆盖时，<code>ConfigContext</code> 不仅仅只提供 <code>prefixCls</code>，还可能会提供 <code>getPopupContainer</code> 等其他全局参数，如果单纯使用 <code>ConfigContext.Provider</code> 的话，那么不大方便处理提供的全局参数默认值问题。</li></ol><ul><li>对全局的一些 <code>Context</code> 再进行一层封装，为 <code>ConfigProvider</code>，内部就可以针对全局参数处理一些其他逻辑了。</li></ul><ol start="2"><li>样式前缀提供时，需要保留 <code>qtc</code>，也就是当外部传了 <code>test</code> 前缀时，需要是 <code>test-qtc-button</code>。没有传前缀时，需要是 <code>qtc-button</code>。如果直接拼接样式，那么就会选择器前多出一个 <code>-</code> 符号。</li></ol><ul><li>通过 <code>scss</code> 函数的方式，来计算前缀，并且达到<code>延迟计算</code>的目的，方便后续覆盖。</li></ul><div class="language-scss"><button title="Copy Code" class="copy"></button><span class="lang">scss</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 定义</span></span>
<span class="line"><span style="color:#A6ACCD;">$qtc-prefix</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">!default</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">@function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">add-prefix</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">$componentName</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">@if</span><span style="color:#A6ACCD;"> $qtc-prefix </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">@return</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">qtc-</span><span style="color:#89DDFF;">#{</span><span style="color:#A6ACCD;">$componentName</span><span style="color:#89DDFF;">}&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">@else </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">@return</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;#{</span><span style="color:#A6ACCD;">$qtc-prefix</span><span style="color:#89DDFF;">}</span><span style="color:#C3E88D;">-qtc-</span><span style="color:#89DDFF;">#{</span><span style="color:#A6ACCD;">$componentName</span><span style="color:#89DDFF;">}&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// @qt/design button 使用</span></span>
<span class="line"><span style="color:#A6ACCD;">.</span><span style="color:#89DDFF;">#{</span><span style="color:#82AAFF;">add-prefix</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">button</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">)}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">// ...</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 项目覆盖</span></span>
<span class="line"><span style="color:#A6ACCD;">$qtc-prefix</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">test-prefix</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span></code></pre></div><h2 id="后续出现的问题" tabindex="-1">后续出现的问题 <a class="header-anchor" href="#后续出现的问题" aria-hidden="true">#</a></h2>`,22),p=[o];function t(c,r,i,D,d,y){return n(),a("div",null,p)}const A=s(e,[["render",t]]);export{C as __pageData,A as default};
