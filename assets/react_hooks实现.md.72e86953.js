import{_ as n,c as a,o as s,a as t}from"./app.f27e6278.js";const f='{"title":"hooks \u5B9E\u73B0","description":"","frontmatter":{},"headers":[{"level":2,"title":"useState","slug":"usestate"},{"level":3,"title":"mount \u9636\u6BB5","slug":"mount-\u9636\u6BB5"},{"level":3,"title":"rerender \u9636\u6BB5","slug":"rerender-\u9636\u6BB5"},{"level":3,"title":"update \u9636\u6BB5","slug":"update-\u9636\u6BB5"},{"level":2,"title":"useReducer","slug":"usereducer"},{"level":2,"title":"useEffect","slug":"useeffect"},{"level":3,"title":"mount\u9636\u6BB5","slug":"mount\u9636\u6BB5"},{"level":3,"title":"rerender\u548Cupdate\u9636\u6BB5","slug":"rerender\u548Cupdate\u9636\u6BB5"},{"level":2,"title":"useLayoutEffect","slug":"uselayouteffect"},{"level":3,"title":"mount \u9636\u6BB5","slug":"mount-\u9636\u6BB5-1"},{"level":3,"title":"rerender\u548Cupdate\u9636\u6BB5","slug":"rerender\u548Cupdate\u9636\u6BB5-1"},{"level":2,"title":"useMemo","slug":"usememo"},{"level":3,"title":"mount \u9636\u6BB5","slug":"mount-\u9636\u6BB5-2"},{"level":3,"title":"rerender\u548Cupdate\u9636\u6BB5","slug":"rerender\u548Cupdate\u9636\u6BB5-2"},{"level":2,"title":"useCallback","slug":"usecallback"},{"level":3,"title":"mount \u9636\u6BB5","slug":"mount-\u9636\u6BB5-3"},{"level":3,"title":"rerender\u548Cupdate\u9636\u6BB5","slug":"rerender\u548Cupdate\u9636\u6BB5-3"},{"level":2,"title":"useContext","slug":"usecontext"},{"level":3,"title":"mount\u3001rerender\u548Cupdate\u9636\u6BB5","slug":"mount\u3001rerender\u548Cupdate\u9636\u6BB5"},{"level":2,"title":"useRef","slug":"useref"},{"level":3,"title":"mount \u9636\u6BB5","slug":"mount-\u9636\u6BB5-4"},{"level":3,"title":"rerender\u548Cupdate\u9636\u6BB5","slug":"rerender\u548Cupdate\u9636\u6BB5-4"},{"level":2,"title":"useTransition","slug":"usetransition"},{"level":3,"title":"mount \u9636\u6BB5","slug":"mount-\u9636\u6BB5-5"},{"level":3,"title":"rerender\u548Cupdate\u9636\u6BB5","slug":"rerender\u548Cupdate\u9636\u6BB5-5"},{"level":2,"title":"useDeferredValue","slug":"usedeferredvalue"},{"level":3,"title":"mount\u3001rerender\u548Cupdate\u9636\u6BB5","slug":"mount\u3001rerender\u548Cupdate\u9636\u6BB5-1"}],"relativePath":"react/hooks\u5B9E\u73B0.md","lastUpdated":1658882521000}',e={},o=t(`<h1 id="hooks-\u5B9E\u73B0" tabindex="-1">hooks \u5B9E\u73B0 <a class="header-anchor" href="#hooks-\u5B9E\u73B0" aria-hidden="true">#</a></h1><p>\u5728<code>beginWork</code>\u9636\u6BB5\uFF0C\u4E3A\u4E86\u83B7\u53D6\u51FD\u6570\u5F0F\u7EC4\u4EF6\u7684<code>children</code>\uFF0C\u5728<code>updateFunctionComponent</code>\u51FD\u6570\u4E2D\u4F1A\u8C03\u7528<code>renderWithHooks</code>\u65B9\u6CD5\uFF1A</p><div class="language-javascript"><pre><code>nextChildren <span class="token operator">=</span> <span class="token function">renderWithHooks</span><span class="token punctuation">(</span>
  current<span class="token punctuation">,</span>
  workInProgress<span class="token punctuation">,</span>
  Component<span class="token punctuation">,</span>
  nextProps<span class="token punctuation">,</span>
  context<span class="token punctuation">,</span>
  renderLanes<span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p><code>renderWithHooks</code>\u65B9\u6CD5\u5728<code>ReactFiberHooks.new.js</code>\u6587\u4EF6\u4E2D\u5B9A\u4E49\uFF0C\u5B83\u7684\u5173\u952E\u4EE3\u7801\u4E3A\uFF1A</p><div class="language-javascript"><pre><code>ReactCurrentDispatcher<span class="token punctuation">.</span>current <span class="token operator">=</span>
  current <span class="token operator">===</span> <span class="token keyword">null</span> <span class="token operator">||</span> current<span class="token punctuation">.</span>memoizedState <span class="token operator">===</span> <span class="token keyword">null</span>
  <span class="token operator">?</span> HooksDispatcherOnMount
	<span class="token operator">:</span> HooksDispatcherOnUpdate<span class="token punctuation">;</span>
<span class="token keyword">let</span> children <span class="token operator">=</span> <span class="token function">Component</span><span class="token punctuation">(</span>props<span class="token punctuation">,</span> secondArg<span class="token punctuation">)</span><span class="token punctuation">;</span>
ReactCurrentDispatcher<span class="token punctuation">.</span>current <span class="token operator">=</span> ContextOnlyDispatcher<span class="token punctuation">;</span>
</code></pre></div><p>\u9996\u5148\u4F1A\u6839\u636E<code>current.memoizedState</code>\u6765\u5224\u65AD\u5F53\u524D\u662F<code>mount</code>\u9636\u6BB5\u8FD8\u662F<code>update</code>\u9636\u6BB5\uFF0C\u4ECE\u800C\u51B3\u5B9A\u4F7F\u7528<code>HooksDispatcherOnMount</code>\u8FD8\u662F<code>HooksDispatcherOnUpdate</code>\u3002\u7136\u540E\u6267\u884C<code>Component</code>\uFF0C\u5728\u6267\u884C\u7684\u8FC7\u7A0B\u4E2D\uFF0C\u5982\u679C\u6211\u4EEC\u4F7F\u7528\u4E86<code>hook</code>\uFF0C\u90A3\u4E48\u5C31\u4F1A\u6267\u884C\u76F8\u5E94\u7684<code>hook</code>\u65B9\u6CD5\u3002\u6700\u540E\u5C06<code>ReactCurrentDispatcher.current</code>\u7F6E\u7A7A\u3002\u4E0B\u9762\u770B\u4E00\u4E0B<code>hooks</code>\u7684\u5B9E\u73B0\u3002</p><h2 id="usestate" tabindex="-1">useState <a class="header-anchor" href="#usestate" aria-hidden="true">#</a></h2><p><code>useState</code>\u5728<code>React</code>\u5305\u4E2D\u5B9A\u4E49\uFF0C\u5176\u4ED6\u7684<code>hooks</code>\u4E5F\u540C\u6837\u5728\u8FD9\u91CC\u5B9A\u4E49\uFF1A</p><div class="language-javascript"><pre><code><span class="token keyword">export</span> <span class="token keyword">function</span> useState<span class="token operator">&lt;</span><span class="token constant">S</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>
  <span class="token literal-property property">initialState</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token constant">S</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token constant">S</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token constant">S</span><span class="token punctuation">,</span> Dispatch<span class="token operator">&lt;</span>BasicStateAction<span class="token operator">&lt;</span><span class="token constant">S</span><span class="token operator">&gt;&gt;</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> dispatcher <span class="token operator">=</span> <span class="token function">resolveDispatcher</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> dispatcher<span class="token punctuation">.</span><span class="token function">useState</span><span class="token punctuation">(</span>initialState<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u7B2C\u4E00\u6B65\u662F<code>resolveDispatcher</code>\u83B7\u53D6\u5F53\u524D\u7684<code>dispatcher</code>\u3002\u5728<code>renderWithHooks</code>\u51FD\u6570\u6267\u884C\u524D\u5DF2\u7ECF\u901A\u8FC7\u5224\u65AD<code>mount/update</code>\u5C06\u5F53\u524D\u7684<code>dispatcher</code>\u5B58\u653E\u5230\u5168\u5C40\uFF0C\u6240\u4EE5\u8FD9\u91CC\u53EF\u4EE5\u83B7\u53D6\u5230\u3002</p><h3 id="mount-\u9636\u6BB5" tabindex="-1">mount \u9636\u6BB5 <a class="header-anchor" href="#mount-\u9636\u6BB5" aria-hidden="true">#</a></h3><p>\u5982\u679C\u662F<code>mount</code>\u9636\u6BB5\uFF0C<code>useState</code>\u5BF9\u5E94\u7684\u662F<code>mountState</code>\u65B9\u6CD5\uFF1A</p><div class="language-javascript"><pre><code><span class="token keyword">const</span> <span class="token literal-property property">HooksDispatcherOnMount</span><span class="token operator">:</span> Dispatcher <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">useState</span><span class="token operator">:</span> mountState<span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> mountState<span class="token operator">&lt;</span><span class="token constant">S</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>
  <span class="token literal-property property">initialState</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token constant">S</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token constant">S</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token constant">S</span><span class="token punctuation">,</span> Dispatch<span class="token operator">&lt;</span>BasicStateAction<span class="token operator">&lt;</span><span class="token constant">S</span><span class="token operator">&gt;&gt;</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u521B\u5EFA\u4E00\u4E2A hook\uFF0C\u6302\u8F7D\u5230 fiber\u4E0A\uFF0C\u5E76\u8FD4\u56DE</span>
  <span class="token keyword">const</span> hook <span class="token operator">=</span> <span class="token function">mountWorkInProgressHook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> initialState <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    initialState <span class="token operator">=</span> <span class="token function">initialState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  hook<span class="token punctuation">.</span>memoizedState <span class="token operator">=</span> hook<span class="token punctuation">.</span>baseState <span class="token operator">=</span> initialState<span class="token punctuation">;</span>
  <span class="token comment">// \u521D\u59CB\u5316 queue</span>
  <span class="token keyword">const</span> queue <span class="token operator">=</span> <span class="token punctuation">(</span>hook<span class="token punctuation">.</span>queue <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">pending</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
    <span class="token literal-property property">interleaved</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
    <span class="token literal-property property">lanes</span><span class="token operator">:</span> NoLanes<span class="token punctuation">,</span>
    <span class="token literal-property property">dispatch</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
    <span class="token literal-property property">lastRenderedReducer</span><span class="token operator">:</span> basicStateReducer<span class="token punctuation">,</span>
    <span class="token literal-property property">lastRenderedState</span><span class="token operator">:</span> <span class="token punctuation">(</span>initialState<span class="token operator">:</span> any<span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token literal-property property">dispatch</span><span class="token operator">:</span> Dispatch<span class="token operator">&lt;</span>
    BasicStateAction<span class="token operator">&lt;</span><span class="token constant">S</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
    <span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">(</span>queue<span class="token punctuation">.</span>dispatch <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token function">dispatchAction</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span>
      <span class="token keyword">null</span><span class="token punctuation">,</span>
      currentlyRenderingFiber<span class="token punctuation">,</span>
      queue<span class="token punctuation">,</span>
    <span class="token punctuation">)</span><span class="token operator">:</span> any<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">[</span>hook<span class="token punctuation">.</span>memoizedState<span class="token punctuation">,</span> dispatch<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h4 id="mountworkinprogresshook\u65B9\u6CD5" tabindex="-1">mountWorkInProgressHook\u65B9\u6CD5 <a class="header-anchor" href="#mountworkinprogresshook\u65B9\u6CD5" aria-hidden="true">#</a></h4><p>\u7B2C\u4E00\u6B65\u6267\u884C\u7684\u662F<code>mountWorkInProgressHook</code>\uFF0C\u8BE5\u51FD\u6570\u9996\u5148\u4F1A\u521B\u5EFA\u4E00\u4E2A<code>hook</code>\uFF0C\u7528\u4E8E\u5B58\u653E\u5BF9\u5E94<code>hook</code>\u7684\u72B6\u6001\uFF1A</p><div class="language-javascript"><pre><code><span class="token keyword">const</span> <span class="token literal-property property">hook</span><span class="token operator">:</span> Hook <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u8BB0\u5F55\u8BE5 hook \u7684 state</span>
  <span class="token literal-property property">memoizedState</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
  <span class="token comment">// base state</span>
  <span class="token literal-property property">baseState</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
  <span class="token comment">// base queue</span>
  <span class="token literal-property property">baseQueue</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
  <span class="token comment">// \u66F4\u65B0queue</span>
  <span class="token literal-property property">queue</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
  <span class="token comment">// \u6307\u5411\u4E0B\u4E00\u4E2A hook</span>
  <span class="token literal-property property">next</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><p>\u968F\u540E\u5C06<code>hook</code>\u5F62\u6210\u94FE\u8868\u7ED3\u6784\uFF0C\u5E76\u5C06\u8BE5\u94FE\u8868\u5B58\u653E\u5230<code>fiber.memoizedState</code>\u5F53\u4E2D\uFF1A</p><div class="language-javascript"><pre><code><span class="token keyword">if</span> <span class="token punctuation">(</span>workInProgressHook <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// currentlyRenderingFiber \u8868\u793A\u7684\u662F\u5F53\u524D\u6B63\u5728\u6267\u884C\u7684\u7684 \u51FD\u6570 fiber\u3002</span>
  currentlyRenderingFiber<span class="token punctuation">.</span>memoizedState <span class="token operator">=</span> workInProgressHook <span class="token operator">=</span> hook<span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u9047\u5230\u7684 hooks \u5F62\u6210\u94FE\u8868\u5F62\u5F0F\u3002</span>
  workInProgressHook <span class="token operator">=</span> workInProgressHook<span class="token punctuation">.</span>next <span class="token operator">=</span> hook<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u8FD9\u6837\u540E\u7EED\u5C31\u53EF\u4EE5\u901A\u8FC7\u94FE\u8868\u6765\u8BBF\u95EE\u6BCF\u4E00\u4E2A\u4F7F\u7528\u5230\u7684<code>hook</code>\u7684\u72B6\u6001\u4E86\u3002</p><h4 id="dispatchaction" tabindex="-1">dispatchAction <a class="header-anchor" href="#dispatchaction" aria-hidden="true">#</a></h4><p>\u5728\u62FF\u5230<code>hook</code>\u540E\u4F1A\u521D\u59CB\u5316<code>memoizedState</code>\uFF0C\u5E76\u5C06\u76F8\u5E94\u7684<code>memoizedState</code>\u548C<code>dispatch</code>\u51FD\u6570\u8FD4\u56DE\u3002\u5F53\u8C03\u7528<code>dispatch</code>\u51FD\u6570\u65F6\uFF0C\u5B9E\u9645\u89E6\u53D1\u7684\u662F<code>dispatchAction</code>\u51FD\u6570\uFF0C\u9996\u5148\u4F1A\u521B\u5EFA\u4E00\u4E2A<code>update</code>:</p><div class="language-javascript"><pre><code><span class="token keyword">const</span> eventTime <span class="token operator">=</span> <span class="token function">requestEventTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> lane <span class="token operator">=</span> <span class="token function">requestUpdateLane</span><span class="token punctuation">(</span>fiber<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token literal-property property">update</span><span class="token operator">:</span> Update<span class="token operator">&lt;</span><span class="token constant">S</span><span class="token punctuation">,</span> <span class="token constant">A</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  lane<span class="token punctuation">,</span>
  action<span class="token punctuation">,</span>
  <span class="token comment">// update.eagerReducer = lastRenderedReducer;</span>
  <span class="token literal-property property">eagerReducer</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
  <span class="token comment">// update.eagerState = lastRenderedReducer(currentState, action);</span>
  <span class="token literal-property property">eagerState</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
  <span class="token literal-property property">next</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token keyword">null</span><span class="token operator">:</span> any<span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><p>\u5982\u679C\u5F53\u524D\u6B63\u5728\u5904\u7406\u8FD9\u4E2A<code>fiber</code>\uFF0C\u89E6\u53D1\u4E86<code>dispatch</code>\uFF0C\u90A3\u4E48\u4F1A\u6267\u884C\u5982\u4E0B\u5206\u652F\uFF1A</p><div class="language-javascript"><pre><code><span class="token keyword">if</span> <span class="token punctuation">(</span>
  fiber <span class="token operator">===</span> currentlyRenderingFiber <span class="token operator">||</span>
  <span class="token punctuation">(</span>alternate <span class="token operator">!==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> alternate <span class="token operator">===</span> currentlyRenderingFiber<span class="token punctuation">)</span>
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u6CE8\u610F\u8FD9\u4E2A\u53C2\u6570\u7528\u4E8E\u9632\u6B62\u5FAA\u73AF\u6E32\u67D3</span>
  didScheduleRenderPhaseUpdateDuringThisPass <span class="token operator">=</span> didScheduleRenderPhaseUpdate <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> pending <span class="token operator">=</span> queue<span class="token punctuation">.</span>pending<span class="token punctuation">;</span>
  <span class="token comment">// \u5C06 update \u5F62\u6210\u94FE\u8868\u5F62\u5F0F</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>pending <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    update<span class="token punctuation">.</span>next <span class="token operator">=</span> update<span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    update<span class="token punctuation">.</span>next <span class="token operator">=</span> pending<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
    pending<span class="token punctuation">.</span>next <span class="token operator">=</span> update<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  queue<span class="token punctuation">.</span>pending <span class="token operator">=</span> update<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u6B64\u65F6\u4F1A\u5C06<code>update</code>\u5F62\u6210\u5FAA\u73AF\u94FE\u8868\uFF0C\u5B58\u653E\u5230<code>queue.pending</code>\u5F53\u4E2D\uFF0C\u5E76\u5C06<code>didScheduleRenderPhaseUpdateDuringThisPass</code>\u6807\u8BB0\u4E3A<code>true</code>\uFF0C\u8FD9\u4E2A\u6807\u8BB0\u5728<code>renderWithHooks</code>\u4E2D\u6709\u7528\u5230\uFF1A</p><div class="language-javascript"><pre><code><span class="token keyword">if</span> <span class="token punctuation">(</span>didScheduleRenderPhaseUpdateDuringThisPass<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> <span class="token literal-property property">numberOfReRenders</span><span class="token operator">:</span> number <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">do</span> <span class="token punctuation">{</span>
    didScheduleRenderPhaseUpdateDuringThisPass <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token function">invariant</span><span class="token punctuation">(</span>
      numberOfReRenders <span class="token operator">&lt;</span> <span class="token constant">RE_RENDER_LIMIT</span><span class="token punctuation">,</span>
      <span class="token string">&#39;Too many re-renders. React limits the number of renders to prevent &#39;</span> <span class="token operator">+</span>
      <span class="token string">&#39;an infinite loop.&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>

    numberOfReRenders <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>

    currentHook <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    workInProgressHook <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    workInProgress<span class="token punctuation">.</span>updateQueue <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>


    ReactCurrentDispatcher<span class="token punctuation">.</span>current <span class="token operator">=</span> __DEV__
      <span class="token operator">?</span> HooksDispatcherOnRerenderInDEV
      <span class="token operator">:</span> HooksDispatcherOnRerender<span class="token punctuation">;</span>

    children <span class="token operator">=</span> <span class="token function">Component</span><span class="token punctuation">(</span>props<span class="token punctuation">,</span> secondArg<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">while</span> <span class="token punctuation">(</span>didScheduleRenderPhaseUpdateDuringThisPass<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u5982\u679C\u4E3A<code>true</code>\u7684\u8BDD\uFF0C\u5728\u51FD\u6570\u7EC4\u4EF6\u6267\u884C\u5B8C\u6210\u540E\uFF0C\u4F1A\u5C06<code>dispatcher</code>\u6539\u4E3A<code>HooksDispatcherOnRerender</code>\u5E76\u518D\u6B21\u6267\u884C<code>Component</code>\u51FD\u6570\u3002\u5E76\u4E14\u8FD9\u4E2A\u91CD\u65B0\u6E32\u67D3\u7684\u6B21\u6570\u4E0D\u80FD\u5927\u4E8E\u6700\u5927\u6B21\u6570<code>RE_RENDER_LIMIT</code>\u3002</p><p>\u5982\u679C\u89E6\u53D1\u65F6\u7684<code>fiber</code>\u4E0E\u5F53\u524D<code>fiber</code>\u4E0D\u76F8\u7B49\u65F6\uFF0C\u540C\u6837\u4F1A\u5EFA\u7ACB\u5FAA\u73AF\u94FE\u8868\u7684<code>update</code>\u5B58\u653E\u5230<code>queue.pending</code>\u5F53\u4E2D\uFF0C\u4E0D\u540C\u7684\u662F\uFF0C\u6B64\u65F6\u4F1A\u8FDB\u884C<code>schedule</code>\uFF1A</p><div class="language-javascript"><pre><code><span class="token keyword">const</span> root <span class="token operator">=</span> <span class="token function">scheduleUpdateOnFiber</span><span class="token punctuation">(</span>fiber<span class="token punctuation">,</span> lane<span class="token punctuation">,</span> eventTime<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="rerender-\u9636\u6BB5" tabindex="-1">rerender \u9636\u6BB5 <a class="header-anchor" href="#rerender-\u9636\u6BB5" aria-hidden="true">#</a></h3><p>\u5728<code>mount</code>\u9636\u6BB5\u6211\u4EEC\u63D0\u5230\u4E86<code>didScheduleRenderPhaseUpdateDuringThisPass</code>\u5B57\u6BB5\u4E3A<code>true</code>\u65F6\uFF0C\u5982\u679C\u5F53\u524D\u51FD\u6570\u6267\u884C\u5B8C\u6BD5\uFF0C\u6B64\u65F6\u4F1A\u7ACB\u5373\u89E6\u53D1<code>rerender</code>\uFF0C\u4F7F\u7528\u7684\u662F<code>HooksDispatcherOnRerender</code>\uFF0C\u56E0\u6B64<code>useState</code>\u5BF9\u5E94\u4E8E<code>rerenderState</code>\u4E5F\u662F<code>rerenderReducer</code>\u51FD\u6570\u3002</p><h4 id="updateworkinprogresshook" tabindex="-1">updateWorkInProgressHook <a class="header-anchor" href="#updateworkinprogresshook" aria-hidden="true">#</a></h4><p><code>updateWorkInProgressHook</code>\u4E0E<code>mountWorkInProgressHook</code>\u5BF9\u5E94\uFF0C\u5B83\u662F\u7528\u4E8E\u53D6\u5B58\u653E\u5728<code>fiber.memoizedState</code>\u4E0A\u7684<code>hook</code>\u3002</p><div class="language-javascript"><pre><code><span class="token keyword">let</span> <span class="token literal-property property">nextCurrentHook</span><span class="token operator">:</span> <span class="token keyword">null</span> <span class="token operator">|</span> Hook<span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>currentHook <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> current <span class="token operator">=</span> currentlyRenderingFiber<span class="token punctuation">.</span>alternate<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>current <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    nextCurrentHook <span class="token operator">=</span> current<span class="token punctuation">.</span>memoizedState<span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    nextCurrentHook <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
  nextCurrentHook <span class="token operator">=</span> currentHook<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u8FD9\u4E2A\u5BF9\u5E94\u7684 fiber \u662F workInProgress</span>
<span class="token keyword">let</span> <span class="token literal-property property">nextWorkInProgressHook</span><span class="token operator">:</span> <span class="token keyword">null</span> <span class="token operator">|</span> Hook<span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>workInProgressHook <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  nextWorkInProgressHook <span class="token operator">=</span> currentlyRenderingFiber<span class="token punctuation">.</span>memoizedState<span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
  nextWorkInProgressHook <span class="token operator">=</span> workInProgressHook<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p><code>nextCurrentHook</code>\u548C<code>currentHook</code>\u5BF9\u5E94\u4E8E\u8001<code>fiber</code>\u4E0A\u7684<code>hooks</code>\uFF0C\u800C<code>nextWorkInProgressHook</code>\u548C<code>workInProgressHook</code>\u5BF9\u5E94\u4E8E\u65B0<code>fiber</code>\u4E0A\u7684<code>hooks</code>\u3002\u5F53\u65B0<code>fiber</code>\u4E0A\u7684<code>hook</code>\u5B58\u5728\u65F6\uFF0C\u76F4\u63A5\u4F7F\u7528\u5373\u53EF\uFF1A</p><div class="language-javascript"><pre><code><span class="token keyword">if</span> <span class="token punctuation">(</span>nextWorkInProgressHook <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5982\u679C \u65B0fiber\u4E0A\u5B58\u5728\u8BE5 hook\uFF0C \u53EF\u4EE5\u76F4\u63A5\u4F7F\u7528</span>
  workInProgressHook <span class="token operator">=</span> nextWorkInProgressHook<span class="token punctuation">;</span>
  nextWorkInProgressHook <span class="token operator">=</span> workInProgressHook<span class="token punctuation">.</span>next<span class="token punctuation">;</span>

  currentHook <span class="token operator">=</span> nextCurrentHook<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u5426\u5219\u4F1A\u590D\u7528\u8001<code>fiber</code>\u4E0A\u7684<code>hook</code>\uFF1A</p><div class="language-javascript"><pre><code>currentHook <span class="token operator">=</span> nextCurrentHook<span class="token punctuation">;</span>

<span class="token comment">// \u5982\u679C\u65B0\u7684 hook \u4E3A null \u65F6\uFF0C\u9700\u8981\u5C06 current hook \u4F5C\u4E3A base,</span>
<span class="token comment">// \u8FDB\u884C\u521B\u5EFA\u65B0\u7684 hook</span>
<span class="token keyword">const</span> <span class="token literal-property property">newHook</span><span class="token operator">:</span> Hook <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">memoizedState</span><span class="token operator">:</span> currentHook<span class="token punctuation">.</span>memoizedState<span class="token punctuation">,</span>

  <span class="token literal-property property">baseState</span><span class="token operator">:</span> currentHook<span class="token punctuation">.</span>baseState<span class="token punctuation">,</span>
  <span class="token literal-property property">baseQueue</span><span class="token operator">:</span> currentHook<span class="token punctuation">.</span>baseQueue<span class="token punctuation">,</span>
  <span class="token literal-property property">queue</span><span class="token operator">:</span> currentHook<span class="token punctuation">.</span>queue<span class="token punctuation">,</span>

  <span class="token literal-property property">next</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span>workInProgressHook <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  currentlyRenderingFiber<span class="token punctuation">.</span>memoizedState <span class="token operator">=</span> workInProgressHook <span class="token operator">=</span> newHook<span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
  workInProgressHook <span class="token operator">=</span> workInProgressHook<span class="token punctuation">.</span>next <span class="token operator">=</span> newHook<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h4 id="\u66F4\u65B0state" tabindex="-1">\u66F4\u65B0state <a class="header-anchor" href="#\u66F4\u65B0state" aria-hidden="true">#</a></h4><p>\u5728\u62FF\u5230\u5BF9\u5E94\u7684<code>hook</code>\u540E\uFF0C\u5C31\u4F1A\u4F9D\u6B21\u6267\u884C\u6240\u6709\u7684<code>update</code>\uFF0C\u66F4\u65B0\u5F53\u524D\u7684<code>state</code>:</p><div class="language-javascript"><pre><code><span class="token comment">// \u5FAA\u73AF\u6267\u884C</span>
<span class="token keyword">do</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> action <span class="token operator">=</span> update<span class="token punctuation">.</span>action<span class="token punctuation">;</span>
  newState <span class="token operator">=</span> <span class="token function">reducer</span><span class="token punctuation">(</span>newState<span class="token punctuation">,</span> action<span class="token punctuation">)</span><span class="token punctuation">;</span>
  update <span class="token operator">=</span> update<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">while</span> <span class="token punctuation">(</span>update <span class="token operator">!==</span> firstRenderPhaseUpdate<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u66F4\u65B0 state</span>
hook<span class="token punctuation">.</span>memoizedState <span class="token operator">=</span> newState<span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>hook<span class="token punctuation">.</span>baseQueue <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  hook<span class="token punctuation">.</span>baseState <span class="token operator">=</span> newState<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
queue<span class="token punctuation">.</span>lastRenderedState <span class="token operator">=</span> newState<span class="token punctuation">;</span>
</code></pre></div><h3 id="update-\u9636\u6BB5" tabindex="-1">update \u9636\u6BB5 <a class="header-anchor" href="#update-\u9636\u6BB5" aria-hidden="true">#</a></h3><p><code>update</code>\u9636\u6BB5\u8C03\u7528\u7684\u662F<code>updateReducer</code>\uFF0C\u4E0E<code>rerender</code>\u4E0D\u540C\u7684\u662F\uFF0C\u5FAA\u73AF\u6267\u884C<code>update</code>\u961F\u5217\u65F6\uFF0C\u4F1A\u5224\u65AD<code>updateLane</code>\u662F\u5426\u5728<code>renderLanes</code>\u4E2D:</p><div class="language-javascript"><pre><code><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isSubsetOfLanes</span><span class="token punctuation">(</span>renderLanes<span class="token punctuation">,</span> updateLane<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre></div><p>\u8FD9\u4E2A\u9636\u6BB5\u7684\u66F4\u65B0\u4E0E<code>UpdateQueue</code>\u7AE0\u8282\u4E2D<code>class</code>\u7EC4\u4EF6\u7684<code>processUpdate</code>\u65B9\u6CD5\u66F4\u65B0\u7C7B\u4F3C\uFF0C\u8FD9\u91CC\u4E0D\u518D\u8D58\u8FF0\u3002</p><h2 id="usereducer" tabindex="-1">useReducer <a class="header-anchor" href="#usereducer" aria-hidden="true">#</a></h2><p><code>useReducer</code>\u7684\u6D41\u7A0B\u5C31\u4E0E<code>useState</code>\u4E00\u81F4\uFF0C\u4E0D\u540C\u7684\u662F\u4F20\u5165\u7684<code>reducer</code>\u662F\u7528\u6237\u5B9A\u4E49\u7684<code>reducer</code>\uFF0C\u5E76\u4E14<code>dispatch</code>\u7684\u65F6\u5019\u4F1A\u643A\u5E26<code>action</code>\u3002\u5728<code>useState</code>\u4E2D\uFF0C<code>reducer</code>\u662F<code>state =&gt; state</code>\uFF0C<code>dispatch</code>\u7684\u65F6\u5019\u65E0\u9700<code>action</code>\u3002</p><h2 id="useeffect" tabindex="-1">useEffect <a class="header-anchor" href="#useeffect" aria-hidden="true">#</a></h2><h3 id="mount\u9636\u6BB5" tabindex="-1">mount\u9636\u6BB5 <a class="header-anchor" href="#mount\u9636\u6BB5" aria-hidden="true">#</a></h3><p><code>mount</code>\u9636\u6BB5<code>useEffect</code>\u8C03\u7528\u7684\u662F<code>mountEffect</code>\uFF1A</p><div class="language-javascript"><pre><code><span class="token keyword">return</span> <span class="token function">mountEffectImpl</span><span class="token punctuation">(</span>
  PassiveEffect <span class="token operator">|</span> PassiveStaticEffect<span class="token punctuation">,</span>
  HookPassive<span class="token punctuation">,</span>
  create<span class="token punctuation">,</span>
  deps<span class="token punctuation">,</span>
<span class="token punctuation">)</span>
<span class="token keyword">function</span> <span class="token function">mountEffectImpl</span><span class="token punctuation">(</span><span class="token parameter">fiberFlags<span class="token punctuation">,</span> hookFlags<span class="token punctuation">,</span> create<span class="token punctuation">,</span> deps</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> hook <span class="token operator">=</span> <span class="token function">mountWorkInProgressHook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> nextDeps <span class="token operator">=</span> deps <span class="token operator">===</span> <span class="token keyword">undefined</span> <span class="token operator">?</span> <span class="token keyword">null</span> <span class="token operator">:</span> deps<span class="token punctuation">;</span>
  currentlyRenderingFiber<span class="token punctuation">.</span>flags <span class="token operator">|=</span> fiberFlags<span class="token punctuation">;</span>
  hook<span class="token punctuation">.</span>memoizedState <span class="token operator">=</span> <span class="token function">pushEffect</span><span class="token punctuation">(</span>
    HookHasEffect <span class="token operator">|</span> hookFlags<span class="token punctuation">,</span>
    create<span class="token punctuation">,</span>
    <span class="token keyword">undefined</span><span class="token punctuation">,</span>
    nextDeps<span class="token punctuation">,</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p><code>mountWorkInProgressHook</code>\u5728<code>useState</code>\u4E2D\u5DF2\u7ECF\u8BB2\u8FC7\uFF0C\u5176\u4E3B\u8981\u4F5C\u7528\u662F\u521B\u5EFA\u4E00\u4E2A<code>hook</code>\uFF0C\u5E76\u5C06\u8BE5<code>hook</code>\u4E0E\u5176\u4ED6<code>hook</code>\u5F62\u6210\u94FE\u8868\u5B58\u653E\u5230<code>fiber.memoizedState</code>\u5C5E\u6027\u4E0A\u3002</p><p><code>currentlyRenderingFiber.flags |= fiberFlags</code>\u8FD9\u91CC\u8868\u793A\u5982\u679C\u4F7F\u7528\u4E86<code>useEffect</code>\u8FD9\u4E2A<code>hook</code>\uFF0C\u90A3\u4E48<code>fiber.flags</code>\u4E0A\u4F1A\u589E\u52A0<code>Passive</code>\u548C<code>PassiveStatic</code>\u8FD9\u4E24\u4E2A\u6807\u8BC6\u7B26\u3002</p><p>\u63A5\u4E0B\u6765\u662F<code>pushEffect</code>\u65B9\u6CD5\uFF0C\u9996\u5148\u4F1A\u521B\u5EFA\u4E00\u4E2A<code>effect</code>\uFF1A</p><div class="language-javascript"><pre><code><span class="token keyword">const</span> <span class="token literal-property property">effect</span><span class="token operator">:</span> Effect <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u8868\u793A hook \u7684 tag</span>
  tag<span class="token punctuation">,</span>
  <span class="token comment">// \u521B\u5EFA\u65F6\u7684\u56DE\u8C03\u51FD\u6570</span>
  create<span class="token punctuation">,</span>
  <span class="token comment">// \u9500\u6BC1\u65F6\u7684\u56DE\u8C03\u51FD\u6570</span>
  destroy<span class="token punctuation">,</span>
  <span class="token comment">// hook \u7684\u4F9D\u8D56</span>
  deps<span class="token punctuation">,</span>
  <span class="token comment">// \u6307\u5411\u4E0B\u4E00\u4E2A effect</span>
  <span class="token literal-property property">next</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token keyword">null</span><span class="token operator">:</span> any<span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><p>\u8BE5<code>effect</code>\u7684<code>tag</code>\u4E3A<code>HasEffect | Passive</code>\uFF0C\u968F\u540E\u5C06\u8FD9\u4E2A<code>effect</code>\u4E0E\u5176\u4ED6\u7684<code>effect</code>\u5F62\u6210\u94FE\u8868\u7ED3\u6784\u5B58\u653E\u5230<code>fiber.updateQueue</code>\u4E2D\uFF1A</p><div class="language-javascript"><pre><code><span class="token keyword">let</span> <span class="token literal-property property">componentUpdateQueue</span><span class="token operator">:</span> <span class="token keyword">null</span> <span class="token operator">|</span> FunctionComponentUpdateQueue <span class="token operator">=</span> <span class="token punctuation">(</span>currentlyRenderingFiber<span class="token punctuation">.</span>updateQueue<span class="token operator">:</span> any<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u5982\u679C\u4E0D\u5B58\u5728 updateQueue\uFF0C\u8FDB\u884C\u521D\u59CB\u5316</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>componentUpdateQueue <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5EFA\u7ACB\u5FAA\u73AF\u94FE\u8868</span>
  componentUpdateQueue <span class="token operator">=</span> <span class="token function">createFunctionComponentUpdateQueue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  currentlyRenderingFiber<span class="token punctuation">.</span>updateQueue <span class="token operator">=</span> <span class="token punctuation">(</span>componentUpdateQueue<span class="token operator">:</span> any<span class="token punctuation">)</span><span class="token punctuation">;</span>
  componentUpdateQueue<span class="token punctuation">.</span>lastEffect <span class="token operator">=</span> effect<span class="token punctuation">.</span>next <span class="token operator">=</span> effect<span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5982\u679C\u5B58\u5728updateQueue\uFF0C\u5C06effect\u6DFB\u52A0\u5230\u94FE\u8868\u4E2D</span>
  <span class="token keyword">const</span> lastEffect <span class="token operator">=</span> componentUpdateQueue<span class="token punctuation">.</span>lastEffect<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>lastEffect <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    componentUpdateQueue<span class="token punctuation">.</span>lastEffect <span class="token operator">=</span> effect<span class="token punctuation">.</span>next <span class="token operator">=</span> effect<span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u6DFB\u52A0\u5230\u94FE\u8868\u7684\u524D\u9762</span>
    <span class="token keyword">const</span> firstEffect <span class="token operator">=</span> lastEffect<span class="token punctuation">.</span>next<span class="token punctuation">;</span>
    lastEffect<span class="token punctuation">.</span>next <span class="token operator">=</span> effect<span class="token punctuation">;</span>
    effect<span class="token punctuation">.</span>next <span class="token operator">=</span> firstEffect<span class="token punctuation">;</span>
    componentUpdateQueue<span class="token punctuation">.</span>lastEffect <span class="token operator">=</span> effect<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u8FD9\u91CC<code>fiber.updateQueue.lastEffect</code>\u6307\u5411\u7684\u662F\u65B0\u6DFB\u52A0\u7684<code>effect</code>\u3002</p><h3 id="rerender\u548Cupdate\u9636\u6BB5" tabindex="-1">rerender\u548Cupdate\u9636\u6BB5 <a class="header-anchor" href="#rerender\u548Cupdate\u9636\u6BB5" aria-hidden="true">#</a></h3><p><code>rerender</code>\u548C<code>update</code>\u9636\u6BB5\u90FD\u662F\u8C03\u7528\u7684<code>updateEffect</code>\u65B9\u6CD5\uFF0C\u4E5F\u662F\u8C03\u7528\u7684<code>updateEffectImpl</code>\u65B9\u6CD5\u3002\u9996\u5148\u4F1A\u83B7\u53D6\u76F8\u5E94\u7684<code>hook</code>:</p><div class="language-javascript"><pre><code><span class="token keyword">const</span> hook <span class="token operator">=</span> <span class="token function">updateWorkInProgressHook</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre></div><p>\u968F\u540E\u4F1A\u5224\u65AD\u4F9D\u8D56<code>deps</code>\u6709\u6CA1\u6709\u53D1\u751F\u53D8\u5316\u3002\u5982\u679C\u6CA1\u6709\u53D1\u751F\u53D8\u5316\uFF0C\u90A3\u4E48<code>pushEffect</code>\u7684\u65F6\u5019\uFF0C<code>effect.tags</code>\u4E0D\u5305\u542B<code>HasEffect</code>\u3002\u53CD\u4E4B\uFF0C\u5219\u4F1A\u5305\u542B\u3002</p><div class="language-javascript"><pre><code>hook<span class="token punctuation">.</span>memoizedState <span class="token operator">=</span> <span class="token function">pushEffect</span><span class="token punctuation">(</span>hookFlags<span class="token punctuation">,</span> create<span class="token punctuation">,</span> destroy<span class="token punctuation">,</span> nextDeps<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="uselayouteffect" tabindex="-1">useLayoutEffect <a class="header-anchor" href="#uselayouteffect" aria-hidden="true">#</a></h2><h3 id="mount-\u9636\u6BB5-1" tabindex="-1">mount \u9636\u6BB5 <a class="header-anchor" href="#mount-\u9636\u6BB5-1" aria-hidden="true">#</a></h3><p><code>useLayoutEffect</code>\u7684<code>mount</code>\u9636\u6BB5\u4E0E<code>useEffect</code>\u51E0\u4E4E\u4E00\u81F4\uFF0C\u4E3B\u8981\u7684\u533A\u522B\u6709\u4E24\u70B9\uFF1A</p><ul><li><code>fiber</code>\u7684<code>flags</code>\u4E3A<code>Update | LayoutStatic</code>\u3002</li><li><code>effect</code>\u7684<code>tag</code>\u4E3A<code>HasEffect | Layout</code>\u3002</li></ul><h3 id="rerender\u548Cupdate\u9636\u6BB5-1" tabindex="-1">rerender\u548Cupdate\u9636\u6BB5 <a class="header-anchor" href="#rerender\u548Cupdate\u9636\u6BB5-1" aria-hidden="true">#</a></h3><p>\u4E0E<code>useEffect</code>\u4E00\u81F4\uFF0C\u4E3B\u8981\u7684\u533A\u522B\u5728\u4E8E\uFF1A</p><ul><li><code>fiber</code>\u7684<code>flags</code>\u4E3A<code>UpdateEffect</code>\u3002</li><li><code>effect</code>\u7684<code>tag</code>\u4E3A<code>HasEffect | Layout</code>\u3002</li></ul><h2 id="usememo" tabindex="-1">useMemo <a class="header-anchor" href="#usememo" aria-hidden="true">#</a></h2><h3 id="mount-\u9636\u6BB5-2" tabindex="-1">mount \u9636\u6BB5 <a class="header-anchor" href="#mount-\u9636\u6BB5-2" aria-hidden="true">#</a></h3><div class="language-javascript"><pre><code><span class="token keyword">function</span> mountMemo<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>
  <span class="token function-variable function">nextCreate</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token constant">T</span><span class="token punctuation">,</span>
  <span class="token literal-property property">deps</span><span class="token operator">:</span> Array<span class="token operator">&lt;</span>mixed<span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token keyword">void</span> <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> hook <span class="token operator">=</span> <span class="token function">mountWorkInProgressHook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> nextDeps <span class="token operator">=</span> deps <span class="token operator">===</span> <span class="token keyword">undefined</span> <span class="token operator">?</span> <span class="token keyword">null</span> <span class="token operator">:</span> deps<span class="token punctuation">;</span>
  <span class="token keyword">const</span> nextValue <span class="token operator">=</span> <span class="token function">nextCreate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  hook<span class="token punctuation">.</span>memoizedState <span class="token operator">=</span> <span class="token punctuation">[</span>nextValue<span class="token punctuation">,</span> nextDeps<span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> nextValue<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u9996\u5148\u83B7\u53D6<code>hook</code>\uFF0C\u7136\u540E\u6267\u884C<code>nextCreate</code>\u5E76\u5C06\u7ED3\u679C\u8FD4\u56DE\u3002</p><h3 id="rerender\u548Cupdate\u9636\u6BB5-2" tabindex="-1">rerender\u548Cupdate\u9636\u6BB5 <a class="header-anchor" href="#rerender\u548Cupdate\u9636\u6BB5-2" aria-hidden="true">#</a></h3><p><code>updateMemo</code>\u65B9\u6CD5\u4E3B\u8981\u7528\u4E8E\u5224\u65AD\u524D\u540E\u7684<code>deps</code>\u662F\u5426\u4E00\u81F4\u3002\u5982\u679C\u4E00\u81F4\uFF0C\u5219\u8DF3\u8FC7\u51FD\u6570\u6267\u884C\uFF0C\u5C06\u5148\u524D\u7684\u503C\u8FD4\u56DE\uFF0C\u4ECE\u800C\u8FBE\u5230\u7F13\u5B58\u7684\u76EE\u7684\u3002</p><div class="language-javascript"><pre><code><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">areHookInputsEqual</span><span class="token punctuation">(</span>nextDeps<span class="token punctuation">,</span> prevDeps<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> prevState<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="usecallback" tabindex="-1">useCallback <a class="header-anchor" href="#usecallback" aria-hidden="true">#</a></h2><h3 id="mount-\u9636\u6BB5-3" tabindex="-1">mount \u9636\u6BB5 <a class="header-anchor" href="#mount-\u9636\u6BB5-3" aria-hidden="true">#</a></h3><div class="language-javascript"><pre><code><span class="token keyword">function</span> mountCallback<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>callback<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> <span class="token literal-property property">deps</span><span class="token operator">:</span> Array<span class="token operator">&lt;</span>mixed<span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token keyword">void</span> <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> hook <span class="token operator">=</span> <span class="token function">mountWorkInProgressHook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> nextDeps <span class="token operator">=</span> deps <span class="token operator">===</span> <span class="token keyword">undefined</span> <span class="token operator">?</span> <span class="token keyword">null</span> <span class="token operator">:</span> deps<span class="token punctuation">;</span>
  hook<span class="token punctuation">.</span>memoizedState <span class="token operator">=</span> <span class="token punctuation">[</span>callback<span class="token punctuation">,</span> nextDeps<span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> callback<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p><code>memoizedState</code>\u5B58\u50A8\u7684\u662F<code>callback</code>\u548C<code>deps</code>\u3002</p><h3 id="rerender\u548Cupdate\u9636\u6BB5-3" tabindex="-1">rerender\u548Cupdate\u9636\u6BB5 <a class="header-anchor" href="#rerender\u548Cupdate\u9636\u6BB5-3" aria-hidden="true">#</a></h3><p>\u5BF9\u6BD4<code>deps</code>\u770B\u662F\u5426\u53D1\u751F\u53D8\u5316\uFF0C\u5982\u679C\u6CA1\u53D8\uFF0C\u5219\u5C06\u539F<code>callback</code>\u8FD4\u56DE\u3002</p><div class="language-javascript"><pre><code><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">areHookInputsEqual</span><span class="token punctuation">(</span>nextDeps<span class="token punctuation">,</span> prevDeps<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> prevState<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="usecontext" tabindex="-1">useContext <a class="header-anchor" href="#usecontext" aria-hidden="true">#</a></h2><h3 id="mount\u3001rerender\u548Cupdate\u9636\u6BB5" tabindex="-1">mount\u3001rerender\u548Cupdate\u9636\u6BB5 <a class="header-anchor" href="#mount\u3001rerender\u548Cupdate\u9636\u6BB5" aria-hidden="true">#</a></h3><p><code>useContext</code>\u4E09\u4E2A\u9636\u6BB5\u90FD\u662F\u6267\u884C\u7684<code>readContext</code>\u65B9\u6CD5\uFF0C\u9996\u5148\u4F1A\u83B7\u53D6\u5230<code>context</code>\u7684<code>value</code>\u503C\uFF0C\u4E5F\u5C31\u662F\u7528\u6237\u5B9A\u4E49\u7684<code>context</code>\u7684\u503C\u3002</p><div class="language-javascript"><pre><code><span class="token keyword">const</span> value <span class="token operator">=</span> isPrimaryRenderer
  <span class="token operator">?</span> context<span class="token punctuation">.</span>_currentValue
  <span class="token operator">:</span> context<span class="token punctuation">.</span>_currentValue2<span class="token punctuation">;</span>
</code></pre></div><p>\u968F\u540E\u5224\u65AD<code>lastFullyObservedContext === context</code>\uFF0C\u5982\u679C\u4E3A<code>true</code>\uFF0C\u8BF4\u660E\u8BE5<code>context</code>\u5DF2\u7ECF\u88AB\u5904\u7406\u4E86\uFF0C\u65E0\u9700\u91CD\u590D\u5904\u7406\uFF0C\u8DF3\u8FC7\u5373\u53EF\u3002</p><div class="language-javascript"><pre><code><span class="token keyword">if</span> <span class="token punctuation">(</span>lastFullyObservedContext <span class="token operator">===</span> context<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// Nothing to do. We already observe everything in this context.</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u5426\u5219\u7684\u8BDD\uFF0C\u4F1A\u521B\u5EFA\u4E00\u4E2A<code>contextItem</code>\uFF0C\u5F62\u6210\u94FE\u8868\u5E76\u5B58\u653E\u5230<code>fiber.dependencies.firstContext</code>\u4E0A\uFF1A</p><div class="language-javascript"><pre><code><span class="token keyword">const</span> contextItem <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">context</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>context<span class="token operator">:</span> any<span class="token punctuation">)</span><span class="token operator">:</span> ReactContext<span class="token operator">&lt;</span>mixed<span class="token operator">&gt;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token literal-property property">memoizedValue</span><span class="token operator">:</span> value<span class="token punctuation">,</span>
  <span class="token literal-property property">next</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span>lastContextDependency <span class="token operator">===</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  lastContextDependency <span class="token operator">=</span> contextItem<span class="token punctuation">;</span>
  currentlyRenderingFiber<span class="token punctuation">.</span>dependencies <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">lanes</span><span class="token operator">:</span> NoLanes<span class="token punctuation">,</span>
    <span class="token literal-property property">firstContext</span><span class="token operator">:</span> contextItem<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
  lastContextDependency <span class="token operator">=</span> lastContextDependency<span class="token punctuation">.</span>next <span class="token operator">=</span> contextItem<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u8FD9\u91CC\u7684\u5904\u7406\u4E0E<code>class</code>\u7EC4\u4EF6\u7684<code>context</code>\u5904\u7406\u7C7B\u4F3C\u3002</p><h2 id="useref" tabindex="-1">useRef <a class="header-anchor" href="#useref" aria-hidden="true">#</a></h2><h3 id="mount-\u9636\u6BB5-4" tabindex="-1">mount \u9636\u6BB5 <a class="header-anchor" href="#mount-\u9636\u6BB5-4" aria-hidden="true">#</a></h3><div class="language-javascript"><pre><code><span class="token keyword">function</span> mountRef<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>initialValue<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token operator">|</span> current<span class="token operator">:</span> <span class="token constant">T</span> <span class="token operator">|</span><span class="token punctuation">}</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> hook <span class="token operator">=</span> <span class="token function">mountWorkInProgressHook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> ref <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">current</span><span class="token operator">:</span> initialValue <span class="token punctuation">}</span><span class="token punctuation">;</span>
  hook<span class="token punctuation">.</span>memoizedState <span class="token operator">=</span> ref<span class="token punctuation">;</span>
  <span class="token keyword">return</span> ref<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p><code>mountRef</code>\u65B9\u6CD5\u521B\u5EFA\u4E86\u4E00\u4E2A<code>{ current: xxx }</code>\u5BF9\u8C61\u5E76\u5C06\u5176\u8FD4\u56DE\u3002</p><h3 id="rerender\u548Cupdate\u9636\u6BB5-4" tabindex="-1">rerender\u548Cupdate\u9636\u6BB5 <a class="header-anchor" href="#rerender\u548Cupdate\u9636\u6BB5-4" aria-hidden="true">#</a></h3><div class="language-javascript"><pre><code><span class="token keyword">function</span> updateRef<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>initialValue<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token operator">|</span> current<span class="token operator">:</span> <span class="token constant">T</span> <span class="token operator">|</span><span class="token punctuation">}</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> hook <span class="token operator">=</span> <span class="token function">updateWorkInProgressHook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> hook<span class="token punctuation">.</span>memoizedState<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p><code>updateRef</code>\u4E5F\u975E\u5E38\u7684\u7B80\u5355\uFF0C\u5C06<code>hook.memoizedState</code>\u4E2D\u5B58\u50A8\u7684<code>{ current: xxx }</code>\u5BF9\u8C61\u8FD4\u56DE\u3002</p><h2 id="usetransition" tabindex="-1">useTransition <a class="header-anchor" href="#usetransition" aria-hidden="true">#</a></h2><h3 id="mount-\u9636\u6BB5-5" tabindex="-1">mount \u9636\u6BB5 <a class="header-anchor" href="#mount-\u9636\u6BB5-5" aria-hidden="true">#</a></h3><p><code>useTransition</code>\u7684\u5B9E\u73B0\u662F\u57FA\u4E8E<code>useState</code>\u7684\uFF1A</p><div class="language-javascript"><pre><code><span class="token keyword">function</span> <span class="token function">mountTransition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token punctuation">[</span>boolean<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>isPending<span class="token punctuation">,</span> setPending<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">mountState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> start <span class="token operator">=</span> <span class="token function">startTransition</span><span class="token punctuation">.</span><span class="token function">bind</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> setPending<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> hook <span class="token operator">=</span> <span class="token function">mountWorkInProgressHook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  hook<span class="token punctuation">.</span>memoizedState <span class="token operator">=</span> start<span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">[</span>isPending<span class="token punctuation">,</span> start<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u9996\u5148\u4F1A\u901A\u8FC7<code>useState</code>\u5B9A\u4E49<code>isPending\u548CsetPending</code>\u65B9\u6CD5\uFF0C\u7136\u540E\u5B9A\u4E49\u4E00\u4E2A<code>start</code>\u65B9\u6CD5\u5E76\u5C06\u5176\u8FD4\u56DE\uFF1A</p><div class="language-javascript"><pre><code><span class="token keyword">function</span> <span class="token function">startTransition</span><span class="token punctuation">(</span><span class="token parameter">setPending<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> previousPriority <span class="token operator">=</span> <span class="token function">getCurrentUpdatePriority</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">setCurrentUpdatePriority</span><span class="token punctuation">(</span>
    <span class="token function">higherEventPriority</span><span class="token punctuation">(</span>previousPriority<span class="token punctuation">,</span> ContinuousEventPriority<span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// \u6DFB\u52A0\u4E00\u4E2A update\uFF0C\u4F18\u5148\u7EA7\u4E3A\u5F53\u524D update \u4F18\u5148\u7EA7</span>
  <span class="token function">setPending</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// \u6B64\u65F6\u8FDB\u884C schedule \u7684\u65F6\u5019\uFF0CrequestUpdateLane \u4E3A\u539F\u59CB\u7684 lane</span>
  <span class="token comment">// \u6BD4\u5982\u5728 click \u7684\u65F6\u5019\u5C31\u4F1A\u662F\u540C\u6B65 lane</span>
  <span class="token keyword">const</span> prevTransition <span class="token operator">=</span> ReactCurrentBatchConfig<span class="token punctuation">.</span>transition<span class="token punctuation">;</span>
  ReactCurrentBatchConfig<span class="token punctuation">.</span>transition <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u6DFB\u52A0\u4E00\u4E2A update\uFF0CrequestUpdateLane\u7684\u7ED3\u679C\u4E3A transition lane</span>
    <span class="token function">setPending</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token comment">// \u6267\u884C startTransition \u7684\u56DE\u8C03</span>
    <span class="token function">callback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
    <span class="token function">setCurrentUpdatePriority</span><span class="token punctuation">(</span>previousPriority<span class="token punctuation">)</span><span class="token punctuation">;</span>
    ReactCurrentBatchConfig<span class="token punctuation">.</span>transition <span class="token operator">=</span> prevTransition<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u9996\u5148\u4F1A\u8BBE\u7F6E\u66F4\u65B0\u65F6\u7684\u4F18\u5148\u7EA7\uFF0C\u8FD9\u6837\u5728<code>setPending</code>\u7684\u65F6\u5019\uFF0C\u4F1A\u8FDB\u884C<code>requestUpdateLane</code>\uFF0C\u62FF\u5230\u5BF9\u5E94\u7684<code>lane</code>\u3002\u968F\u540E\u5C06<code>ReactCurrentBatchConfig.transition</code>\u7F6E\u4E3A<code>1</code>\uFF0C\u5728<code>requestUpdateLane</code>\u4F1A\u8FD4\u56DE<code>transition lane</code>\u3002\u56E0\u6B64<code>try</code>\u5185\u90E8<code>setPending(false)</code>\u662F\u4E00\u4E2A<code>transition lane</code>\u7684\u66F4\u65B0\u3002\u540C\u6837<code>callback</code>\u5185\u90E8\u5B9A\u4E49\u7684\u66F4\u65B0\u4E5F\u5C06\u4F1A\u662F\u4E00\u4E2A<code>transition lane</code>\u7684\u66F4\u65B0\u3002\u8FD9\u6837\u5728<code>transition</code>\u66F4\u65B0\u7684\u65F6\u5019\uFF0C<code>setPending(false)</code>\u4F1A\u6267\u884C\u3002</p><h3 id="rerender\u548Cupdate\u9636\u6BB5-5" tabindex="-1">rerender\u548Cupdate\u9636\u6BB5 <a class="header-anchor" href="#rerender\u548Cupdate\u9636\u6BB5-5" aria-hidden="true">#</a></h3><div class="language-javascript"><pre><code><span class="token keyword">function</span> <span class="token function">updateTransition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token punctuation">[</span>boolean<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>isPending<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">updateState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> hook <span class="token operator">=</span> <span class="token function">updateWorkInProgressHook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> start <span class="token operator">=</span> hook<span class="token punctuation">.</span>memoizedState<span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">[</span>isPending<span class="token punctuation">,</span> start<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p><code>update</code>\u9636\u6BB5\u6BD4\u8F83\u7B80\u5355\uFF0C\u62FF\u5230<code>isPending</code>\u548C<code>start</code>\u65B9\u6CD5\u8FD4\u56DE\u5373\u53EF\u3002</p><h2 id="usedeferredvalue" tabindex="-1">useDeferredValue <a class="header-anchor" href="#usedeferredvalue" aria-hidden="true">#</a></h2><h3 id="mount\u3001rerender\u548Cupdate\u9636\u6BB5-1" tabindex="-1">mount\u3001rerender\u548Cupdate\u9636\u6BB5 <a class="header-anchor" href="#mount\u3001rerender\u548Cupdate\u9636\u6BB5-1" aria-hidden="true">#</a></h3><p><code>useDeferredValue</code>\u7684\u5B9E\u73B0\u662F\u57FA\u4E8E<code>useState</code>\u548C<code>useEffect</code>\u7684\uFF1A</p><div class="language-javascript"><pre><code><span class="token keyword">function</span> mountDeferredValue<span class="token operator">&lt;</span><span class="token constant">T</span><span class="token operator">&gt;</span><span class="token punctuation">(</span>value<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>prevValue<span class="token punctuation">,</span> setValue<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">mountState</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">mountEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> prevTransition <span class="token operator">=</span> ReactCurrentBatchConfig<span class="token punctuation">.</span>transition<span class="token punctuation">;</span>
    ReactCurrentBatchConfig<span class="token punctuation">.</span>transition <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      <span class="token function">setValue</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
      ReactCurrentBatchConfig<span class="token punctuation">.</span>transition <span class="token operator">=</span> prevTransition<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>value<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> prevValue<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u5728<code>useEffect</code>\u5185\u90E8\u8BBE\u7F6E<code>value</code>\u65F6\uFF0C\u4F1A\u5C06<code>ReactCurrentBatchConfig.transition</code>\u7F6E\u4E3A<code>1</code>\uFF0C\u56E0\u6B64\u66F4\u65B0\u5BF9\u5E94\u7684<code>lane</code>\u662F<code>transition lane</code>\u3002</p>`,115),p=[o];function c(r,u,l,k,i,d){return s(),a("div",null,p)}var y=n(e,[["render",c]]);export{f as __pageData,y as default};
