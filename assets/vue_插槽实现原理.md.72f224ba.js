import{_ as n,c as s,o as a,a as t}from"./app.943409a9.js";const y='{"title":"\u63D2\u69FD\u5B9E\u73B0\u539F\u7406","description":"","frontmatter":{},"headers":[{"level":2,"title":"\u7236\u7EC4\u4EF6\u4F7F\u7528","slug":"\u7236\u7EC4\u4EF6\u4F7F\u7528"},{"level":2,"title":"\u7236\u7EC4\u4EF6parse","slug":"\u7236\u7EC4\u4EF6parse"},{"level":2,"title":"\u7236\u7EC4\u4EF6generate","slug":"\u7236\u7EC4\u4EF6generate"},{"level":3,"title":"genData","slug":"gendata"},{"level":3,"title":"genScopedSlots","slug":"genscopedslots"},{"level":3,"title":"genScopedSlot","slug":"genscopedslot"},{"level":2,"title":"\u7236\u7EC4\u4EF6render","slug":"\u7236\u7EC4\u4EF6render"},{"level":2,"title":"\u5B50\u7EC4\u4EF6\u5F00\u59CB\u5B9E\u4F8B\u5316","slug":"\u5B50\u7EC4\u4EF6\u5F00\u59CB\u5B9E\u4F8B\u5316"},{"level":2,"title":"\u5B50\u7EC4\u4EF6\u5408\u5E76\u9009\u9879","slug":"\u5B50\u7EC4\u4EF6\u5408\u5E76\u9009\u9879"},{"level":2,"title":"\u5B50\u7EC4\u4EF6\u6570\u636E\u521D\u59CB\u5316","slug":"\u5B50\u7EC4\u4EF6\u6570\u636E\u521D\u59CB\u5316"},{"level":2,"title":"\u5B50\u7EC4\u4EF6slot\u4F7F\u7528","slug":"\u5B50\u7EC4\u4EF6slot\u4F7F\u7528"},{"level":2,"title":"\u5B50\u7EC4\u4EF6slot parse","slug":"\u5B50\u7EC4\u4EF6slot-parse"},{"level":2,"title":"\u5B50\u7EC4\u4EF6slot generate","slug":"\u5B50\u7EC4\u4EF6slot-generate"},{"level":2,"title":"\u5B50\u7EC4\u4EF6 render","slug":"\u5B50\u7EC4\u4EF6-render"},{"level":3,"title":"_render","slug":"render"},{"level":3,"title":"normalizeScopedSlots","slug":"normalizescopedslots"},{"level":3,"title":"renderSlot","slug":"renderslot"},{"level":2,"title":"\u603B\u7ED3","slug":"\u603B\u7ED3"}],"relativePath":"vue/\u63D2\u69FD\u5B9E\u73B0\u539F\u7406.md","lastUpdated":1652365898000}',p={},o=t(`<h1 id="\u63D2\u69FD\u5B9E\u73B0\u539F\u7406" tabindex="-1">\u63D2\u69FD\u5B9E\u73B0\u539F\u7406 <a class="header-anchor" href="#\u63D2\u69FD\u5B9E\u73B0\u539F\u7406" aria-hidden="true">#</a></h1><p>\u9996\u5148\u662F\u7236\u7EC4\u4EF6\uFF1A</p><h2 id="\u7236\u7EC4\u4EF6\u4F7F\u7528" tabindex="-1">\u7236\u7EC4\u4EF6\u4F7F\u7528 <a class="header-anchor" href="#\u7236\u7EC4\u4EF6\u4F7F\u7528" aria-hidden="true">#</a></h2><div class="language-javascript"><pre><code><span class="token comment">// 1. \u7236\u7EC4\u4EF6\u4F7F\u7528\u65F6</span>
<span class="token operator">&lt;</span>ChildComponent <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;component&quot;</span><span class="token operator">&gt;</span>
  <span class="token operator">&lt;</span>template v<span class="token operator">-</span>slot<span class="token operator">:</span><span class="token keyword">default</span><span class="token operator">=</span><span class="token string">&quot;scope&quot;</span><span class="token operator">&gt;</span>
    <span class="token punctuation">{</span><span class="token punctuation">{</span> scope <span class="token punctuation">}</span><span class="token punctuation">}</span>
  <span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>ChildComponent<span class="token operator">&gt;</span>
  
</code></pre></div><h2 id="\u7236\u7EC4\u4EF6parse" tabindex="-1">\u7236\u7EC4\u4EF6parse <a class="header-anchor" href="#\u7236\u7EC4\u4EF6parse" aria-hidden="true">#</a></h2><div class="language-javascript"><pre><code><span class="token comment">// 2. \u7ECF\u8FC7 parse \u7F16\u8BD1\u6210 ast \u540E (\u8C03\u7528\u7684\u662F processSlotContent \u65B9\u6CD5)</span>
<span class="token comment">// \u7ED1\u5B9A\u7684\u503C\uFF08\u7531\u5B50\u7EC4\u4EF6\u4F20\u9012\uFF09</span>
el<span class="token punctuation">.</span>slotScope <span class="token operator">=</span> scope
<span class="token comment">// \u7ED1\u5B9A\u7684 slot \u540D\u79F0</span>
el<span class="token punctuation">.</span>slotTarget <span class="token operator">=</span> <span class="token string">&quot;default&quot;</span>
<span class="token comment">// \u52A8\u6001\u7ED1\u5B9A\u7684 slot \u540D\u79F0</span>
el<span class="token punctuation">.</span>slotTargetDynamic <span class="token operator">=</span> <span class="token keyword">default</span>
<span class="token comment">// template \u5185\u90E8 children \u4EE3\u7801</span>
el<span class="token punctuation">.</span>children <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token comment">// ChildComponent \u5BF9\u5E94\u7684 ast \u4E0B\u7684 scopedSlots \u8BB0\u5F55\u7740 slot \u7684 ast</span>
currentParent<span class="token punctuation">.</span>scopedSlots <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">[</span>name<span class="token punctuation">]</span> <span class="token operator">=</span> element
</code></pre></div><h2 id="\u7236\u7EC4\u4EF6generate" tabindex="-1">\u7236\u7EC4\u4EF6generate <a class="header-anchor" href="#\u7236\u7EC4\u4EF6generate" aria-hidden="true">#</a></h2><h3 id="gendata" tabindex="-1">genData <a class="header-anchor" href="#gendata" aria-hidden="true">#</a></h3><div class="language-javascript"><pre><code><span class="token comment">// 3. \u7ECF\u8FC7 generate \u751F\u6210\u4EE3\u7801\u540E\uFF08\u5148\u8C03\u7528 genData \u65B9\u6CD5\uFF0C\u6B64\u65F6\u4F1A\u8C03\u7528 genScopedSlots \u65B9\u6CD5\uFF09</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>el<span class="token punctuation">.</span>slotTarget <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>el<span class="token punctuation">.</span>slotScope<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u5982\u679C\u4E0D\u5B58\u5728 slotScope\uFF0C\u8868\u793A\u6CA1\u6709\u4F20\u9012\u53C2\u6570</span>
  data <span class="token operator">+=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">slot:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>el<span class="token punctuation">.</span>slotTarget<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">,</span><span class="token template-punctuation string">\`</span></span>
<span class="token punctuation">}</span>
<span class="token comment">// \u5BF9\u4E8E ChildComponent \u8FD9\u4E2A\u7EC4\u4EF6</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>el<span class="token punctuation">.</span>scopedSlots<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  data <span class="token operator">+=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">genScopedSlots</span><span class="token punctuation">(</span>el<span class="token punctuation">,</span> el<span class="token punctuation">.</span>scopedSlots<span class="token punctuation">,</span> state<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">,</span><span class="token template-punctuation string">\`</span></span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="genscopedslots" tabindex="-1">genScopedSlots <a class="header-anchor" href="#genscopedslots" aria-hidden="true">#</a></h3><div class="language-javascript"><pre><code><span class="token comment">// 4. genScopedSlots \u65B9\u6CD5</span>
<span class="token keyword">function</span> <span class="token function">genScopedSlots</span><span class="token punctuation">(</span>
  <span class="token parameter"><span class="token literal-property property">el</span><span class="token operator">:</span> ASTElement<span class="token punctuation">,</span>
  <span class="token literal-property property">slots</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span>key<span class="token operator">:</span> string<span class="token punctuation">]</span><span class="token operator">:</span> ASTElement <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">state</span><span class="token operator">:</span> CodegenState</span>
<span class="token punctuation">)</span><span class="token operator">:</span> string <span class="token punctuation">{</span>
  <span class="token comment">// \u901A\u8FC7\u8FD9\u91CC\u5224\u65AD slot \u662F\u5426\u9700\u8981\u5F3A\u5236\u66F4\u65B0\u3002</span>
  <span class="token keyword">let</span> needsForceUpdate <span class="token operator">=</span> el<span class="token punctuation">.</span>for <span class="token operator">||</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>slots<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">some</span><span class="token punctuation">(</span><span class="token parameter">key</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> slot <span class="token operator">=</span> slots<span class="token punctuation">[</span>key<span class="token punctuation">]</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>
      slot<span class="token punctuation">.</span>slotTargetDynamic <span class="token operator">||</span>  <span class="token comment">// \u5982\u679C\u5B58\u5728\u52A8\u6001\u7ED1\u5B9A\u7684\u7C7B\u578B</span>
      slot<span class="token punctuation">.</span>if <span class="token operator">||</span>	<span class="token comment">// \u5982\u679C\u5728 if \u4E2D</span>
      slot<span class="token punctuation">.</span>for <span class="token operator">||</span> <span class="token comment">// \u5982\u679C\u5728 for \u4E2D</span>
      <span class="token function">containsSlotChild</span><span class="token punctuation">(</span>slot<span class="token punctuation">)</span> <span class="token comment">// \u5982\u679C\u5185\u90E8\u8FD8\u5B58\u5728 slot \u6807\u7B7E</span>
    <span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>

  <span class="token keyword">let</span> needsKey <span class="token operator">=</span> <span class="token operator">!</span><span class="token operator">!</span>el<span class="token punctuation">.</span>if
  <span class="token comment">// \u7EE7\u7EED\u5224\u65AD\u662F\u5426\u9700\u8981\u66F4\u65B0</span>
  <span class="token comment">// \u4E0D\u9700\u8981\u5F3A\u5236\u66F4\u65B0\u65F6\uFF0C\u5224\u65AD\u662F\u5426\u5728 for \u5FAA\u73AF\u6216 if \u5F53\u4E2D</span>
  <span class="token comment">// \u5224\u65AD parent.slotScope \u5B58\u5728</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>needsForceUpdate<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> parent <span class="token operator">=</span> el<span class="token punctuation">.</span>parent
    <span class="token keyword">while</span> <span class="token punctuation">(</span>parent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>
        <span class="token punctuation">(</span>parent<span class="token punctuation">.</span>slotScope <span class="token operator">&amp;&amp;</span> parent<span class="token punctuation">.</span>slotScope <span class="token operator">!==</span> emptySlotScopeToken<span class="token punctuation">)</span> <span class="token operator">||</span>
        parent<span class="token punctuation">.</span>for
      <span class="token punctuation">)</span> <span class="token punctuation">{</span>
        needsForceUpdate <span class="token operator">=</span> <span class="token boolean">true</span>
        <span class="token keyword">break</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>parent<span class="token punctuation">.</span>if<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        needsKey <span class="token operator">=</span> <span class="token boolean">true</span>
      <span class="token punctuation">}</span>
      parent <span class="token operator">=</span> parent<span class="token punctuation">.</span>parent
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u952E\u503C\u5BF9\u5F62\u5F0F\uFF1A [{ key: &quot;default&quot;: fn: fn, proxy: false/true }]</span>
  <span class="token keyword">const</span> generatedSlots <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>slots<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">key</span> <span class="token operator">=&gt;</span> <span class="token function">genScopedSlot</span><span class="token punctuation">(</span>slots<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">,</span> state<span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;,&#39;</span><span class="token punctuation">)</span>

  <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">scopedSlots:_u([</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>generatedSlots<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">]</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>needsForceUpdate <span class="token operator">?</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">,null,true</span><span class="token template-punctuation string">\`</span></span> <span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token template-punctuation string">\`</span></span>
    <span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token operator">!</span>needsForceUpdate <span class="token operator">&amp;&amp;</span> needsKey <span class="token operator">?</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">,null,false,</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">hash</span><span class="token punctuation">(</span>generatedSlots<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span> <span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token template-punctuation string">\`</span></span>
    <span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">)</span><span class="token template-punctuation string">\`</span></span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="genscopedslot" tabindex="-1">genScopedSlot <a class="header-anchor" href="#genscopedslot" aria-hidden="true">#</a></h3><div class="language-javascript"><pre><code><span class="token keyword">function</span> <span class="token function">genScopedSlot</span><span class="token punctuation">(</span>
  <span class="token parameter"><span class="token literal-property property">el</span><span class="token operator">:</span> ASTElement<span class="token punctuation">,</span>
  <span class="token literal-property property">state</span><span class="token operator">:</span> CodegenState</span>
<span class="token punctuation">)</span><span class="token operator">:</span> string <span class="token punctuation">{</span>
  <span class="token comment">// 1. \u4F7F\u7528\u5230\u7684\u53D8\u91CF\uFF0C\u5C06\u5176\u4F5C\u4E3A\u53C2\u6570</span>
  <span class="token keyword">const</span> slotScope <span class="token operator">=</span> el<span class="token punctuation">.</span>slotScope <span class="token operator">===</span> emptySlotScopeToken
    <span class="token operator">?</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token template-punctuation string">\`</span></span>
    <span class="token operator">:</span> <span class="token function">String</span><span class="token punctuation">(</span>el<span class="token punctuation">.</span>slotScope<span class="token punctuation">)</span>
  <span class="token comment">// 2. \u5B9A\u4E49\u53EF\u4EE5\u751F\u6210 vnode \u7684\u51FD\u6570\uFF0C\u5E76\u4F20\u5165\u5B9A\u4E49\u7684\u53C2\u6570</span>
  <span class="token keyword">const</span> fn <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">function(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>slotScope<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">){</span><span class="token template-punctuation string">\`</span></span> <span class="token operator">+</span>
    <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">return </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>el<span class="token punctuation">.</span>tag <span class="token operator">===</span> <span class="token string">&#39;template&#39;</span>
      <span class="token operator">?</span> el<span class="token punctuation">.</span>if <span class="token operator">&amp;&amp;</span> isLegacySyntax
        <span class="token operator">?</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>el<span class="token punctuation">.</span>if<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">)?</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token function">genChildren</span><span class="token punctuation">(</span>el<span class="token punctuation">,</span> state<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token string">&#39;undefined&#39;</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">:undefined</span><span class="token template-punctuation string">\`</span></span>
        <span class="token operator">:</span> <span class="token function">genChildren</span><span class="token punctuation">(</span>el<span class="token punctuation">,</span> state<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token string">&#39;undefined&#39;</span>
      <span class="token operator">:</span> <span class="token function">genElement</span><span class="token punctuation">(</span>el<span class="token punctuation">,</span> state<span class="token punctuation">)</span>
    <span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">}</span><span class="token template-punctuation string">\`</span></span>
  <span class="token keyword">const</span> reverseProxy <span class="token operator">=</span> slotScope <span class="token operator">?</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token template-punctuation string">\`</span></span> <span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">,proxy:true</span><span class="token template-punctuation string">\`</span></span>
  <span class="token comment">// 3. \u751F\u6210\u952E\u503C\u5BF9\u5F62\u5F0F</span>
  <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">{key:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>el<span class="token punctuation">.</span>slotTarget <span class="token operator">||</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&quot;default&quot;</span><span class="token template-punctuation string">\`</span></span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">,fn:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>fn<span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>reverseProxy<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">}</span><span class="token template-punctuation string">\`</span></span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="\u7236\u7EC4\u4EF6render" tabindex="-1">\u7236\u7EC4\u4EF6render <a class="header-anchor" href="#\u7236\u7EC4\u4EF6render" aria-hidden="true">#</a></h2><div class="language-javascript"><pre><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">resolveScopedSlots</span><span class="token punctuation">(</span>
  <span class="token comment">/**
   * \u4F8B\u5982
   * [
   *  {
   *    key: default
   *    fn: (user) =&gt; {...}
   *  }
   * ]
   */</span>
  <span class="token literal-property property">fns</span><span class="token operator">:</span> ScopedSlotsData<span class="token punctuation">,</span>
  res<span class="token operator">?</span><span class="token operator">:</span> Object<span class="token punctuation">,</span>  <span class="token comment">// null \u6216\u8005 undefined \u6216 {xx}</span>
  hasDynamicKeys<span class="token operator">?</span><span class="token operator">:</span> boolean<span class="token punctuation">,</span> <span class="token comment">// \u662F\u5426\u5F3A\u5236\u66F4\u65B0</span>
  contentHashKey<span class="token operator">?</span><span class="token operator">:</span> number <span class="token comment">// \u4E0D\u5F3A\u5236\u66F4\u65B0\u65F6\u7684 hash</span>
<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span>key<span class="token operator">:</span> string<span class="token punctuation">]</span><span class="token operator">:</span> Function<span class="token punctuation">,</span> <span class="token literal-property property">$stable</span><span class="token operator">:</span> boolean <span class="token punctuation">}</span> <span class="token punctuation">{</span>
  <span class="token comment">// ! $stable \u6839\u636E hasDynamicKeys \u5224\u65AD\uFF0C\u5728 generate \u7684\u65F6\u5019\u5DF2\u7ECF\u751F\u6210</span>
  res <span class="token operator">=</span> res <span class="token operator">||</span> <span class="token punctuation">{</span> <span class="token literal-property property">$stable</span><span class="token operator">:</span> <span class="token operator">!</span>hasDynamicKeys <span class="token punctuation">}</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>i <span class="token operator">&lt;</span> fns<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> slot <span class="token operator">=</span> fns<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>slot<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">resolveScopedSlots</span><span class="token punctuation">(</span>slot<span class="token punctuation">,</span> res<span class="token punctuation">,</span> hasDynamicKeys<span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>slot<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>slot<span class="token punctuation">.</span>proxy<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        slot<span class="token punctuation">.</span>fn<span class="token punctuation">.</span>proxy <span class="token operator">=</span> <span class="token boolean">true</span>
      <span class="token punctuation">}</span>
      res<span class="token punctuation">[</span>slot<span class="token punctuation">.</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> slot<span class="token punctuation">.</span>fn
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u8F6C\u6362\u6210\u4E86 res { default: fn1, header: fn2  }</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>contentHashKey<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">(</span>res<span class="token operator">:</span> any<span class="token punctuation">)</span><span class="token punctuation">.</span>$key <span class="token operator">=</span> contentHashKey
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> res
<span class="token punctuation">}</span>
</code></pre></div><h2 id="\u5B50\u7EC4\u4EF6\u5F00\u59CB\u5B9E\u4F8B\u5316" tabindex="-1">\u5B50\u7EC4\u4EF6\u5F00\u59CB\u5B9E\u4F8B\u5316 <a class="header-anchor" href="#\u5B50\u7EC4\u4EF6\u5F00\u59CB\u5B9E\u4F8B\u5316" aria-hidden="true">#</a></h2><p>\u7236\u7EC4\u4EF6\u7F16\u8BD1\u5B8C\u6BD5\u540E\uFF0C\u66F4\u65B0\u65F6\uFF0C\u4F1A\u9047\u5230<code>ChildComponent</code>\u7EC4\u4EF6\uFF0C\u8FDB\u5165\u5230\u5B50\u7EC4\u4EF6\u7684\u521B\u5EFA\u73AF\u8282\uFF0C\u6B64\u65F6<code>data</code>\u91CC\u9762\u5305\u542B\u5904\u7406\u540E\u7684<code>scopedSlots</code>\u3002</p><div class="language-javascript"><pre><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">createComponentInstanceForVnode</span> <span class="token punctuation">(</span>
  <span class="token parameter"><span class="token literal-property property">vnode</span><span class="token operator">:</span> any<span class="token punctuation">,</span>
  <span class="token literal-property property">parent</span><span class="token operator">:</span> any</span>
<span class="token punctuation">)</span><span class="token operator">:</span> Component <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token literal-property property">options</span><span class="token operator">:</span> InternalComponentOptions <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">_isComponent</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token literal-property property">_parentVnode</span><span class="token operator">:</span> vnode<span class="token punctuation">,</span> <span class="token comment">// vnode.data \u4E2D\u5B58\u653E\u7740 scopedSlots</span>
    parent <span class="token comment">// \u6307\u5411\u5F53\u524D\u66F4\u65B0\u7684\u7EC4\u4EF6\u7684\u5B9E\u4F8B</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// render \u9636\u6BB5 createComponent \u751F\u6210vnode\u7684\u65F6\u5019\uFF0C</span>
  <span class="token comment">// options \u90FD\u5B58\u5728componentOptions\u4E2D</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">vnode<span class="token punctuation">.</span>componentOptions<span class="token punctuation">.</span>Ctor</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="\u5B50\u7EC4\u4EF6\u5408\u5E76\u9009\u9879" tabindex="-1">\u5B50\u7EC4\u4EF6\u5408\u5E76\u9009\u9879 <a class="header-anchor" href="#\u5B50\u7EC4\u4EF6\u5408\u5E76\u9009\u9879" aria-hidden="true">#</a></h2><div class="language-javascript"><pre><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">initInternalComponent</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">vm</span><span class="token operator">:</span> Component<span class="token punctuation">,</span> <span class="token literal-property property">options</span><span class="token operator">:</span> InternalComponentOptions</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// * Vue \u6784\u9020\u51FD\u6570\u7684 options</span>
  <span class="token comment">// * const options: InternalComponentOptions = {</span>
  <span class="token comment">// *   _isComponent: true,</span>
  <span class="token comment">// *   _parentVnode: vnode,</span>
  <span class="token comment">// *   parent</span>
  <span class="token comment">// * }</span>
  <span class="token keyword">const</span> opts <span class="token operator">=</span> vm<span class="token punctuation">.</span>$options <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>vm<span class="token punctuation">.</span>constructor<span class="token punctuation">.</span>options<span class="token punctuation">)</span>
  <span class="token comment">// _parentVnode \u4E3A\u7EC4\u4EF6\u7684 vnode</span>
  <span class="token keyword">const</span> parentVnode <span class="token operator">=</span> options<span class="token punctuation">.</span>_parentVnode
  opts<span class="token punctuation">.</span>parent <span class="token operator">=</span> options<span class="token punctuation">.</span>parent
  opts<span class="token punctuation">.</span>_parentVnode <span class="token operator">=</span> parentVnode

  <span class="token keyword">const</span> vnodeComponentOptions <span class="token operator">=</span> parentVnode<span class="token punctuation">.</span>componentOptions
  <span class="token comment">// \u7EC4\u4EF6\u4F20\u503C</span>
  opts<span class="token punctuation">.</span>propsData <span class="token operator">=</span> vnodeComponentOptions<span class="token punctuation">.</span>propsData
  <span class="token comment">// \u7EC4\u4EF6\u76D1\u542C\u7684\u4E8B\u4EF6</span>
  opts<span class="token punctuation">.</span>_parentListeners <span class="token operator">=</span> vnodeComponentOptions<span class="token punctuation">.</span>listeners
  <span class="token comment">// \u7EC4\u4EF6\u5185\u90E8\u7684\u5185\u5BB9\u89E3\u6790\u4E3A children\u3002</span>
  opts<span class="token punctuation">.</span>_renderChildren <span class="token operator">=</span> vnodeComponentOptions<span class="token punctuation">.</span>children
  opts<span class="token punctuation">.</span>_componentTag <span class="token operator">=</span> vnodeComponentOptions<span class="token punctuation">.</span>tag
<span class="token punctuation">}</span>
</code></pre></div><h2 id="\u5B50\u7EC4\u4EF6\u6570\u636E\u521D\u59CB\u5316" tabindex="-1">\u5B50\u7EC4\u4EF6\u6570\u636E\u521D\u59CB\u5316 <a class="header-anchor" href="#\u5B50\u7EC4\u4EF6\u6570\u636E\u521D\u59CB\u5316" aria-hidden="true">#</a></h2><div class="language-javascript"><pre><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">initRender</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">vm</span><span class="token operator">:</span> Component</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> options <span class="token operator">=</span> vm<span class="token punctuation">.</span>$options
  <span class="token keyword">const</span> parentVnode <span class="token operator">=</span> vm<span class="token punctuation">.</span>$vnode <span class="token operator">=</span> options<span class="token punctuation">.</span>_parentVnode
  <span class="token keyword">const</span> renderContext <span class="token operator">=</span> parentVnode <span class="token operator">&amp;&amp;</span> parentVnode<span class="token punctuation">.</span>context
  <span class="token comment">// _renderChildren \u4E3A\u7236\u7EC4\u4EF6\u8C03\u7528\u5B50\u7EC4\u4EF6\u65F6\u5B50\u7EC4\u4EF6\u4E4B\u95F4\u7684\u8282\u70B9\u3002</span>
  <span class="token comment">// \u901A\u8FC7 resolveSlots\u65B9\u6CD5 \u5C06 children \u8F6C\u6362\u6210 slots \u5F62\u5F0F</span>
  <span class="token comment">// slots = { default: [Vnode1, Vnode2], [name]: [Vnode], ... }</span>
  vm<span class="token punctuation">.</span>$slots <span class="token operator">=</span> <span class="token function">resolveSlots</span><span class="token punctuation">(</span>options<span class="token punctuation">.</span>_renderChildren<span class="token punctuation">,</span> renderContext<span class="token punctuation">)</span>
  vm<span class="token punctuation">.</span>$scopedSlots <span class="token operator">=</span> emptyObject
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">resolveSlots</span><span class="token punctuation">(</span>
  <span class="token parameter"><span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token operator">?</span>Array<span class="token operator">&lt;</span>VNode<span class="token operator">&gt;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">context</span><span class="token operator">:</span> <span class="token operator">?</span>Component</span>
<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span>key<span class="token operator">:</span> string<span class="token punctuation">]</span><span class="token operator">:</span> Array<span class="token operator">&lt;</span>VNode<span class="token operator">&gt;</span> <span class="token punctuation">}</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>children <span class="token operator">||</span> <span class="token operator">!</span>children<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">const</span> slots <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> l <span class="token operator">=</span> children<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i <span class="token operator">&lt;</span> l<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> child <span class="token operator">=</span> children<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
    <span class="token keyword">const</span> data <span class="token operator">=</span> child<span class="token punctuation">.</span>data
   	<span class="token comment">// \u5220\u9664 data.attrs.slot \u5C5E\u6027</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>data <span class="token operator">&amp;&amp;</span> data<span class="token punctuation">.</span>attrs <span class="token operator">&amp;&amp;</span> data<span class="token punctuation">.</span>attrs<span class="token punctuation">.</span>slot<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">delete</span> data<span class="token punctuation">.</span>attrs<span class="token punctuation">.</span>slot
    <span class="token punctuation">}</span>
   	<span class="token comment">// \u5982\u679C data.slot \u5B58\u5728\uFF0C\u8BF4\u660E\u6B64\u65F6 slotScope \u4E0D\u5B58\u5728\uFF08genData\u65F6\u5904\u7406\u7684\uFF09</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>child<span class="token punctuation">.</span>context <span class="token operator">===</span> context <span class="token operator">||</span> child<span class="token punctuation">.</span>fnContext <span class="token operator">===</span> context<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
      data <span class="token operator">&amp;&amp;</span> data<span class="token punctuation">.</span>slot <span class="token operator">!=</span> <span class="token keyword">null</span>
    <span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> name <span class="token operator">=</span> data<span class="token punctuation">.</span>slot
      <span class="token keyword">const</span> slot <span class="token operator">=</span> <span class="token punctuation">(</span>slots<span class="token punctuation">[</span>name<span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token punctuation">(</span>slots<span class="token punctuation">[</span>name<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>child<span class="token punctuation">.</span>tag <span class="token operator">===</span> <span class="token string">&#39;template&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        slot<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>slot<span class="token punctuation">,</span> child<span class="token punctuation">.</span>children <span class="token operator">||</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        slot<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>child<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5176\u4F59\u7684\u9ED8\u8BA4\u653E\u5230 default \u4E2D</span>
      <span class="token punctuation">(</span>slots<span class="token punctuation">.</span>default <span class="token operator">||</span> <span class="token punctuation">(</span>slots<span class="token punctuation">.</span>default <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>child<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u5FFD\u7565\u65E0\u7528 slot</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> name <span class="token keyword">in</span> slots<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>slots<span class="token punctuation">[</span>name<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">every</span><span class="token punctuation">(</span>isWhitespace<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">delete</span> slots<span class="token punctuation">[</span>name<span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> slots
<span class="token punctuation">}</span>
</code></pre></div><h2 id="\u5B50\u7EC4\u4EF6slot\u4F7F\u7528" tabindex="-1">\u5B50\u7EC4\u4EF6slot\u4F7F\u7528 <a class="header-anchor" href="#\u5B50\u7EC4\u4EF6slot\u4F7F\u7528" aria-hidden="true">#</a></h2><div class="language-javascript"><pre><code><span class="token operator">&lt;</span>slot name<span class="token operator">=</span><span class="token string">&quot;header&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>slot<span class="token operator">&gt;</span>
</code></pre></div><h2 id="\u5B50\u7EC4\u4EF6slot-parse" tabindex="-1">\u5B50\u7EC4\u4EF6slot parse <a class="header-anchor" href="#\u5B50\u7EC4\u4EF6slot-parse" aria-hidden="true">#</a></h2><div class="language-javascript"><pre><code><span class="token keyword">function</span> <span class="token function">processSlotOutlet</span> <span class="token punctuation">(</span><span class="token parameter">el</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>el<span class="token punctuation">.</span>tag <span class="token operator">===</span> <span class="token string">&#39;slot&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u6DFB\u52A0 slotName \u5C5E\u6027</span>
    el<span class="token punctuation">.</span>slotName <span class="token operator">=</span> <span class="token function">getBindingAttr</span><span class="token punctuation">(</span>el<span class="token punctuation">,</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="\u5B50\u7EC4\u4EF6slot-generate" tabindex="-1">\u5B50\u7EC4\u4EF6slot generate <a class="header-anchor" href="#\u5B50\u7EC4\u4EF6slot-generate" aria-hidden="true">#</a></h2><div class="language-javascript"><pre><code><span class="token keyword">function</span> <span class="token function">genSlot</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">el</span><span class="token operator">:</span> ASTElement<span class="token punctuation">,</span> <span class="token literal-property property">state</span><span class="token operator">:</span> CodegenState</span><span class="token punctuation">)</span><span class="token operator">:</span> string <span class="token punctuation">{</span>
  <span class="token keyword">const</span> slotName <span class="token operator">=</span> el<span class="token punctuation">.</span>slotName <span class="token operator">||</span> <span class="token string">&#39;&quot;default&quot;&#39;</span>
  <span class="token comment">// \u9ED8\u8BA4\u7684 children \u8282\u70B9</span>
  <span class="token keyword">const</span> children <span class="token operator">=</span> <span class="token function">genChildren</span><span class="token punctuation">(</span>el<span class="token punctuation">,</span> state<span class="token punctuation">)</span>
  <span class="token comment">// _t \u51FD\u6570 </span>
  <span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">_t(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>slotName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>children <span class="token operator">?</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">,</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>children<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span> <span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
  <span class="token comment">// \u9759\u6001\u5C5E\u6027 + \u52A8\u6001\u7ED1\u5B9A\u5C5E\u6027</span>
  <span class="token keyword">const</span> attrs <span class="token operator">=</span> el<span class="token punctuation">.</span>attrs <span class="token operator">||</span> el<span class="token punctuation">.</span>dynamicAttrs
    <span class="token operator">?</span> <span class="token function">genProps</span><span class="token punctuation">(</span><span class="token punctuation">(</span>el<span class="token punctuation">.</span>attrs <span class="token operator">||</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>el<span class="token punctuation">.</span>dynamicAttrs <span class="token operator">||</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">attr</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token function">camelize</span><span class="token punctuation">(</span>attr<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token literal-property property">value</span><span class="token operator">:</span> attr<span class="token punctuation">.</span>value<span class="token punctuation">,</span>
      <span class="token literal-property property">dynamic</span><span class="token operator">:</span> attr<span class="token punctuation">.</span>dynamic
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token operator">:</span> <span class="token keyword">null</span>
  <span class="token keyword">const</span> bind <span class="token operator">=</span> el<span class="token punctuation">.</span>attrsMap<span class="token punctuation">[</span><span class="token string">&#39;v-bind&#39;</span><span class="token punctuation">]</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>attrs <span class="token operator">||</span> bind<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>children<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    res <span class="token operator">+=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">,null</span><span class="token template-punctuation string">\`</span></span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>attrs<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    res <span class="token operator">+=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">,</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>attrs<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>bind<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    res <span class="token operator">+=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>attrs <span class="token operator">?</span> <span class="token string">&#39;&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;,null&#39;</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">,</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>bind<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> res <span class="token operator">+</span> <span class="token string">&#39;)&#39;</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="\u5B50\u7EC4\u4EF6-render" tabindex="-1">\u5B50\u7EC4\u4EF6 render <a class="header-anchor" href="#\u5B50\u7EC4\u4EF6-render" aria-hidden="true">#</a></h2><h3 id="render" tabindex="-1">_render <a class="header-anchor" href="#render" aria-hidden="true">#</a></h3><div class="language-javascript"><pre><code><span class="token class-name">Vue</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">_render</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> VNode <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token literal-property property">vm</span><span class="token operator">:</span> Component <span class="token operator">=</span> <span class="token keyword">this</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> render<span class="token punctuation">,</span> _parentVnode <span class="token punctuation">}</span> <span class="token operator">=</span> vm<span class="token punctuation">.</span>$options

  <span class="token keyword">if</span> <span class="token punctuation">(</span>_parentVnode<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    vm<span class="token punctuation">.</span>$scopedSlots <span class="token operator">=</span> <span class="token function">normalizeScopedSlots</span><span class="token punctuation">(</span>
      <span class="token comment">// \u5982\u679C\u6709\u63D2\u69FD\u6709 scope \u7684\u65F6\u5019\uFF0CscopedSlots\u5B58\u5728</span>
      _parentVnode<span class="token punctuation">.</span>data<span class="token punctuation">.</span>scopedSlots<span class="token punctuation">,</span>
      <span class="token comment">// initRender \u89E3\u6790\u51FA\u6765\u7684 slots\uFF0C\u901A\u8FC7 children \u8F6C\u6362\u800C\u6765</span>
      vm<span class="token punctuation">.</span>$slots<span class="token punctuation">,</span>
      <span class="token comment">// \u5F53\u524D\u7684 scopedSlots</span>
      vm<span class="token punctuation">.</span>$scopedSlots
    <span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="normalizescopedslots" tabindex="-1">normalizeScopedSlots <a class="header-anchor" href="#normalizescopedslots" aria-hidden="true">#</a></h3><div class="language-javascript"><pre><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">normalizeScopedSlots</span><span class="token punctuation">(</span>
  <span class="token comment">// \u6709 scope \u65F6\u89E3\u6790\u51FA\u6765\u7684 scopedSlots</span>
  <span class="token literal-property property">slots</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span>key<span class="token operator">:</span> string<span class="token punctuation">]</span><span class="token operator">:</span> Function <span class="token punctuation">}</span> <span class="token operator">|</span> <span class="token keyword">void</span><span class="token punctuation">,</span>
  <span class="token comment">// children \u8F6C\u6362\u800C\u6765\u7684 slots\uFF0C\u90FD\u662F\u6CA1\u6709 slotScope \u7684 slot</span>
  <span class="token literal-property property">normalSlots</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span>key<span class="token operator">:</span> string<span class="token punctuation">]</span><span class="token operator">:</span> Array<span class="token operator">&lt;</span>VNode<span class="token operator">&gt;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// \u5F53\u524D\u7EC4\u4EF6\u7684\u539F\u6765\u7684 scopeSlots</span>
  prevSlots<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span>key<span class="token operator">:</span> string<span class="token punctuation">]</span><span class="token operator">:</span> Function <span class="token punctuation">}</span> <span class="token operator">|</span> <span class="token keyword">void</span>
<span class="token punctuation">)</span><span class="token operator">:</span> any <span class="token punctuation">{</span>
  <span class="token keyword">let</span> res
  <span class="token comment">// \u662F\u5426\u5177\u6709\u666E\u901A\u7684 slots</span>
  <span class="token keyword">const</span> hasNormalSlots <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>normalSlots<span class="token punctuation">)</span><span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span>
  <span class="token comment">// $stable \u8868\u793A\u662F\u5426\u9700\u8981\u5F3A\u5236\u66F4\u65B0\uFF0C\u4E0D\u9700\u8981\u5219\u4E3Atrue</span>
  <span class="token keyword">const</span> isStable <span class="token operator">=</span> slots <span class="token operator">?</span> <span class="token operator">!</span><span class="token operator">!</span>slots<span class="token punctuation">.</span>$stable <span class="token operator">:</span> <span class="token operator">!</span>hasNormalSlots
  <span class="token keyword">const</span> key <span class="token operator">=</span> slots <span class="token operator">&amp;&amp;</span> slots<span class="token punctuation">.</span>$key
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>slots<span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token comment">// ...</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    res <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> key <span class="token keyword">in</span> slots<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>slots<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> key<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token string">&#39;$&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u7528 scope \u7684\u8986\u76D6 \u6CA1\u6709 scope \u7684</span>
        res<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">normalizeScopedSlot</span><span class="token punctuation">(</span>normalSlots<span class="token punctuation">,</span> key<span class="token punctuation">,</span> slots<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
 
  <span class="token comment">// \u5C06\u666E\u901A\u7684\u5185\u5BB9\u4E5F\u8F6C\u6362\u6210 scopedSlots \u5F62\u5F0F</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> key <span class="token keyword">in</span> normalSlots<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span>key <span class="token keyword">in</span> res<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5C06 normal \u8F6C\u53D8\u4E3A\u51FD\u6570\u5F62\u5F0F</span>
      res<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">proxyNormalSlot</span><span class="token punctuation">(</span>normalSlots<span class="token punctuation">,</span> key<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// * \u5F53\u524D\u7684\u63D2\u69FD\u4E0A\u9762\u8BBE\u7F6E\u7684\u5C5E\u6027</span>
  <span class="token function">def</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span> <span class="token string">&#39;$stable&#39;</span><span class="token punctuation">,</span> isStable<span class="token punctuation">)</span>
  <span class="token function">def</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span> <span class="token string">&#39;$key&#39;</span><span class="token punctuation">,</span> key<span class="token punctuation">)</span>
  <span class="token function">def</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span> <span class="token string">&#39;$hasNormal&#39;</span><span class="token punctuation">,</span> hasNormalSlots<span class="token punctuation">)</span>
  <span class="token comment">// res \u91CC\u5305\u542B\u4E86</span>
  <span class="token keyword">return</span> res
<span class="token punctuation">}</span>
</code></pre></div><h3 id="renderslot" tabindex="-1">renderSlot <a class="header-anchor" href="#renderslot" aria-hidden="true">#</a></h3><div class="language-javascript"><pre><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">renderSlot</span> <span class="token punctuation">(</span>
  <span class="token parameter"><span class="token literal-property property">name</span><span class="token operator">:</span> string<span class="token punctuation">,</span>
  <span class="token literal-property property">fallback</span><span class="token operator">:</span> <span class="token operator">?</span>Array<span class="token operator">&lt;</span>VNode<span class="token operator">&gt;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">props</span><span class="token operator">:</span> <span class="token operator">?</span>Object<span class="token punctuation">,</span>
  <span class="token literal-property property">bindObject</span><span class="token operator">:</span> <span class="token operator">?</span>Object</span>
<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token operator">?</span>Array<span class="token operator">&lt;</span>VNode<span class="token operator">&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u83B7\u53D6\u5BF9\u5E94\u51FD\u6570</span>
  <span class="token keyword">const</span> scopedSlotFn <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$scopedSlots<span class="token punctuation">[</span>name<span class="token punctuation">]</span>
  <span class="token keyword">let</span> nodes
  <span class="token comment">// \u5982\u679C\u5B58\u5728\u5BF9\u5E94\u7684\u51FD\u6570</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>scopedSlotFn<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// scoped slot</span>
    props <span class="token operator">=</span> props <span class="token operator">||</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>bindObject<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u5904\u7406\u53C2\u6570</span>
      props <span class="token operator">=</span> <span class="token function">extend</span><span class="token punctuation">(</span><span class="token function">extend</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> bindObject<span class="token punctuation">)</span><span class="token punctuation">,</span> props<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u6267\u884C\u51FD\u6570\uFF0C\u8FD4\u56DE vnodes</span>
    nodes <span class="token operator">=</span> <span class="token function">scopedSlotFn</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span> <span class="token operator">||</span> fallback
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5982\u679C\u627E\u4E0D\u5230\u5BF9\u5E94\u7684 name\uFF0C\u90A3\u4E48\u4F7F\u7528\u9ED8\u8BA4\u7684 vnodes</span>
    nodes <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$slots<span class="token punctuation">[</span>name<span class="token punctuation">]</span> <span class="token operator">||</span> fallback
  <span class="token punctuation">}</span>

  <span class="token keyword">const</span> target <span class="token operator">=</span> props <span class="token operator">&amp;&amp;</span> props<span class="token punctuation">.</span>slot
  <span class="token keyword">if</span> <span class="token punctuation">(</span>target<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$createElement</span><span class="token punctuation">(</span><span class="token string">&#39;template&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">slot</span><span class="token operator">:</span> target <span class="token punctuation">}</span><span class="token punctuation">,</span> nodes<span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> nodes
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="\u603B\u7ED3" tabindex="-1">\u603B\u7ED3 <a class="header-anchor" href="#\u603B\u7ED3" aria-hidden="true">#</a></h2><p>\u63D2\u69FD\u5728\u5904\u7406\u7684\u65F6\u5019\u4E3B\u8981\u5206\u4E3A\u4E24\u79CD\u7C7B\u578B\uFF1A</p><ul><li>\u4E00\u79CD\u662F\u5E26\u6709<code>slotScope</code>\u7684\uFF0C\u6B64\u65F6\u5177\u6709\u53C2\u6570\u4F20\u5165\u3002</li><li>\u4E00\u79CD\u662F\u4E0D\u5E26\u6709<code>slotScope</code>\uFF0C\u4E3A\u666E\u901A\u63D2\u69FD\u3002</li></ul><p>\u5728\u7F16\u8BD1\u7684\u65F6\u5019\uFF1A</p><ul><li>\u5E26\u6709<code>slotScope</code>\u7684\u8F6C\u6362\u4E3A<code>scopedSlots</code>\u5BF9\u8C61\uFF0C\u5B58\u653E\u5230<code>component</code>\u7EC4\u4EF6\u7684<code>vnode.data</code>\u91CC\u9762\uFF1A\u952E\u4E3A<code>slot name</code>\uFF0C\u503C\u4E3A\u80FD\u751F\u6210<code>vnode</code>\u7684\u51FD\u6570\uFF08\u51FD\u6570\u7684\u53C2\u6570\u4E0E<code>scope</code>\u503C\u4E00\u81F4\uFF09\u3002</li><li>\u4E0D\u5E26\u6709<code>slotScope</code>\u7684\u6807\u8BB0\u4F46\u662F<code>slotTarget</code>\u5B58\u5728\uFF0C\u6B64\u65F6\u4F1A\u6807\u8BB0<code>el.data.slot</code>\u4E3A<code>true</code>\u3002</li><li>\u5BF9\u4E8E\u7EC4\u4EF6\u4E0B\u7684\u5185\u5BB9\uFF0C\u5168\u90E8\u90FD\u4F1A\u5B58\u653E\u5230<code>vnode.componentOptions.children</code>\u5C5E\u6027\u4E2D\u3002</li></ul><p>\u5728\u5B50\u7EC4\u4EF6\u521D\u59CB\u5316\u7684\u65F6\u5019\uFF1A</p><ul><li>\u7528<code>vm.$options._renderChildren</code>\u8868\u793A<code>children</code>\u3002</li><li>\u5C06<code>children</code>\u5185\u5BB9\u4E2D\u5B58\u5728<code>data.slot</code>\u7684<code>child</code>\uFF0C\u8F6C\u5316\u5230<code>vm.$slots</code>\u5C5E\u6027\u5F53\u4E2D\uFF0C\u4E3A<code>{ default: [Vnode1, Vnodee2] }</code>\u5F62\u5F0F\u3002</li></ul><p>\u5728\u5B50\u7EC4\u4EF6\u6E32\u67D3\u7684\u65F6\u5019\uFF1A</p><ul><li>\u5C06<code>vm.$slots</code>\u4E0E<code>vm.$scopedSlots</code>\u5408\u5E76\u5230<code>vm.$scopedSlots</code>\uFF0C\u8F6C\u6362\u4E3A<code>{ default: (props) =&gt; Vnodes}</code>\u7684\u5F62\u5F0F\u3002</li><li>\u6E32\u67D3<code>slot</code>\u7EC4\u4EF6\u65F6\uFF0C\u6839\u636E<code>name</code>\u4ECE<code>vm.$scopedSlots</code>\u4E2D\u83B7\u53D6\u5BF9\u5E94\u7684\u51FD\u6570\uFF0C\u6267\u884C\u8FD4\u56DE<code>vnodes</code>\u3002</li></ul>`,44),e=[o];function c(l,u,r,k,i,d){return a(),s("div",null,e)}var g=n(p,[["render",c]]);export{y as __pageData,g as default};
