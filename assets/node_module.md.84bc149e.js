import{_ as e,c as d,o,a as c}from"./app.026f8370.js";const m=JSON.parse('{"title":"node:module","description":"","frontmatter":{},"headers":[{"level":2,"title":"api","slug":"api","link":"#api","children":[]}],"relativePath":"node/module.md","lastUpdated":1679906492000}'),i={name:"node/module.md"},a=c('<h1 id="node-module" tabindex="-1">node:module <a class="header-anchor" href="#node-module" aria-hidden="true">#</a></h1><h2 id="api" tabindex="-1">api <a class="header-anchor" href="#api" aria-hidden="true">#</a></h2><ul><li><code>builtinModules</code>：返回 <code>node</code> 所有内置模块的名称，返回值为 <code>string[]</code> 形式。</li><li><code>createRequire</code>：生成 <code>require</code>。</li><li><code>isBuiltin</code>：是否是内置模块</li><li><code>syncBuiltinESMExports</code>：同步 <code>cjs</code> 对内置模块的变更到 <code>esm</code> 上。比如 <code>cjs</code> 删除 <code>fs.readFile</code>，通过同步变更，会使得 <code>import(&#39;node:fs&#39;)</code> 引入的模块中也没有 <code>readFile</code>。</li><li>SourceMap（试验性）</li></ul>',3),t=[a];function l(r,n,s,_,u,p){return o(),d("div",null,t)}const f=e(i,[["render",l]]);export{m as __pageData,f as default};
