import{_ as o,o as e,c as a,Q as d}from"./chunks/framework.b96c6c14.js";const u=JSON.parse('{"title":"Draw.io","description":"","frontmatter":{},"headers":[],"relativePath":"tools/draw-io.md","filePath":"tools/draw-io.md","lastUpdated":1698927986000}'),c={name:"tools/draw-io.md"},i=d('<h1 id="draw-io" tabindex="-1">Draw.io <a class="header-anchor" href="#draw-io" aria-label="Permalink to &quot;Draw.io&quot;">​</a></h1><h2 id="问题" tabindex="-1">问题 <a class="header-anchor" href="#问题" aria-label="Permalink to &quot;问题&quot;">​</a></h2><p>在写博客时，经常需要用 <code>Draw.io</code> 画一些流程图，然后生成图片放到 <code>vitepress</code> 文章目录中。下次编辑时需要找到相关的源文件进行编辑，然后重复相同的保存工作，非常麻烦。</p><h2 id="解决" tabindex="-1">解决 <a class="header-anchor" href="#解决" aria-label="Permalink to &quot;解决&quot;">​</a></h2><h3 id="draw-io-integration-插件" tabindex="-1"><code>Draw.io Integration</code> 插件 <a class="header-anchor" href="#draw-io-integration-插件" aria-label="Permalink to &quot;`Draw.io Integration` 插件&quot;">​</a></h3><p><code>vscode</code> 安装 <code>Draw.io Integration</code> 插件。安装成功后，新建以 <code>.drawio.svg</code> 结尾的文件，双击可以在 <code>vscode</code> 中打开 <code>Draw.io</code> 编辑器进行编辑。在 <code>vitepress markdown</code> 中通过 <code>image</code> 的方式引入 <code>svg</code> 文件即可显示编辑后的图片，如 <code>![babel](./babel.drawio.svg)</code> 。</p><h3 id="open-插件" tabindex="-1"><code>open</code> 插件 <a class="header-anchor" href="#open-插件" aria-label="Permalink to &quot;`open` 插件&quot;">​</a></h3><p>由于在编辑器里打开 <code>Draw.io</code> 在功能上与实际的 <code>app</code> 还是有差别，比如一些共用的配置无法保存共享。因此如果能直接在 <code>vscode</code> 里打开 <code>Draw.io App</code> 体验更好。而 <code>open</code> 这个插件满足这一功能。安装后，在文件名称上右键会出现 <code>open with default application</code>，点击会用 <code>mac</code> 默认的应用打开 <code>svg</code> 文件。</p><p>这个时候就需要去修改 <code>mac</code> 打开 <code>svg</code> 文件的方式。</p><ul><li>在 <code>finder</code> 中右键 <code>svg</code> 后缀的文件</li><li>点击【显示简介】</li><li>修改简介中的【打开方式】，选择 <code>Draw.io App</code></li><li>点击【全部修改】</li><li>此时回到 <code>vscode</code> 右键 <code>open with default application</code> 即可打开 <code>Draw.io App</code>。</li></ul>',10),r=[i];function t(n,l,s,p,h,_){return e(),a("div",null,r)}const m=o(c,[["render",t]]);export{u as __pageData,m as default};
