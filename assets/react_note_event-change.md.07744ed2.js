import{_ as e,o as a,c as o,Q as t}from"./chunks/framework.c610f10c.js";const E=JSON.parse('{"title":"不同版本 React 事件触发顺序不一致问题","description":"","frontmatter":{},"headers":[],"relativePath":"react/note/event-change.md","filePath":"react/note/event-change.md","lastUpdated":1695632838000}'),c={name:"react/note/event-change.md"},n=t(`<h1 id="不同版本-react-事件触发顺序不一致问题" tabindex="-1">不同版本 React 事件触发顺序不一致问题 <a class="header-anchor" href="#不同版本-react-事件触发顺序不一致问题" aria-label="Permalink to &quot;不同版本 React 事件触发顺序不一致问题&quot;">​</a></h1><h2 id="背景" tabindex="-1">背景 <a class="header-anchor" href="#背景" aria-label="Permalink to &quot;背景&quot;">​</a></h2><p>在开发弹出面板时，需要在 body/document 上绑定事件判断是否需要隐藏打开的面板。最后发现不同版本的 react 表现行为不一致。</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">document.addEventListener(&#39;click&#39;, xxx)  // 原生事件</span></span>
<span class="line"><span style="color:#E1E4E8;">document.body.addEventListener(&#39;click&#39;, xxx)  // 原生事件 </span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">onClick</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">{xxx}</span><span style="color:#E1E4E8;"> </span><span style="color:#FDAEB7;font-style:italic;">/</span><span style="color:#E1E4E8;">&gt; // React 合成事件</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">document.addEventListener(&#39;click&#39;, xxx)  // 原生事件</span></span>
<span class="line"><span style="color:#24292E;">document.body.addEventListener(&#39;click&#39;, xxx)  // 原生事件 </span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">div</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">onClick</span><span style="color:#24292E;">=</span><span style="color:#032F62;">{xxx}</span><span style="color:#24292E;"> </span><span style="color:#B31D28;font-style:italic;">/</span><span style="color:#24292E;">&gt; // React 合成事件</span></span></code></pre></div><p>在 <code>React16</code> 时，执行顺序为 <code>body =&gt; div =&gt; document</code></p><p>在 <code>React17</code>/18 时，执行顺序为 <code>div =&gt; body =&gt; document</code></p><h1 id="不同版本react事件触发顺序不一致问题" tabindex="-1">不同版本React事件触发顺序不一致问题 <a class="header-anchor" href="#不同版本react事件触发顺序不一致问题" aria-label="Permalink to &quot;不同版本React事件触发顺序不一致问题&quot;">​</a></h1><h2 id="原因" tabindex="-1">原因 <a class="header-anchor" href="#原因" aria-label="Permalink to &quot;原因&quot;">​</a></h2><p><code>React 16</code> 事件委托到 <code>document</code> 上，<code>react 17+</code> 委托到 <code>rootNode</code> 上：</p><p><img src="https://img-blog.csdnimg.cn/f00c7bb1f3114b1c9e5a64c31c5e6292.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA5p-S5ZCb,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt=""></p><p>在 16 的情况下，先冒泡到 <code>body</code>，触发 <code>body</code>。再冒泡到 <code>document</code>，触发 <code>document</code> 上绑定的合成事件，再触发绑定在 <code>document</code> 上的原生事件。可以通过 <code>e.nativeEvent.stopImmediatePropagation</code> 阻止 <code>document</code> 上的原生事件触发。</p><p>在 17+ 的情况下，先冒泡到 <code>rootNode</code>，触发合成事件，再冒泡到 <code>body =&gt; document</code> 。</p><h1 id="不同版本react事件触发顺序不一致问题-1" tabindex="-1">不同版本React事件触发顺序不一致问题 <a class="header-anchor" href="#不同版本react事件触发顺序不一致问题-1" aria-label="Permalink to &quot;不同版本React事件触发顺序不一致问题&quot;">​</a></h1><h2 id="react-为什么要将事件从-document-改为-rootnode" tabindex="-1">React 为什么要将事件从 document 改为 rootNode？ <a class="header-anchor" href="#react-为什么要将事件从-document-改为-rootnode" aria-label="Permalink to &quot;React 为什么要将事件从 document 改为 rootNode？&quot;">​</a></h2><p>如果存在多个版本的 <code>React</code> 组件嵌套时，如果冒泡到 <code>document</code>，可能存在一个版本的组件 <code>e.stopPropagation()</code> 影响到另外一个版本组件（其他的事件行为可能也会被影响）。</p><p>如果改为 <code>rootNode</code>，不同版本的 <code>react</code> 组件间事件就不会相互影响。</p><h1 id="不同版本react事件触发顺序不一致问题-2" tabindex="-1">不同版本React事件触发顺序不一致问题 <a class="header-anchor" href="#不同版本react事件触发顺序不一致问题-2" aria-label="Permalink to &quot;不同版本React事件触发顺序不一致问题&quot;">​</a></h1><h2 id="为什么需要合成事件" tabindex="-1">为什么需要合成事件？ <a class="header-anchor" href="#为什么需要合成事件" aria-label="Permalink to &quot;为什么需要合成事件？&quot;">​</a></h2><ol><li>内部做了浏览器事件兼容。</li><li>减少绑定卸载事件的开销。</li><li>统一管理事件，比如更新优先级可以在这里统一设置。</li></ol>`,19),s=[n];function d(l,r,p,i,h,m){return a(),o("div",null,s)}const _=e(c,[["render",d]]);export{E as __pageData,_ as default};
