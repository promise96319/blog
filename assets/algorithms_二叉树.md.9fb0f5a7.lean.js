import{_ as s,o as n,c as a,a as l}from"./app.5a1d1f50.js";const A=JSON.parse('{"title":"二叉树","description":"","frontmatter":{},"headers":[{"level":2,"title":"第k小元素","slug":"第k小元素","link":"#第k小元素","children":[]},{"level":2,"title":"二叉树的最大深度","slug":"二叉树的最大深度","link":"#二叉树的最大深度","children":[]},{"level":2,"title":"二叉树层序遍历","slug":"二叉树层序遍历","link":"#二叉树层序遍历","children":[]},{"level":2,"title":"前序中序构建二叉树","slug":"前序中序构建二叉树","link":"#前序中序构建二叉树","children":[]},{"level":2,"title":"迭代的方式进行前序遍历","slug":"迭代的方式进行前序遍历","link":"#迭代的方式进行前序遍历","children":[]},{"level":2,"title":"判断二叉树是否合法","slug":"判断二叉树是否合法","link":"#判断二叉树是否合法","children":[]}],"relativePath":"algorithms/二叉树.md","lastUpdated":1694075415000}'),p={name:"algorithms/二叉树.md"},o=l("",19),e=[o];function t(c,r,y,F,D,B){return n(),a("div",null,e)}const E=s(p,[["render",t]]);export{A as __pageData,E as default};
