import{_ as s,o as n,c as a,a as l}from"./app.5a1d1f50.js";const p="/assets/vue-design.feca3a67.png",E=JSON.parse('{"title":"Vue设计思路","description":"","frontmatter":{},"headers":[{"level":2,"title":"项目文件结构","slug":"项目文件结构","link":"#项目文件结构","children":[]},{"level":2,"title":"Vue的真面目","slug":"vue的真面目","link":"#vue的真面目","children":[]},{"level":2,"title":"Vue的原型方法属性","slug":"vue的原型方法属性","link":"#vue的原型方法属性","children":[{"level":3,"title":"initMixin","slug":"initmixin","link":"#initmixin","children":[]},{"level":3,"title":"stateMixin","slug":"statemixin","link":"#statemixin","children":[]},{"level":3,"title":"eventsMixin","slug":"eventsmixin","link":"#eventsmixin","children":[]},{"level":3,"title":"lifecycleMixin","slug":"lifecyclemixin","link":"#lifecyclemixin","children":[]},{"level":3,"title":"renderMixin","slug":"rendermixin","link":"#rendermixin","children":[]}]},{"level":2,"title":"Vue的静态方法属性","slug":"vue的静态方法属性","link":"#vue的静态方法属性","children":[{"level":3,"title":"/src/core/index.js文件","slug":"src-core-index-js文件","link":"#src-core-index-js文件","children":[]},{"level":3,"title":"/src/platforms/web/runtime/index.js文件","slug":"src-platforms-web-runtime-index-js文件","link":"#src-platforms-web-runtime-index-js文件","children":[]},{"level":3,"title":"/src/platforms/web/entry-runtime-with-compiler.js文件","slug":"src-platforms-web-entry-runtime-with-compiler-js文件","link":"#src-platforms-web-entry-runtime-with-compiler-js文件","children":[]}]},{"level":2,"title":"实例化过程","slug":"实例化过程","link":"#实例化过程","children":[]},{"level":2,"title":"Vue的整体设计","slug":"vue的整体设计","link":"#vue的整体设计","children":[]}],"relativePath":"vue/组成与设计.md","lastUpdated":1693935732000}'),o={name:"vue/组成与设计.md"},e=l(`<h1 id="vue设计思路" tabindex="-1">Vue设计思路 <a class="header-anchor" href="#vue设计思路" aria-hidden="true">#</a></h1><h2 id="项目文件结构" tabindex="-1"><code>项目文件结构</code> <a class="header-anchor" href="#项目文件结构" aria-hidden="true">#</a></h2><p>在<code>Vue</code>项目中，所有核心的代码都是在<code>src</code>目录下完成，为了更好的了解<code>Vue</code>的底层实现，我们首先来了解一下<code>src</code>目录下代码的组织情况，从全局入手，在脑海里留下简单的印象，方便后续的学习。（注意：当前使用<code>Vue</code>的版本为<code>2.6.12</code>，不同版本的内容可能会有所差异）</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">.</span></span>
<span class="line"><span style="color:#BABED8;">├── compiler  </span><span style="color:#676E95;font-style:italic;">// 编译模块：将 template 编译成为可以生成 vnode 的 render 函数</span></span>
<span class="line"><span style="color:#BABED8;">│   ├── codeframe</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">js</span></span>
<span class="line"><span style="color:#BABED8;">│   ├── codegen             </span><span style="color:#676E95;font-style:italic;">// 代码生成文件：根据 ast 树可生成 vnode 的 render代码</span></span>
<span class="line"><span style="color:#BABED8;">│   ├── create</span><span style="color:#89DDFF;">-</span><span style="color:#BABED8;">compiler</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">js  </span><span style="color:#676E95;font-style:italic;">// 创建编译器的工厂函数</span></span>
<span class="line"><span style="color:#BABED8;">│   ├── directives          </span><span style="color:#676E95;font-style:italic;">// 指令解析：v-on, v-bind, v-model</span></span>
<span class="line"><span style="color:#BABED8;">│   ├── error</span><span style="color:#89DDFF;">-</span><span style="color:#BABED8;">detector</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">js    </span></span>
<span class="line"><span style="color:#BABED8;">│   ├── helpers</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">js          </span><span style="color:#676E95;font-style:italic;">// 编译相关方法，如属性获取等方法</span></span>
<span class="line"><span style="color:#BABED8;">│   ├── index</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">js            </span><span style="color:#676E95;font-style:italic;">// 入口文件</span></span>
<span class="line"><span style="color:#BABED8;">│   ├── optimizer</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">js        </span><span style="color:#676E95;font-style:italic;">// 编译优化：将 ast 树进行优化</span></span>
<span class="line"><span style="color:#BABED8;">│   ├── parser                      </span><span style="color:#676E95;font-style:italic;">// html 解析文件：将 template 解析成 ast 树🌲</span></span>
<span class="line"><span style="color:#BABED8;">│   └── to</span><span style="color:#89DDFF;">-</span><span style="color:#C792EA;">function</span><span style="color:#BABED8;">.</span><span style="color:#82AAFF;">js</span><span style="color:#BABED8;">      </span><span style="color:#676E95;font-style:italic;">// 创建编译器的工厂函数</span></span>
<span class="line"><span style="color:#BABED8;">├── </span><span style="color:#82AAFF;">core</span><span style="color:#BABED8;">     </span><span style="color:#676E95;font-style:italic;">// 构造函数核心模块：构建Vue构造函数，添加原型方法，实现完成渲染流程的_init方法</span></span>
<span class="line"><span style="color:#BABED8;">│   ├── </span><span style="color:#82AAFF;">components</span><span style="color:#BABED8;">  </span><span style="color:#676E95;font-style:italic;">// 自带的全局组件，如 keep-alive</span></span>
<span class="line"><span style="color:#BABED8;">│   ├── </span><span style="color:#82AAFF;">config</span><span style="color:#BABED8;">.</span><span style="color:#82AAFF;">js</span><span style="color:#BABED8;">   </span><span style="color:#676E95;font-style:italic;">// 配置相关</span></span>
<span class="line"><span style="color:#BABED8;">│   ├── </span><span style="color:#82AAFF;">global</span><span style="color:#BABED8;">-</span><span style="color:#82AAFF;">api</span><span style="color:#BABED8;">  </span><span style="color:#676E95;font-style:italic;">// 全局api，如 Vue.use, extend, mixin, component等方法</span></span>
<span class="line"><span style="color:#BABED8;">│   ├── </span><span style="color:#82AAFF;">index</span><span style="color:#BABED8;">.</span><span style="color:#82AAFF;">js</span><span style="color:#BABED8;">    </span><span style="color:#676E95;font-style:italic;">// 入口文件，在 Vue 上挂载全局方法并导出 Vue</span></span>
<span class="line"><span style="color:#BABED8;">│   ├── </span><span style="color:#82AAFF;">instance</span><span style="color:#BABED8;">    </span><span style="color:#676E95;font-style:italic;">// 构造函数起始位置</span></span>
<span class="line"><span style="color:#BABED8;">│   ├── </span><span style="color:#82AAFF;">observer</span><span style="color:#BABED8;">    </span><span style="color:#676E95;font-style:italic;">// 响应式原理</span></span>
<span class="line"><span style="color:#BABED8;">│   ├── </span><span style="color:#82AAFF;">util</span><span style="color:#BABED8;">        </span><span style="color:#676E95;font-style:italic;">// 一些工具方法，包含 mergeOptions, nextTick 等方法的实现</span></span>
<span class="line"><span style="color:#BABED8;">│   └── </span><span style="color:#82AAFF;">vdom</span><span style="color:#BABED8;">        </span><span style="color:#676E95;font-style:italic;">// 虚拟 dom</span></span>
<span class="line"><span style="color:#BABED8;">├── </span><span style="color:#82AAFF;">platforms</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;">// 平台相关，包含不同平台的不同构建入口，这里主要研究web端</span></span>
<span class="line"><span style="color:#BABED8;">│   ├── </span><span style="color:#82AAFF;">weex</span></span>
<span class="line"><span style="color:#BABED8;">│   └── </span><span style="color:#82AAFF;">web</span></span>
<span class="line"><span style="color:#BABED8;">│       ├── </span><span style="color:#82AAFF;">compiler</span><span style="color:#BABED8;">   </span><span style="color:#676E95;font-style:italic;">// 与平台相关的编译</span></span>
<span class="line"><span style="color:#BABED8;">│       ├── </span><span style="color:#82AAFF;">entry</span><span style="color:#BABED8;">-</span><span style="color:#82AAFF;">compiler</span><span style="color:#BABED8;">.</span><span style="color:#82AAFF;">js</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;">// vue-template-compiler 包的入口文件</span></span>
<span class="line"><span style="color:#BABED8;">│       ├── </span><span style="color:#82AAFF;">entry</span><span style="color:#BABED8;">-</span><span style="color:#82AAFF;">runtime</span><span style="color:#BABED8;">-</span><span style="color:#82AAFF;">with</span><span style="color:#BABED8;">-</span><span style="color:#82AAFF;">compiler</span><span style="color:#BABED8;">.</span><span style="color:#82AAFF;">js</span><span style="color:#BABED8;"> </span><span style="color:#676E95;font-style:italic;">// 构建入口，包含编译器</span></span>
<span class="line"><span style="color:#BABED8;">│       ├── </span><span style="color:#82AAFF;">entry</span><span style="color:#BABED8;">-</span><span style="color:#82AAFF;">runtime</span><span style="color:#BABED8;">.</span><span style="color:#82AAFF;">js</span><span style="color:#BABED8;">  </span><span style="color:#676E95;font-style:italic;">// 构建入口，不包含编译器，不支持 template 转换 render</span></span>
<span class="line"><span style="color:#BABED8;">│       ├── </span><span style="color:#82AAFF;">entry</span><span style="color:#BABED8;">-</span><span style="color:#82AAFF;">server</span><span style="color:#BABED8;">-</span><span style="color:#82AAFF;">basic</span><span style="color:#BABED8;">-</span><span style="color:#82AAFF;">renderer</span><span style="color:#BABED8;">.</span><span style="color:#82AAFF;">js</span></span>
<span class="line"><span style="color:#BABED8;">│       ├── </span><span style="color:#82AAFF;">entry</span><span style="color:#BABED8;">-</span><span style="color:#82AAFF;">server</span><span style="color:#BABED8;">-</span><span style="color:#82AAFF;">renderer</span><span style="color:#BABED8;">.</span><span style="color:#82AAFF;">js</span></span>
<span class="line"><span style="color:#BABED8;">│       ├── </span><span style="color:#82AAFF;">runtime</span><span style="color:#BABED8;">   </span><span style="color:#676E95;font-style:italic;">// 与平台相关的构建</span></span>
<span class="line"><span style="color:#BABED8;">│       ├── </span><span style="color:#82AAFF;">server</span></span>
<span class="line"><span style="color:#BABED8;">│       └── </span><span style="color:#82AAFF;">util</span></span>
<span class="line"><span style="color:#BABED8;">│</span></span>
<span class="line"><span style="color:#BABED8;">├── </span><span style="color:#82AAFF;">server</span><span style="color:#BABED8;">    </span><span style="color:#676E95;font-style:italic;">// 服务端渲染相关</span></span>
<span class="line"><span style="color:#BABED8;">├── </span><span style="color:#82AAFF;">sfc</span><span style="color:#BABED8;">       </span><span style="color:#676E95;font-style:italic;">// 包含单文件组件(.vue文件)的解析逻辑，用于vue-template-compiler包</span></span>
<span class="line"><span style="color:#BABED8;">└── </span><span style="color:#82AAFF;">shared</span><span style="color:#BABED8;">    </span><span style="color:#676E95;font-style:italic;">// 代码库通用代码</span></span>
<span class="line"><span style="color:#BABED8;">    ├── </span><span style="color:#82AAFF;">constants</span><span style="color:#BABED8;">.</span><span style="color:#82AAFF;">js</span></span>
<span class="line"><span style="color:#BABED8;">    └── </span><span style="color:#82AAFF;">util</span><span style="color:#BABED8;">.</span><span style="color:#82AAFF;">js</span></span>
<span class="line"></span></code></pre></div><p>以上是<code>Vue</code>项目中主要文件目录，里面附带一些注释，讲解了比较主要模块的功能及作用。刚开始学习时只做简单了解即可，后面我们会逐步详细学习其中的一些模块，从而从原理级别理解整个<code>Vue</code>项目的设计与实现。</p><h2 id="vue的真面目" tabindex="-1"><code>Vue</code>的真面目 <a class="header-anchor" href="#vue的真面目" aria-hidden="true">#</a></h2><p>要想真正的了解<code>Vue</code>是如何工作的，首先我们需要找到<code>Vue</code>是在哪里被定义的。我们先找到<code>package.json</code>文件下的<code>scripts</code>配置。<code>scripts</code>里存放的都是运行命令的别名形式，通过命令可以轻松找到对应命令执行文件的路径。</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">scripts</span><span style="color:#89DDFF;">&quot;</span><span style="color:#BABED8;">: </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">dev</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">rollup -w -c scripts/config.js --environment TARGET:web-full-dev</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>这里当运行<code>dev</code>命令实际上是运行<code>scripts/config.js</code>文件，让我们找到<code>scripts/config.js</code>文件。</p><p>通过运行命令参数我们可以知道<code>p<wbr>rocess.env.TARGET</code>的值为<code>web-full-dev</code>，因此可以在<code>builds</code>里找到对应的配置文件，如下</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> builds </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">web-full-dev</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#F07178;">entry</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">resolve</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">web/entry-runtime-with-compiler.js</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#F07178;">dest</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">resolve</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">dist/vue.js</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">)</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#F07178;">format</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">umd</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#F07178;">env</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">development</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">      </span><span style="color:#F07178;">alias</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span><span style="color:#BABED8;"> </span><span style="color:#F07178;">he</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">./entity-decoder</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#BABED8;">      banner</span></span>
<span class="line"><span style="color:#BABED8;">   </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">...</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">module.exports</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">genConfig</span><span style="color:#BABED8;">(process</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">env</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">TARGET)</span></span>
<span class="line"></span></code></pre></div><p>通过<code>entry</code>，我们找到<code>web/entry-runtime-with-compiler.js</code>文件：</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> Vue </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">./runtime/index</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> mount </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">Vue</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">prototype</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">$mount</span></span>
<span class="line"><span style="color:#FFCB6B;">Vue</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">prototype</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">$mount</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">function</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#BABED8;font-style:italic;">el</span><span style="color:#89DDFF;">?:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">|</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">Element</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#BABED8;font-style:italic;">hydrating</span><span style="color:#89DDFF;">?:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">boolean</span></span>
<span class="line"><span style="color:#89DDFF;">):</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">Component</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">...</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#BABED8;">Vue</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">compile </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> compileToFunctions</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#BABED8;"> Vue</span></span>
<span class="line"></span></code></pre></div><p>在这里，我们终于找到了<code>Vue</code>相关的文件，这也是<code>Vue</code>的起始入口。接着根据<code>Vue</code>的引入路径，找到<code>./runtime/index</code>文件：</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> Vue </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">core/index</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#89DDFF;">...</span></span>
<span class="line"><span style="color:#FFCB6B;">Vue</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">prototype</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">__patch__ </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> inBrowser </span><span style="color:#89DDFF;">?</span><span style="color:#BABED8;"> patch </span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> noop</span></span>
<span class="line"><span style="color:#FFCB6B;">Vue</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">prototype</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">$mount</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">function</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#BABED8;font-style:italic;">el</span><span style="color:#89DDFF;">?:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">|</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">Element</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#BABED8;font-style:italic;">hydrating</span><span style="color:#89DDFF;">?:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">boolean</span></span>
<span class="line"><span style="color:#89DDFF;">):</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">Component</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">...</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#BABED8;"> Vue</span></span>
<span class="line"></span></code></pre></div><p>这里还不是<code>Vue</code>真正的起始点，继续查找<code>core/index</code>文件：</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> Vue </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">./instance/index</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#82AAFF;">initGlobalAPI</span><span style="color:#BABED8;">(Vue)</span></span>
<span class="line"><span style="color:#89DDFF;">...</span></span>
<span class="line"><span style="color:#BABED8;">Vue</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">version </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">__VERSION__</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#BABED8;"> Vue</span></span>
<span class="line"></span></code></pre></div><p>发现仍然不是<code>Vue</code>的起始点，继续查找<code>&#39;./instance/index&#39;</code>文件：</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">initMixin</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">./init</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">stateMixin</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">./state</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">renderMixin</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">./render</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">eventsMixin</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">./events</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">lifecycleMixin</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">./lifecycle</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">warn</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">../util/index</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// Vue 构造函数</span></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">Vue</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">options</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#BABED8;">process</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">env</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">NODE_ENV</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">!==</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">production</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&amp;&amp;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">!</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">this</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">instanceof</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">Vue</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">  ) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">warn</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Vue is a constructor and should be called with the \`new\` keyword</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">this.</span><span style="color:#82AAFF;">_init</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">options</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 向原型上添加方法属性</span></span>
<span class="line"><span style="color:#82AAFF;">initMixin</span><span style="color:#BABED8;">(Vue)</span></span>
<span class="line"><span style="color:#82AAFF;">stateMixin</span><span style="color:#BABED8;">(Vue)</span></span>
<span class="line"><span style="color:#82AAFF;">eventsMixin</span><span style="color:#BABED8;">(Vue)</span></span>
<span class="line"><span style="color:#82AAFF;">lifecycleMixin</span><span style="color:#BABED8;">(Vue)</span></span>
<span class="line"><span style="color:#82AAFF;">renderMixin</span><span style="color:#BABED8;">(Vue)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#BABED8;"> Vue</span></span>
<span class="line"></span></code></pre></div><p>好了，大功告成！费劲千辛万苦终于找到了<code>Vue</code>的真正定义的位置！可以看出<code>Vue</code>其实就是一个构造函数，而构造函数内部仅仅只是调用了<code>_init</code>方法，看上去非常简单。但是<code>Vue</code>是如何通过这么简单的定义实现那么复杂的功能呢？这里就要涉及到<code>构造函数</code>、<code>原型</code>、<code>实例</code>的概念了，不了解这些概念的建议参考《javascript高级设计程序》中原型章节来进行学习。下面我们通过下方三个方面来介绍<code>Vue</code>的实现。</p><ol><li>原型方法属性：通过 5 个 <code>init</code> 方法，向<code>Vue</code>的原型上添加方法，</li><li>静态方法属性：在导入<code>Vue</code>构造函数的过程中，向<code>Vue</code>构造函数上添加静态方法，也有向原型上添加方法</li><li>实例化：在实例化的过程中，执行<code>_init</code>方法，完成整个<code>Vue</code>初始化到渲染的逻辑。</li></ol><h2 id="vue的原型方法属性" tabindex="-1">Vue的原型方法属性 <a class="header-anchor" href="#vue的原型方法属性" aria-hidden="true">#</a></h2><h3 id="initmixin" tabindex="-1"><code>initMixin</code> <a class="header-anchor" href="#initmixin" aria-hidden="true">#</a></h3><p><code>initMixin</code>方法主要实现了<code>_init</code>方法。</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">function</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">initMixin</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">Vue</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">Class</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">Component</span><span style="color:#89DDFF;">&gt;)</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">Vue</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">prototype</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">_init</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">function</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">options</span><span style="color:#89DDFF;">?:</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">Object</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// init 实现内容，由于这里仅做概览，所以具体实现均已省略</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">...</span><span style="color:#F07178;"> </span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>从上面<code>Vue</code>构造函数我们可以知道，这个方法在实例化时有被调用，它主要的作用是实现：选项的合并，数据初始化（如响应式处理），以及触发编译和渲染的流程，所以十分重要。这里也只是先做一个了解，后续的实例化章节将都会从这个方法开始分析。</p><h3 id="statemixin" tabindex="-1"><code>stateMixin</code> <a class="header-anchor" href="#statemixin" aria-hidden="true">#</a></h3><p><code>stateMixin</code>主要实现了<code>data,props</code>的代理功能，即当我们访问<code>$data</code>时，实际访问的是<code>_data</code>。另外在非生产环境下，会对<code>$data,$props</code>进行 <code>set</code>处理，每次设置新的值时都会打印提示，所以实际上<code>$data,$props</code>都是只读属性。</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">function</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">stateMixin</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">Vue</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">Class</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">Component</span><span style="color:#89DDFF;">&gt;)</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">dataDef</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#BABED8;">dataDef</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">function</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">this.</span><span style="color:#BABED8;">_data</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">propsDef</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#BABED8;">propsDef</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">get</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">function</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">this.</span><span style="color:#BABED8;">_props</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 只读属性</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#BABED8;">process</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">env</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">NODE_ENV</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">!==</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">production</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#BABED8;">dataDef</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">set</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">function</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#82AAFF;">warn</span><span style="color:#F07178;">(</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Avoid replacing instance root $data. </span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Use nested data properties instead.</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">this</span></span>
<span class="line"><span style="color:#F07178;">      )</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#BABED8;">propsDef</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">set</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">function</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#82AAFF;">warn</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">$props is readonly.</span><span style="color:#89DDFF;">\`</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">this</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#BABED8;">Object</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">defineProperty</span><span style="color:#F07178;">(</span><span style="color:#FFCB6B;">Vue</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">prototype</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">$data</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">dataDef</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#BABED8;">Object</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">defineProperty</span><span style="color:#F07178;">(</span><span style="color:#FFCB6B;">Vue</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">prototype</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">$props</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">propsDef</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">Vue</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">prototype</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">$set</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">set</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">Vue</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">prototype</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">$delete</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">del</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">Vue</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">prototype</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">$watch</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">function</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">...</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>除此之外，这里还在<code>Vue</code>原型上挂载了比较常见的三个方法：<code>$set</code>，<code>$delete</code>，<code>$watch</code>。</p><h3 id="eventsmixin" tabindex="-1"><code>eventsMixin</code> <a class="header-anchor" href="#eventsmixin" aria-hidden="true">#</a></h3><p>和<code>node</code>里<code>EventEmitter</code>类似，<code>eventsMixin</code>实现了四个方法：<code>$on,$off,$once,$emit</code>，用于监听，触发，销毁事件。</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">function</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">eventsMixin</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">Vue</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">Class</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">Component</span><span style="color:#89DDFF;">&gt;)</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">hookRE</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;font-style:italic;">^</span><span style="color:#C3E88D;">hook:</span><span style="color:#89DDFF;">/</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">Vue</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">prototype</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">$on</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">function</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">...</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">Vue</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">prototype</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">$once</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">function</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">...</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">Vue</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">prototype</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">$off</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">function</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">...</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">Vue</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">prototype</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">$emit</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">function</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">...</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h3 id="lifecyclemixin" tabindex="-1"><code>lifecycleMixin</code> <a class="header-anchor" href="#lifecyclemixin" aria-hidden="true">#</a></h3><p><code>lifecycleMixin</code>实现了三个方法：<code>_update</code>方法非常重要，它主要负责将<code>vnode</code>生成真实节点。</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">function</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">lifecycleMixin</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">Vue</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">Class</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">Component</span><span style="color:#89DDFF;">&gt;)</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 更新，将 vnode 生成 真实节点</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">Vue</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">prototype</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">_update</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">function</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">...</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 强制刷新</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">Vue</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">prototype</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">$forceUpdate</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">function</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">...</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 销毁</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">Vue</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">prototype</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">$destroy</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">function</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">...</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h3 id="rendermixin" tabindex="-1"><code>renderMixin</code> <a class="header-anchor" href="#rendermixin" aria-hidden="true">#</a></h3><p><code>renderMixin</code>主要做了三项工作</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">function</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">renderMixin</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">Vue</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">Class</span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">Component</span><span style="color:#89DDFF;">&gt;)</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">installRenderHelpers</span><span style="color:#F07178;">(</span><span style="color:#FFCB6B;">Vue</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">prototype</span><span style="color:#F07178;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">Vue</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">prototype</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">$nextTick</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">function</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">fn</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">Function</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">nextTick</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">fn</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">this</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">Vue</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">prototype</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">_render</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">function</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">():</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">VNode</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">vnode</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><ol><li><code>installRenderHelpers</code>函数用于添加<code>render</code>相关方法，在编译环节最后生成的代码，都是由这些方法拼接而成的代码，所以也是非常的重要，在这里先混个眼熟。</li></ol><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#BABED8;">  target</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">_o </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> markOnce</span></span>
<span class="line"><span style="color:#BABED8;">  target</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">_n </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> toNumber</span></span>
<span class="line"><span style="color:#BABED8;">  target</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">_s </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> toString</span></span>
<span class="line"><span style="color:#BABED8;">  target</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">_l </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> renderList</span></span>
<span class="line"><span style="color:#BABED8;">  target</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">_t </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> renderSlot</span></span>
<span class="line"><span style="color:#BABED8;">  target</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">_q </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> looseEqual</span></span>
<span class="line"><span style="color:#BABED8;">  target</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">_i </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> looseIndexOf</span></span>
<span class="line"><span style="color:#BABED8;">  target</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">_m </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> renderStatic</span></span>
<span class="line"><span style="color:#BABED8;">  target</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">_f </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> resolveFilter</span></span>
<span class="line"><span style="color:#BABED8;">  target</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">_k </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> checkKeyCodes</span></span>
<span class="line"><span style="color:#BABED8;">  target</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">_b </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> bindObjectProps</span></span>
<span class="line"><span style="color:#BABED8;">  target</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">_v </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> createTextVNode</span></span>
<span class="line"><span style="color:#BABED8;">  target</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">_e </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> createEmptyVNode</span></span>
<span class="line"><span style="color:#BABED8;">  target</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">_u </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> resolveScopedSlots</span></span>
<span class="line"><span style="color:#BABED8;">  target</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">_g </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> bindObjectListeners</span></span>
<span class="line"><span style="color:#BABED8;">  target</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">_d </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> bindDynamicKeys</span></span>
<span class="line"><span style="color:#BABED8;">  target</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">_p </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> prependModifier</span></span>
<span class="line"></span></code></pre></div><ol><li><code>$nextTick</code>方法，在下一次事件循环触发，涉及到事件循环机制。</li><li><code>_render</code>方法，用于生成<code>vnode</code>。</li></ol><h2 id="vue的静态方法属性" tabindex="-1">Vue的静态方法属性 <a class="header-anchor" href="#vue的静态方法属性" aria-hidden="true">#</a></h2><p>通过上面5个<code>init</code>方法我们已经了解了许多原型方法的添加过程，但是在<code>Vue</code>中还有很多全局方法，比如<code>Vue.component,Vue.use</code>等方法，它们都是构造函数的静态属性，下面我们看看这些静态属性是如何添加的。与寻找<code>Vue</code>的起始位置过程恰恰相反，这次我们从<code>Vue</code>的起始文件出发，看看最后导出的<code>Vue</code>是怎样的。</p><h3 id="src-core-index-js文件" tabindex="-1"><code>/src/core/index.js</code>文件 <a class="header-anchor" href="#src-core-index-js文件" aria-hidden="true">#</a></h3><p>这是第一层引入<code>Vue</code>构造函数的文件</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">initGlobalAPI</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">./global-api/index</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">initGlobalAPI</span><span style="color:#BABED8;">(Vue)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// ... 中间省略</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">Vue</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">version </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">__VERSION__</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span></code></pre></div><p>这里我们看一下<code>initGlobalAPI</code>方法，打开<code>core/global-api/index.js</code>文件</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">function</span><span style="color:#BABED8;"> </span><span style="color:#82AAFF;">initGlobalAPI</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">Vue</span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">GlobalAPI</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#BABED8;">Vue</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">util</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#BABED8;">warn</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#BABED8;">extend</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#BABED8;">mergeOptions</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#BABED8;">defineReactive</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#BABED8;">Vue</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">set</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">set</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#BABED8;">Vue</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">delete</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">del</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#BABED8;">Vue</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">nextTick</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">nextTick</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 2.6 explicit observable API</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#BABED8;">Vue</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">observable</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">T</span><span style="color:#89DDFF;">&gt;</span><span style="color:#BABED8;">(obj: T): T =&gt; </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">    </span><span style="color:#82AAFF;">observe</span><span style="color:#BABED8;">(obj)</span></span>
<span class="line"><span style="color:#BABED8;">    return obj</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">  Vue.options = Object.create(null)</span></span>
<span class="line"><span style="color:#BABED8;">  ASSET_TYPES.forEach(type =&gt; </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#BABED8;">    Vue</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">options[type </span><span style="color:#89DDFF;">+</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">s</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">] </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> Object</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">create</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">null</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">  Vue.options._base = Vue</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">  extend(Vue.options.components, builtInComponents)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">  initUse(Vue)</span></span>
<span class="line"><span style="color:#BABED8;">  initMixin(Vue)</span></span>
<span class="line"><span style="color:#BABED8;">  initExtend(Vue)</span></span>
<span class="line"><span style="color:#BABED8;">  initAssetRegisters(Vue)</span></span>
<span class="line"><span style="color:#BABED8;">}</span></span>
<span class="line"></span></code></pre></div><p>这里挂载了很多静态方法，<code>Vue</code>中大多数的全局方法都在这个位置添加的，这里我们着重分析一下<code>options</code>：</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#BABED8;">  </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> builtInComponents </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">../components/index</span><span style="color:#89DDFF;">&#39;</span><span style="color:#BABED8;">  </span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">  Vue</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">options </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> Object</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">create</span><span style="color:#BABED8;">(</span><span style="color:#89DDFF;">null</span><span style="color:#BABED8;">)</span></span>
<span class="line"><span style="color:#BABED8;">  ASSET_TYPES</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">forEach</span><span style="color:#BABED8;">(</span><span style="color:#BABED8;font-style:italic;">type</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">=&gt;</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#BABED8;">Vue</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">options</span><span style="color:#F07178;">[</span><span style="color:#BABED8;">type</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">+</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">s</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">] </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">Object</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">create</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">null</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">  Vue</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">options</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">_base </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> Vue</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#82AAFF;">extend</span><span style="color:#BABED8;">(Vue</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">options</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">components</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> builtInComponents)  </span></span>
<span class="line"></span></code></pre></div><p>可以看出，在<code>Vue</code>构造函数上添加了一个<code>options</code>属性（注意！这里是静态属性，为构造函数所有，区别于在实例化传入的<code>options</code>）。随后又通过遍历<code>ASSET_TYPES</code>，在<code>options</code>上添加了<code>components,directives,filters</code>属性。另外还添加了<code>_base</code>，指向当前构造函数<code>Vue</code>。最后通过<code>extend</code>方法将<code>builtInComponents</code>合并到<code>options.components</code>当中。这里的<code>builtInComponents</code>实际上就是<code>Vue</code>自带的组件，即<code>keep-alive</code>组件。所以最终<code>Vue.options</code>的内容如下：</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">// Vue.options 内容</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">components</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#BABED8;">KeepAlive</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">filters</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{},</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">directives</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{},</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">_base</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">Vue</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>这里之所以额外提起，是因为在后续选项合并时，会使用此处的<code>options</code>进行合并。</p><h3 id="src-platforms-web-runtime-index-js文件" tabindex="-1"><code>/src/platforms/web/runtime/index.js</code>文件 <a class="header-anchor" href="#src-platforms-web-runtime-index-js文件" aria-hidden="true">#</a></h3><p>这里是第二层引入<code>Vue</code>的文件，主要给<code>Vue</code>处理平台相关的一些方法</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> Vue </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">core/index</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> config </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">core/config</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">extend</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">noop</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">shared/util</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">mountComponent</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">core/instance/lifecycle</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">devtools</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">inBrowser</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">core/util/index</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#BABED8;">query</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#BABED8;">mustUseProp</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#BABED8;">isReservedTag</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#BABED8;">isReservedAttr</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#BABED8;">getTagNamespace</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#BABED8;">isUnknownElement</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">web/util/index</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">patch</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">./patch</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> platformDirectives </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">./directives/index</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> platformComponents </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">./components/index</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// install platform specific utils</span></span>
<span class="line"><span style="color:#BABED8;">Vue</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">config</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">mustUseProp </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> mustUseProp</span></span>
<span class="line"><span style="color:#BABED8;">Vue</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">config</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">isReservedTag </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> isReservedTag</span></span>
<span class="line"><span style="color:#BABED8;">Vue</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">config</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">isReservedAttr </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> isReservedAttr</span></span>
<span class="line"><span style="color:#BABED8;">Vue</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">config</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">getTagNamespace </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> getTagNamespace</span></span>
<span class="line"><span style="color:#BABED8;">Vue</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">config</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">isUnknownElement </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> isUnknownElement</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// install platform runtime directives &amp; components</span></span>
<span class="line"><span style="color:#82AAFF;">extend</span><span style="color:#BABED8;">(Vue</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">options</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">directives</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> platformDirectives)</span></span>
<span class="line"><span style="color:#82AAFF;">extend</span><span style="color:#BABED8;">(Vue</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">options</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">components</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> platformComponents)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">Vue</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">prototype</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">__patch__ </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> inBrowser </span><span style="color:#89DDFF;">?</span><span style="color:#BABED8;"> patch </span><span style="color:#89DDFF;">:</span><span style="color:#BABED8;"> noop</span></span>
<span class="line"><span style="color:#FFCB6B;">Vue</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">prototype</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">$mount</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">function</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">()</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">...</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#BABED8;"> Vue</span></span>
<span class="line"></span></code></pre></div><p>这里首先给<code>Vue.config</code>添加了一系列方法，注意，这些方法之所以在这里添加而不是在<code>core/index.js</code>文件里添加，是因为这里的方法都与平台相关，不同的平台的方法实现也会不一样。</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#82AAFF;">extend</span><span style="color:#BABED8;">(Vue</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">options</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">directives</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> platformDirectives)</span></span>
<span class="line"><span style="color:#82AAFF;">extend</span><span style="color:#BABED8;">(Vue</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">options</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">components</span><span style="color:#89DDFF;">,</span><span style="color:#BABED8;"> platformComponents)</span></span>
<span class="line"></span></code></pre></div><p>这两个<code>extend</code>实际上进一步扩充了<code>Vue.options</code>方法，扩充后的内容如下：</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#676E95;font-style:italic;">// Vue.options 内容</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">components</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#BABED8;">KeepAlive</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 新增 platformComponents</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#BABED8;">Transition</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 新增 platformComponents</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#BABED8;">TransitionGroup</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">filters</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{},</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">directives</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 新增 platformDirectives</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#BABED8;">model</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 新增 platformDirectives</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#BABED8;">show</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">_base</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">Vue</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>这也是为什么我们可以不用注册也能全局使用<code>v-model,v-show</code>的原因了，因为<code>Vue</code>已经帮我们全局注册了。</p><h3 id="src-platforms-web-entry-runtime-with-compiler-js文件" tabindex="-1"><code>/src/platforms/web/entry-runtime-with-compiler.js</code>文件 <a class="header-anchor" href="#src-platforms-web-entry-runtime-with-compiler-js文件" aria-hidden="true">#</a></h3><p>这是最后一层引入<code>Vue</code>了：</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#BABED8;"> Vue </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">./runtime/index</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#89DDFF;">...</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#BABED8;"> mount </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">Vue</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">prototype</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">$mount</span></span>
<span class="line"><span style="color:#FFCB6B;">Vue</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">prototype</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">$mount</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">function</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">(</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#BABED8;font-style:italic;">el</span><span style="color:#89DDFF;">?:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">|</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">Element</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#BABED8;">  </span><span style="color:#BABED8;font-style:italic;">hydrating</span><span style="color:#89DDFF;">?:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">boolean</span></span>
<span class="line"><span style="color:#89DDFF;">):</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">Component</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">...</span></span>
<span class="line"><span style="color:#F07178;">    </span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">mount</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">call</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">this,</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">el</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">hydrating</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BABED8;">Vue</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">compile </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> compileToFunctions</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;font-style:italic;">default</span><span style="color:#BABED8;"> Vue</span></span>
<span class="line"></span></code></pre></div><p>这里主要是重新实现了<code>$mount</code>方法，但是为什么原先在<code>runtime/index.js</code>文件里实现了<code>$mount</code>方法，这里又要重新实现一遍呢？因为<code>runtime/index.js</code>里的<code>$mount</code>与编译是无关的，无法处理<code>template</code>模板代码，而这里重写的<code>$mount</code>实际上还是调用了<code>runtime/index.js</code>里的<code>$mount</code>，但是在此之前，增加了从<code>template</code>到<code>render</code>的编译过程。</p><h2 id="实例化过程" tabindex="-1">实例化过程 <a class="header-anchor" href="#实例化过程" aria-hidden="true">#</a></h2><p>前面已经将<code>Vue</code>的各种方法属性挂载完毕，现在则是需要进行实例化了，也就是调用之前提到的<code>_init</code>方法。打开<code>/src/core/instance/init.js</code>文件，代码如下：</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#FFCB6B;">Vue</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">prototype</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">_init</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">=</span><span style="color:#BABED8;"> </span><span style="color:#C792EA;">function</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">(</span><span style="color:#BABED8;font-style:italic;">options</span><span style="color:#89DDFF;">?:</span><span style="color:#BABED8;"> </span><span style="color:#FFCB6B;">Object</span><span style="color:#89DDFF;">)</span><span style="color:#BABED8;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#C792EA;">const</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">vm</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">Component</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">this</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">...</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 1. 合并options</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#BABED8;">options</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">options</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">_isComponent</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#82AAFF;">initInternalComponent</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">vm</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#BABED8;">options</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#BABED8;">vm</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">$options</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">mergeOptions</span><span style="color:#F07178;">(</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#82AAFF;">resolveConstructorOptions</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">vm</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">constructor</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#BABED8;">options</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">||</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{},</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#BABED8;">vm</span></span>
<span class="line"><span style="color:#F07178;">      )</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">...</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 2. 初始化数据</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">initLifecycle</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">vm</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">initEvents</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">vm</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">initRender</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">vm</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">callHook</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">vm</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">beforeCreate</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">initInjections</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">vm</span><span style="color:#F07178;">) </span><span style="color:#676E95;font-style:italic;">// resolve injections before data/props</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">initState</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">vm</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">initProvide</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">vm</span><span style="color:#F07178;">) </span><span style="color:#676E95;font-style:italic;">// resolve provide after data/props</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">callHook</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">vm</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">created</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 3. 编译并挂载</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> (</span><span style="color:#BABED8;">vm</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">$options</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">el</span><span style="color:#F07178;">) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#BABED8;">vm</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">$mount</span><span style="color:#F07178;">(</span><span style="color:#BABED8;">vm</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">$options</span><span style="color:#89DDFF;">.</span><span style="color:#BABED8;">el</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><p>在初始化的过程中，主要分为三个阶段：</p><p>阶段一：合并选项，将 <code>Vue.options</code>和传入的<code>options</code>进行合并。</p><p>阶段二：初始化数据，并对数据进行响应式处理。</p><p>阶段三：编译代码，得到<code>render</code>函数，将<code>vnode</code>生成真实节点，并挂载到界面。</p><p>由于这部分比较核心，且难以理解，这里仅做了解，后续会逐一进行分析。</p><h2 id="vue的整体设计" tabindex="-1">Vue的整体设计 <a class="header-anchor" href="#vue的整体设计" aria-hidden="true">#</a></h2><p>通过上面的分析，我们已经对<code>Vue原型方法</code>，<code>Vue静态方法属性</code>，<code>Vue实例化过程</code>有了大致的了解，下面我们用张图总结下整体的内容，也就是Vue整体的设计思路。</p><p><img src="`+p+'" alt="Vue组成与设计.png"></p><p>总结下来就是：</p><ol><li>构建一个具有完备功能的构造函数，并且在上面添加各个模块需要的方法属性。包括原型方法属性和静态方法属性。</li><li>进行实例化，在实例化过程中进行各种处理，其中包括：选项合并，数据响应式处理，编译，虚拟<code>DOM</code>更新等等。</li></ol><p>这里的描述比较笼统，旨在从整体上来对Vue进行一个了解。在接下来的章节我们会详细分析实例化的整个过程，从而由点及面的了解Vue。下一章节我们将开始<code>Vue</code>核心代码的正式学习。</p>',80),t=[e];function c(r,y,F,D,i,B){return n(),a("div",null,t)}const d=s(o,[["render",c]]);export{E as __pageData,d as default};
