import{_ as n,c as s,o as a,a as t}from"./app.943409a9.js";const h='{"title":"seal \u9636\u6BB5","description":"","frontmatter":{},"headers":[{"level":2,"title":"chunk","slug":"chunk"},{"level":2,"title":"buildChunkGraph","slug":"buildchunkgraph"},{"level":2,"title":"hooks.optimizeChunks","slug":"hooks-optimizechunks"},{"level":2,"title":"\u5F00\u59CB\u751F\u6210\u4EE3\u7801","slug":"\u5F00\u59CB\u751F\u6210\u4EE3\u7801"},{"level":2,"title":"JavascriptGenerator","slug":"javascriptgenerator"},{"level":3,"title":"sourceModule","slug":"sourcemodule"},{"level":3,"title":"\u83B7\u53D6template","slug":"\u83B7\u53D6template"},{"level":3,"title":"sourceDependency","slug":"sourcedependency"},{"level":3,"title":"addToSource","slug":"addtosource"},{"level":2,"title":"\u603B\u7ED3","slug":"\u603B\u7ED3"}],"relativePath":"webpack/seal\u9636\u6BB5.md","lastUpdated":1652365898000}',p={},o=t(`<h1 id="seal-\u9636\u6BB5" tabindex="-1">seal \u9636\u6BB5 <a class="header-anchor" href="#seal-\u9636\u6BB5" aria-hidden="true">#</a></h1><p>\u5728\u6A21\u5757\u6E90\u7801\u7F16\u8BD1\u89E3\u6790\u540E\uFF0C\u8FDB\u5165\u5230<code>seal</code>\u9636\u6BB5\uFF0C\u6267\u884C<code>compilation.seal</code>\u65B9\u6CD5\u3002\u8BE5\u9636\u6BB5\u7684\u4E3B\u8981\u76EE\u7684\u662F\u5EFA\u7ACB<code>module</code>\u548C<code>chunk</code>\u7684\u5173\u7CFB\uFF0C\u5E76\u4E14\u5C06<code>chunk</code>\u5185\u7684\u4EE3\u7801\u8FDB\u884C\u62FC\u63A5\u6574\u5408\uFF0C\u5F62\u6210\u53EF\u4EE5\u6267\u884C\u7684\u4EE3\u7801\u5757\u3002</p><h2 id="chunk" tabindex="-1">chunk <a class="header-anchor" href="#chunk" aria-hidden="true">#</a></h2><p><a href="https://www.zhihu.com/people/tec-van/posts" target="_blank" rel="noopener noreferrer">\u53C2\u8003\u6587\u7AE0</a></p><p>webpack \u4F1A\u6839\u636E\u6A21\u5757\u4F9D\u8D56\u56FE\u7684\u5185\u5BB9\u7EC4\u7EC7\u5206\u5305 \u2014\u2014 Chunk \u5BF9\u8C61\uFF0C\u9ED8\u8BA4\u7684\u5206\u5305\u89C4\u5219\u6709\uFF1A</p><ul><li>\u540C\u4E00\u4E2A entry \u4E0B\u89E6\u8FBE\u5230\u7684\u6A21\u5757\u7EC4\u7EC7\u6210\u4E00\u4E2A chunk\u3002</li><li>\u5F02\u6B65\u6A21\u5757\u5355\u72EC\u7EC4\u7EC7\u4E3A\u4E00\u4E2A chunk\u3002</li><li>entry.runtime \u5355\u72EC\u7EC4\u7EC7\u6210\u4E00\u4E2A chunk\u3002</li></ul><p>\u5F62\u6210\u7684<code>chunk</code>\u548C<code>module</code>\u4E4B\u95F4\u7684\u5173\u7CFB\u4F1A\u8BB0\u5F55\u5728<code>ChunkGraph</code>\u5F53\u4E2D\uFF1A</p><ul><li><code>ChunkGraphModule</code>\u7528\u4E8E\u8BB0\u5F55<code>module</code>\u4E0E\u5916\u754C\u7684\u5173\u7CFB\uFF0C\u5176\u4E2D<code>chunks</code>\u53C2\u6570\u8BB0\u5F55\u4E86<code>module</code>\u5173\u8054\u7684<code>chunk</code>\u3002</li><li><code>ChunkGraphChunk</code>\u7528\u4E8E\u8BB0\u5F55<code>chunk</code>\u4E0E\u5916\u754C\u7684\u5173\u7CFB\uFF0C\u5176\u4E2D<code>modules</code>\u53C2\u6570\u8BB0\u5F55\u4E86<code>chunk</code>\u5173\u8054\u7684<code>modules</code>\u3002</li><li><code>Entrypoint</code>\u7EE7\u627F\u81EA<code>ChunkGroup</code>\uFF0C\u7528\u4E8E\u7EC4\u7EC7<code>chunks</code>\u3002\u8BB0\u5F55\u4E86<code>chunks</code>\u4EE5\u53CA<code>chunkGroup</code>\u7684\u7236\u5B50\u5173\u7CFB\u3002</li></ul><p>\u5728<code>seal</code>\u51FD\u6570\u7684\u524D\u534A\u6BB5\uFF0C\u4E3B\u8981\u96C6\u4E2D\u4E8E\u5EFA\u7ACB\u5165\u53E3<code>module</code>\u7684<code>chunk</code>\u5173\u7CFB\u3002</p><h2 id="buildchunkgraph" tabindex="-1">buildChunkGraph <a class="header-anchor" href="#buildchunkgraph" aria-hidden="true">#</a></h2><p><code>buildChunkGraph</code>\u7684\u4E3B\u8981\u6267\u884C\u8005\u662F<code>visitModules</code>\u51FD\u6570\uFF1A</p><div class="language-javascript"><pre><code><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token punctuation">[</span>chunkGroup<span class="token punctuation">,</span> modules<span class="token punctuation">]</span> <span class="token keyword">of</span> inputEntrypointsAndModules<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">/** @type {ChunkGroupInfo} */</span>
  <span class="token keyword">const</span> chunkGroupInfo <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...	</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> chunk <span class="token operator">=</span> chunkGroup<span class="token punctuation">.</span><span class="token function">getEntrypointChunk</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> module <span class="token keyword">of</span> modules<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    queue<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">action</span><span class="token operator">:</span> <span class="token constant">ADD_AND_ENTER_MODULE</span><span class="token punctuation">,</span>
      <span class="token literal-property property">block</span><span class="token operator">:</span> module<span class="token punctuation">,</span>
      module<span class="token punctuation">,</span>
      chunk<span class="token punctuation">,</span>
      chunkGroup<span class="token punctuation">,</span>
      chunkGroupInfo
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token punctuation">}</span>
</code></pre></div><p>\u8BE5\u51FD\u6570\u4F1A\u904D\u5386<code>modules</code>\uFF08\u8FD9\u4E2A<code>modules</code>\u4E3A\u5165\u53E3<code>module</code>\uFF09\uFF0C\u5E76\u5C06\u5176\u52A0\u5165\u5230<code>queue</code>\u4E2D\u3002\u63A5\u7740\u4F1A\u5FAA\u73AF\u6267\u884C<code>queue</code>\uFF1A</p><div class="language-javascript"><pre><code><span class="token keyword">while</span> <span class="token punctuation">(</span>queue<span class="token punctuation">.</span>length <span class="token operator">||</span> queueConnect<span class="token punctuation">.</span>size<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">processQueue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// ...</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>queue<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> tempQueue <span class="token operator">=</span> queue<span class="token punctuation">;</span>
    queue <span class="token operator">=</span> queueDelayed<span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    queueDelayed <span class="token operator">=</span> tempQueue<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p><code>processQueue</code>\u65B9\u6CD5\u662F<code>queue</code>\u7684\u5177\u4F53\u6267\u884C\u5185\u5BB9\uFF0C\u7CBE\u7B80\u540E\u7684\u5185\u5BB9\u5982\u4E0B\uFF1A</p><div class="language-javascript"><pre><code><span class="token keyword">switch</span> <span class="token punctuation">(</span>queueItem<span class="token punctuation">.</span>action<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">case</span> <span class="token constant">ADD_AND_ENTER_ENTRY_MODULE</span><span class="token operator">:</span>
    chunkGraph<span class="token punctuation">.</span><span class="token function">connectChunkAndEntryModule</span><span class="token punctuation">(</span>
      chunk<span class="token punctuation">,</span>
      module<span class="token punctuation">,</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">case</span> <span class="token constant">ADD_AND_ENTER_MODULE</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    chunkGraph<span class="token punctuation">.</span><span class="token function">connectChunkAndModule</span><span class="token punctuation">(</span>chunk<span class="token punctuation">,</span> module<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">case</span> <span class="token constant">ENTER_MODULE</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    queueItem<span class="token punctuation">.</span>action <span class="token operator">=</span> <span class="token constant">LEAVE_MODULE</span><span class="token punctuation">;</span>
    queue<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>queueItem<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">case</span> <span class="token constant">PROCESS_BLOCK</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token function">processBlock</span><span class="token punctuation">(</span>block<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">break</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u53EF\u4EE5\u770B\u51FA\u8FD9\u91CC\u5176\u5B9E\u662F\u901A\u8FC7<code>connectChunkAndModule</code>\u5EFA\u7ACB<code>chunk</code>\u548C<code>module</code>\u4E4B\u95F4\u7684\u5173\u7CFB\u3002<code>processBlock</code>\u53C8\u4F1A\u904D\u5386\u5F53\u524D<code>module</code>\u4E0B\u5F15\u7528\u5230\u7684\u5176\u4ED6<code>module</code>\uFF0C\u5E76\u6DFB\u52A0\u5230<code>queue</code>\u4E2D\uFF1A</p><div class="language-javascript"><pre><code>queueBuffer<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">action</span><span class="token operator">:</span> activeState <span class="token operator">===</span> <span class="token boolean">true</span> <span class="token operator">?</span> <span class="token constant">ADD_AND_ENTER_MODULE</span> <span class="token operator">:</span> <span class="token constant">PROCESS_BLOCK</span><span class="token punctuation">,</span>
  <span class="token literal-property property">block</span><span class="token operator">:</span> refModule<span class="token punctuation">,</span>
  <span class="token literal-property property">module</span><span class="token operator">:</span> refModule<span class="token punctuation">,</span>
  chunk<span class="token punctuation">,</span>
  chunkGroup<span class="token punctuation">,</span>
  chunkGroupInfo
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>\u56E0\u6B64\uFF0C\u6700\u7EC8\u901A\u8FC7\u9012\u5F52\u7684\u65B9\u5F0F\u904D\u5386\u6240\u6709\u76F8\u5173\u7684<code>module</code>\uFF0C\u5EFA\u7ACB\u4E86<code>modules</code>\u548C<code>chunks</code>\u4E4B\u95F4\u7684\u5173\u7CFB\u3002</p><h2 id="hooks-optimizechunks" tabindex="-1">hooks.optimizeChunks <a class="header-anchor" href="#hooks-optimizechunks" aria-hidden="true">#</a></h2><ul><li>RemoveEmptyChunksPlugin\uFF1A\u79FB\u9664\u975E\u5165\u53E3\u7684\u7A7A<code>chunks</code>\u3002</li><li>MergeDuplicateChunksPlugin\uFF1A\u5408\u5E76\u91CD\u590D\u7684<code>chunks</code>\u3002</li><li>SplitChunksPlugin\uFF1A\u5206\u5305\u3002</li></ul><h2 id="\u5F00\u59CB\u751F\u6210\u4EE3\u7801" tabindex="-1">\u5F00\u59CB\u751F\u6210\u4EE3\u7801 <a class="header-anchor" href="#\u5F00\u59CB\u751F\u6210\u4EE3\u7801" aria-hidden="true">#</a></h2><p>\u5728\u5F97\u5230<code>chunks</code>\u4E0E<code>modules</code>\u540E\uFF0C\u7ECF\u8FC7\u4E00\u7CFB\u5217\u4F18\u5316\uFF0C\u6700\u7EC8\u4F1A\u5BF9\u6A21\u5757\u8FDB\u884C\u904D\u5386\uFF0C\u4E3A<code>chunk</code>\u751F\u6210\u6700\u7EC8\u7684\u4EE3\u7801\u3002</p><div class="language-javascript"><pre><code><span class="token comment">// \u5F00\u59CB\u751F\u6210\u4EE3\u7801</span>
<span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">codeGeneration</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token function">codeGeneration</span><span class="token punctuation">(</span><span class="token parameter">callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> module <span class="token keyword">of</span> <span class="token keyword">this</span><span class="token punctuation">.</span>modules<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> runtimes <span class="token operator">=</span> chunkGraph<span class="token punctuation">.</span><span class="token function">getModuleRuntimes</span><span class="token punctuation">(</span>module<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> runtime <span class="token keyword">of</span> runtimes<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> hash <span class="token operator">=</span> chunkGraph<span class="token punctuation">.</span><span class="token function">getModuleHash</span><span class="token punctuation">(</span>module<span class="token punctuation">,</span> runtime<span class="token punctuation">)</span><span class="token punctuation">;</span>
      jobs<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span> module<span class="token punctuation">,</span> hash<span class="token punctuation">,</span> runtime<span class="token punctuation">,</span> <span class="token literal-property property">runtimes</span><span class="token operator">:</span> <span class="token punctuation">[</span>runtime<span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">_runCodeGenerationJobs</span><span class="token punctuation">(</span>jobs<span class="token punctuation">,</span> callback<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p><code>codeGeneration</code>\u4F1A\u904D\u5386\u6BCF\u4E00\u4E2A<code>module</code>\uFF0C\u7136\u540E\u751F\u6210\u4E00\u4E2A\u4EFB\u52A1\uFF0C\u6DFB\u52A0\u5230<code>jobs</code>\u5F53\u4E2D\uFF0C\u5173\u4E8E<code>runtime</code>\u7684\u4F5C\u7528\uFF0C\u53EF\u4EE5\u53C2\u8003<a href="https://zhuanlan.zhihu.com/p/373946949" target="_blank" rel="noopener noreferrer">\u8FD9\u7BC7\u6587\u7AE0</a>\u3002\u5B8C\u540E\u4F1A\u8C03\u7528<code>_runCodeGenerationJobs</code>\u65B9\u6CD5\u6267\u884C\u6BCF\u4E2A\u4EFB\u52A1\uFF1A</p><div class="language-javascript"><pre><code>asyncLib<span class="token punctuation">.</span><span class="token function">eachLimit</span><span class="token punctuation">(</span>
  jobs<span class="token punctuation">,</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>options<span class="token punctuation">.</span>parallelism<span class="token punctuation">,</span>
  <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> module<span class="token punctuation">,</span> hash<span class="token punctuation">,</span> runtime<span class="token punctuation">,</span> runtimes <span class="token punctuation">}</span><span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">_codeGenerationModule</span><span class="token punctuation">(</span>
      module<span class="token punctuation">,</span>
      runtime<span class="token punctuation">,</span>
      runtimes<span class="token punctuation">,</span>
      hash<span class="token punctuation">,</span>
      dependencyTemplates<span class="token punctuation">,</span>
      chunkGraph<span class="token punctuation">,</span>
      moduleGraph<span class="token punctuation">,</span>
      runtimeTemplate<span class="token punctuation">,</span>
      errors<span class="token punctuation">,</span>
      results<span class="token punctuation">,</span>
      <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> codeGenerated</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>codeGenerated<span class="token punctuation">)</span> statModulesGenerated<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token keyword">else</span> statModulesFromCache<span class="token operator">++</span><span class="token punctuation">;</span>
        <span class="token function">callback</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">_codeGenerationModule</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token comment">// \u5176\u4ED6\u4EE3\u7801\u7701\u7565</span>
  result <span class="token operator">=</span> module<span class="token punctuation">.</span><span class="token function">codeGeneration</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    chunkGraph<span class="token punctuation">,</span>
    moduleGraph<span class="token punctuation">,</span>
    dependencyTemplates<span class="token punctuation">,</span>
    runtimeTemplate<span class="token punctuation">,</span>
    runtime
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u53EF\u4EE5\u770B\u51FA\u6700\u7EC8\u8C03\u7528\u7684\u662F<code>module.codeGeneration</code>\u65B9\u6CD5\u8FDB\u884C\u4EE3\u7801\u7684\u751F\u6210\u3002<code>codeGeneration</code>\u7684\u6838\u5FC3\u53C8\u662F<code>generator.generate</code>\u65B9\u6CD5\u7684\u8C03\u7528\uFF1A</p><div class="language-javascript"><pre><code><span class="token function">codeGeneration</span><span class="token punctuation">(</span>
  <span class="token comment">// \u5176\u4ED6\u4EE3\u7801\u7701\u7565</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>generator<span class="token punctuation">.</span><span class="token function">generate</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    dependencyTemplates<span class="token punctuation">,</span>
    runtimeTemplate<span class="token punctuation">,</span>
    moduleGraph<span class="token punctuation">,</span>
    chunkGraph<span class="token punctuation">,</span>
    runtimeRequirements<span class="token punctuation">,</span>
    runtime<span class="token punctuation">,</span>
    concatenationScope<span class="token punctuation">,</span>
    getData<span class="token punctuation">,</span>
    type
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">)</span>
</code></pre></div><h2 id="javascriptgenerator" tabindex="-1">JavascriptGenerator <a class="header-anchor" href="#javascriptgenerator" aria-hidden="true">#</a></h2><p>\u5728<code>webpack/lib/javascript/JavascriptGenerator.js</code>\u6587\u4EF6\u4E2D\u627E\u5230<code>generate</code>\u51FD\u6570\uFF1A</p><div class="language-javascript"><pre><code><span class="token function">generate</span><span class="token punctuation">(</span><span class="token parameter">module<span class="token punctuation">,</span> generateContext</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// 1. \u83B7\u53D6 module.build \u540E\u89E3\u6790\u51FA\u6765\u7684\u4EE3\u7801</span>
  <span class="token keyword">const</span> originalSource <span class="token operator">=</span> module<span class="token punctuation">.</span><span class="token function">originalSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// 2. \u590D\u5236\u4E00\u4EFD\u4EE3\u7801</span>
  <span class="token keyword">const</span> source <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ReplaceSource</span><span class="token punctuation">(</span>originalSource<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> initFragments <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
	<span class="token comment">// 3. \u5904\u7406\u4EE3\u7801</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">sourceModule</span><span class="token punctuation">(</span>module<span class="token punctuation">,</span> initFragments<span class="token punctuation">,</span> source<span class="token punctuation">,</span> generateContext<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">// 4. \u8FD4\u56DE\u62FC\u63A5\u4EE3\u7801</span>
  <span class="token keyword">return</span> InitFragment<span class="token punctuation">.</span><span class="token function">addToSource</span><span class="token punctuation">(</span>source<span class="token punctuation">,</span> initFragments<span class="token punctuation">,</span> generateContext<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="sourcemodule" tabindex="-1">sourceModule <a class="header-anchor" href="#sourcemodule" aria-hidden="true">#</a></h3><p>\u8FD9\u91CC\u7684\u6838\u5FC3\u662F<code>sourceModule</code>\u65B9\u6CD5\uFF1A</p><div class="language-javascript"><pre><code><span class="token function">sourceModule</span><span class="token punctuation">(</span><span class="token parameter">module<span class="token punctuation">,</span> initFragments<span class="token punctuation">,</span> source<span class="token punctuation">,</span> generateContext</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> dependency <span class="token keyword">of</span> module<span class="token punctuation">.</span>dependencies<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">sourceDependency</span><span class="token punctuation">(</span>
      <span class="token comment">// ...</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>module<span class="token punctuation">.</span>presentationalDependencies <span class="token operator">!==</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> dependency <span class="token keyword">of</span> module<span class="token punctuation">.</span>presentationalDependencies<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">sourceDependency</span><span class="token punctuation">(</span>
        <span class="token comment">// ...</span>
      <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> childBlock <span class="token keyword">of</span> module<span class="token punctuation">.</span>blocks<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">sourceBlock</span><span class="token punctuation">(</span>
      <span class="token comment">// ...</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u8BE5\u65B9\u6CD5\u4F1A\u901A\u8FC7<code>sourceDependency</code>\u6765\u5904\u7406<code>module.build</code>\u8FC7\u7A0B\u4E2D\u5206\u6790\u51FA\u6765\u7684<code>dependencies</code>\u3001<code>presentationalDependencies</code>\u4EE5\u53CA<code>blocks</code>\u3002<code>sourceBlock</code>\u6700\u7EC8\u4E5F\u662F\u8C03\u7528<code>sourceDependency</code>\u65B9\u6CD5\uFF1A</p><div class="language-javascript"><pre><code><span class="token function">sourceDependency</span><span class="token punctuation">(</span><span class="token parameter">module<span class="token punctuation">,</span> dependency<span class="token punctuation">,</span> initFragments<span class="token punctuation">,</span> source<span class="token punctuation">,</span> generateContext</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> constructor <span class="token operator">=</span> <span class="token comment">/** @type {new (...args: any[]) =&gt; Dependency} */</span> <span class="token punctuation">(</span>
    dependency<span class="token punctuation">.</span>constructor
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> template <span class="token operator">=</span> generateContext<span class="token punctuation">.</span>dependencyTemplates<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>constructor<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="\u83B7\u53D6template" tabindex="-1">\u83B7\u53D6template <a class="header-anchor" href="#\u83B7\u53D6template" aria-hidden="true">#</a></h3><p>\u7B2C\u4E00\u6B65\u6839\u636E<code>dependency</code>\u83B7\u53D6\u76F8\u5E94\u7684<code>template</code>\u3002\u8FD9\u91CC\u7684<code>dependencyTemplates</code>\u5B9A\u4E49\u5728<code>compilation</code>\u5BF9\u8C61\u4E0A\uFF0C\u5BF9\u4E8E\u4E0D\u540C\u7684<code>dependency</code>\uFF0C\u4ED6\u4EEC\u4F1A\u6709\u4E0D\u540C\u7684<code>template</code>\u3002\u8FD9\u4E9B<code>templates</code>\u662F\u5728\u5B9E\u4F8B\u5316<code>compilation</code>\uFF0C\u89E6\u53D1<code>hooks.compilation</code>\u65F6\u6DFB\u52A0\u5230<code>dependencyTemplates</code>\u5F53\u4E2D\u7684\uFF0C\u4F8B\u5982\uFF1A</p><div class="language-javascript"><pre><code>compiler<span class="token punctuation">.</span>hooks<span class="token punctuation">.</span>compilation<span class="token punctuation">.</span><span class="token function">tap</span><span class="token punctuation">(</span>
  <span class="token string">&quot;HarmonyModulesPlugin&quot;</span><span class="token punctuation">,</span>
  <span class="token punctuation">(</span><span class="token parameter">compilation<span class="token punctuation">,</span> <span class="token punctuation">{</span> normalModuleFactory <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    compilation<span class="token punctuation">.</span>dependencyTemplates<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>
      HarmonyCompatibilityDependency<span class="token punctuation">,</span>
      <span class="token keyword">new</span> <span class="token class-name">HarmonyCompatibilityDependency<span class="token punctuation">.</span>Template</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>

    compilation<span class="token punctuation">.</span>dependencyFactories<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>
      HarmonyImportSideEffectDependency<span class="token punctuation">,</span>
      normalModuleFactory
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
    compilation<span class="token punctuation">.</span>dependencyTemplates<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>
      HarmonyImportSideEffectDependency<span class="token punctuation">,</span>
      <span class="token keyword">new</span> <span class="token class-name">HarmonyImportSideEffectDependency<span class="token punctuation">.</span>Template</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// ...</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span>
</code></pre></div><h3 id="sourcedependency" tabindex="-1">sourceDependency <a class="header-anchor" href="#sourcedependency" aria-hidden="true">#</a></h3><p>\u7B2C\u4E8C\u6B65\u6267\u884C<code>template.apply</code>\u65B9\u6CD5\u5F00\u59CB\u5904\u7406<code>dependency</code>\uFF1A</p><div class="language-javascript"><pre><code><span class="token function">template</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>dependency<span class="token punctuation">,</span> source<span class="token punctuation">,</span> templateContext<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>\u8FD9\u91CC\u4EE5<code>HarmonyImportSideEffectDependency</code>\u4E3A\u4F8B\uFF0C\u5982\u4F7F\u7528<code>import a from &#39;./moduleA.js&#39;</code>\u65F6\uFF0C\u4F1A\u89E3\u6790\u4E3A<code>HarmonyImportSideEffectDependency</code>\uFF1A</p><div class="language-javascript"><pre><code>HarmonyImportSideEffectDependency<span class="token punctuation">.</span>Template <span class="token operator">=</span> <span class="token keyword">class</span> <span class="token class-name">HarmonyImportSideEffectDependencyTemplate</span> <span class="token keyword">extends</span> <span class="token punctuation">(</span>
	HarmonyImportDependency<span class="token punctuation">.</span>Template
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token function">apply</span><span class="token punctuation">(</span><span class="token parameter">dependency<span class="token punctuation">,</span> source<span class="token punctuation">,</span> templateContext</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">const</span> <span class="token punctuation">{</span> moduleGraph<span class="token punctuation">,</span> concatenationScope <span class="token punctuation">}</span> <span class="token operator">=</span> templateContext<span class="token punctuation">;</span>
		<span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>dependency<span class="token punctuation">,</span> source<span class="token punctuation">,</span> templateContext<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><p>\u6700\u7EC8\u8C03\u7528<code>HarmonyImportDependency.Template</code>\u7684<code>apply</code>\u65B9\u6CD5\uFF1A</p><div class="language-javascript"><pre><code><span class="token keyword">const</span> <span class="token punctuation">{</span> module<span class="token punctuation">,</span> chunkGraph<span class="token punctuation">,</span> moduleGraph<span class="token punctuation">,</span> runtime <span class="token punctuation">}</span> <span class="token operator">=</span> templateContext<span class="token punctuation">;</span>

<span class="token keyword">const</span> connection <span class="token operator">=</span> moduleGraph<span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span>dep<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> referencedModule <span class="token operator">=</span> connection <span class="token operator">&amp;&amp;</span> connection<span class="token punctuation">.</span>module<span class="token punctuation">;</span>

<span class="token keyword">const</span> moduleKey <span class="token operator">=</span> referencedModule
<span class="token operator">?</span> referencedModule<span class="token punctuation">.</span><span class="token function">identifier</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token operator">:</span> dep<span class="token punctuation">.</span>request<span class="token punctuation">;</span>
<span class="token keyword">const</span> key <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">harmony import </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>moduleKey<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
</code></pre></div><p>\u9996\u5148\u4F1A\u83B7\u53D6<code>referencedModule</code>\uFF0C\u5B83\u662F<code>dep</code>\u5BF9\u5E94\u7684<code>module</code>\uFF0C\u800C\u4F20\u5165\u7684<code>module</code>\u5219\u662F<code>referencedModule</code>\u7684\u7236\u7EA7<code>module</code>\u3002\u7136\u540E\u6839\u636E<code>moduleKey</code>\u751F\u6210\u4E00\u4E2A<code>key</code>\u503C\u3002\u968F\u540E\u8C03\u7528<code>getImportState</code>\uFF1A</p><div class="language-javascript"><pre><code><span class="token keyword">const</span> importStatement <span class="token operator">=</span> dep<span class="token punctuation">.</span><span class="token function">getImportStatement</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">,</span> templateContext<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">getImportStatement</span><span class="token punctuation">(</span>
  <span class="token parameter">update<span class="token punctuation">,</span>
  <span class="token punctuation">{</span> runtimeTemplate<span class="token punctuation">,</span> module<span class="token punctuation">,</span> moduleGraph<span class="token punctuation">,</span> chunkGraph<span class="token punctuation">,</span> runtimeRequirements <span class="token punctuation">}</span></span>
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> runtimeTemplate<span class="token punctuation">.</span><span class="token function">importStatement</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    update<span class="token punctuation">,</span>
    <span class="token literal-property property">module</span><span class="token operator">:</span> moduleGraph<span class="token punctuation">.</span><span class="token function">getModule</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    chunkGraph<span class="token punctuation">,</span>
    <span class="token literal-property property">importVar</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getImportVar</span><span class="token punctuation">(</span>moduleGraph<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token literal-property property">request</span><span class="token operator">:</span> <span class="token keyword">this</span><span class="token punctuation">.</span>request<span class="token punctuation">,</span>
    <span class="token literal-property property">originModule</span><span class="token operator">:</span> module<span class="token punctuation">,</span>
    runtimeRequirements
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u4F20\u5165\u7684\u53C2\u6570<code>module</code>\u4EE3\u8868\u5F53\u524D<code>dependency</code>\u5BF9\u5E94\u7684<code>module</code>\uFF0C<code>originModule</code>\u4EE3\u8868\u7236<code>module</code>\uFF0C<code>request</code>\u4EE3\u8868<code>import from</code>\u7684\u8DEF\u5F84\uFF0C<code>importVar</code>\u4F7F\u7528<code>getImportVar</code>\u4EA7\u751F\uFF1A</p><div class="language-javascript"><pre><code><span class="token function">getImportVar</span><span class="token punctuation">(</span><span class="token parameter">moduleGraph</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> module <span class="token operator">=</span> moduleGraph<span class="token punctuation">.</span><span class="token function">getParentModule</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> meta <span class="token operator">=</span> moduleGraph<span class="token punctuation">.</span><span class="token function">getMeta</span><span class="token punctuation">(</span>module<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> importVarMap <span class="token operator">=</span> meta<span class="token punctuation">.</span>importVarMap<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>importVarMap<span class="token punctuation">)</span> meta<span class="token punctuation">.</span>importVarMap <span class="token operator">=</span> importVarMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> importVar <span class="token operator">=</span> importVarMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>moduleGraph<span class="token punctuation">.</span><span class="token function">getModule</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>importVar<span class="token punctuation">)</span> <span class="token keyword">return</span> importVar<span class="token punctuation">;</span>
  importVar <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>Template<span class="token punctuation">.</span><span class="token function">toIdentifier</span><span class="token punctuation">(</span>
    <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>userRequest<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
  <span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">__WEBPACK_IMPORTED_MODULE_</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>importVarMap<span class="token punctuation">.</span>size<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">__</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
  importVarMap<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>moduleGraph<span class="token punctuation">.</span><span class="token function">getModule</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">,</span> importVar<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> importVar<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p><code>importVarMap</code>\u7684\u952E\u4E3A<code>module</code>\uFF0C\u503C\u4E3A<code>module \u540D\u79F0</code>\u3002<code>importVar</code>\u4E3A\u62FC\u63A5\u800C\u6210\uFF0C\u901A\u8FC7<code>Template</code>\u5BF9\u8DEF\u5F84\u7B26\u53F7\u66FF\u6362\uFF0C\u53E6\u5916\u8FD8\u901A\u8FC7<code>importVarMap.size</code>\u4FDD\u8BC1\u4E86\u540D\u79F0\u7684\u552F\u4E00\u6027\uFF0C\u5982\uFF1A</p><div class="language-javascript"><pre><code><span class="token comment">// \u751F\u6210\u524D</span>
<span class="token string">&#39;./moduleA.js&#39;</span>
<span class="token comment">// \u751F\u6210\u540E</span>
<span class="token string">&#39;_moduleA__WEBPACK_IMPORTED_MODULE_0__&#39;</span>
</code></pre></div><p>\u63A5\u4E0B\u6765\u5C31\u662F\u8C03\u7528<code>importStatement</code>\u65B9\u6CD5\u4E86\uFF0C\u9996\u5148\u83B7\u53D6<code>moduleId</code>\uFF08\u540C\u65F6\u4E5F\u662F\u6A21\u5757\u8DEF\u5F84\uFF09\uFF0C\u8FD8\u4F1A\u901A\u8FC7<code>comment</code>\u65B9\u6CD5\u5728<code>id</code>\u524D\u9762\u6DFB\u52A0\u76F8\u5173\u6CE8\u91CA\uFF1A</p><div class="language-javascript"><pre><code><span class="token keyword">const</span> moduleId <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">moduleId</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  module<span class="token punctuation">,</span>
  chunkGraph<span class="token punctuation">,</span>
  request<span class="token punctuation">,</span>
  weak
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">moduleId</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> module<span class="token punctuation">,</span> chunkGraph<span class="token punctuation">,</span> request<span class="token punctuation">,</span> weak <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">comment</span><span class="token punctuation">(</span><span class="token punctuation">{</span> request <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>moduleId<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u7136\u540E\u62FC\u63A5\u6210\u65B0\u7684<code>import</code>\u5185\u5BB9\uFF1A</p><div class="language-javascript"><pre><code><span class="token keyword">const</span> importContent <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">/* harmony import */ </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>optDeclaration<span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>importVar<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> = __webpack_require__(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>moduleId<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">);\\n</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>

<span class="token keyword">return</span> <span class="token punctuation">[</span>importContent<span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre></div><p>\uFF08\u5176\u4E2D<code>optDeclaration</code>\u7531<code>update</code>\u6765\u5B9A\uFF0C\u5982\u679C\u662F\u91CD\u65B0\u8D4B\u503C\u7684\u8BDD\u90A3\u4E48\u5C31\u4E3A<code>&#39;&#39;</code>\u7A7A\u5B57\u7B26\u4E32\uFF1A</p><div class="language-javascript"><pre><code><span class="token keyword">const</span> optDeclaration <span class="token operator">=</span> update <span class="token operator">?</span> <span class="token string">&quot;&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;var &quot;</span><span class="token punctuation">;</span>
</code></pre></div><p>\u7531\u4E8E\u4F7F\u7528\u4E86<code>__webpack_require__</code>\u8FD9\u4E2A\u65B9\u6CD5\uFF0C\u56E0\u6B64\u9700\u8981\u6DFB\u52A0\u8BE5\u65B9\u6CD5\u5230<code>runtimeRequirements</code>\u4E2D\uFF1A</p><div class="language-javascript"><pre><code>runtimeRequirements<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>RuntimeGlobals<span class="token punctuation">.</span>require<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>\u751F\u6210\u5B8C<code>importStatement</code>\u5185\u5BB9\u540E\uFF0C\u6700\u540E\u4F1A\u6267\u884C\uFF1A</p><div class="language-javascript"><pre><code>templateContext<span class="token punctuation">.</span>initFragments<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>
  <span class="token keyword">new</span> <span class="token class-name">ConditionalInitFragment</span><span class="token punctuation">(</span>
    importStatement<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> importStatement<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    InitFragment<span class="token punctuation">.</span><span class="token constant">STAGE_HARMONY_IMPORTS</span><span class="token punctuation">,</span>
    dep<span class="token punctuation">.</span>sourceOrder<span class="token punctuation">,</span>
    key<span class="token punctuation">,</span>
    runtimeCondition
  <span class="token punctuation">)</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>\u5C06\u8FD9\u884C\u65B0\u7684<code>import</code>\u4EE3\u7801\u5F62\u6210\u5BF9\u8C61\u6DFB\u52A0\u5230<code>initFragments</code>\u5F53\u4E2D\u3002\u81F3\u6B64<code>sourceDependency</code>\u65B9\u6CD5\u4E5F\u57FA\u672C\u6267\u884C\u5B8C\u6210\u4E86\uFF0C\u7ECF\u8FC7\u8FD9\u4E00\u7CFB\u5217\u7684<code>sourceDependency</code>\u540E\uFF0C\u6240\u6709\u7684<code>dependency</code>\u90FD\u5C06\u8F6C\u53D8\u4E3A\u65B0\u7684\u8BED\u53E5\uFF0C\u5B58\u653E\u5230<code>initFragments</code>\u5F53\u4E2D\u3002</p><h3 id="addtosource" tabindex="-1">addToSource <a class="header-anchor" href="#addtosource" aria-hidden="true">#</a></h3><p>\u83B7\u53D6\u5B8C\u6240\u6709\u7684\u4EE3\u7801\u7247\u6BB5\u540E\uFF0C\u5F00\u59CB\u6267\u884C<code>InitFragment.addToSource</code>\u65B9\u6CD5\u62FC\u63A5\u4EE3\u7801:</p><div class="language-javascript"><pre><code><span class="token keyword">const</span> keyedFragments <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token punctuation">[</span>fragment<span class="token punctuation">]</span> <span class="token keyword">of</span> sortedFragments<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  keyedFragments<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>fragment<span class="token punctuation">.</span>key <span class="token operator">||</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> fragment<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> fragment <span class="token keyword">of</span> keyedFragments<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  concatSource<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>fragment<span class="token punctuation">.</span><span class="token function">getContent</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> endContent <span class="token operator">=</span> fragment<span class="token punctuation">.</span><span class="token function">getEndContent</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>endContent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    endContents<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>endContent<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
concatSource<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>source<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">return</span> concatSource<span class="token punctuation">;</span>
</code></pre></div><p><code>addToSource</code>\u5904\u7406\u5B8C\u540E\uFF0C\u4F1A\u5C06\u65B0\u7684\u4EE3\u7801\u4EE5\u6570\u7EC4\u7684\u5F62\u5F0F\u8FD4\u56DE\uFF0C\u5E76\u4E14<code>source</code>\u662F\u6570\u7EC4\u7684\u6700\u540E\u4E00\u4E2A\u5143\u7D20\u3002\u751F\u6210\u4EE3\u7801\u540E\u4F1A\u56DE\u5230<code>codeGeneration</code>\u51FD\u6570\uFF1A</p><div class="language-javascript"><pre><code><span class="token keyword">if</span> <span class="token punctuation">(</span>source<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  sources<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>type<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">CachedSource</span><span class="token punctuation">(</span>source<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> resultEntry <span class="token operator">=</span> <span class="token punctuation">{</span>
  sources<span class="token punctuation">,</span>
  runtimeRequirements<span class="token punctuation">,</span>
  data
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">return</span> resultEntry<span class="token punctuation">;</span>
</code></pre></div><p>\u5C06\u6240\u6709\u751F\u6210\u7684\u4EE3\u7801<code>sources</code>\u548C\u4F7F\u7528\u5230\u7684<code>runtimeRequirements</code>\u8FD4\u56DE\u3002</p><h2 id="\u603B\u7ED3" tabindex="-1">\u603B\u7ED3 <a class="header-anchor" href="#\u603B\u7ED3" aria-hidden="true">#</a></h2><p><code>seal</code>\u9636\u6BB5\u5927\u6982\u53EF\u4EE5\u5206\u4E3A\u4E09\u4E2A\u9636\u6BB5\uFF1A</p><p>\u7B2C\u4E00\u4E2A\u9636\u6BB5\u4E3A<code>chunk</code>\u5173\u7CFB\u5EFA\u7ACB\uFF0C\u6B64\u65F6\u4F1A\u904D\u5386\u6240\u6709\u7684<code>module</code>\uFF0C\u5E76\u5F62\u6210<code>module</code>\u548C<code>chunk</code>\u4E4B\u95F4\u7684\u5173\u7CFB\u3002</p><p>\u7B2C\u4E8C\u4E2A\u9636\u6BB5\u4E3A<code>chunk</code>\u7684\u4F18\u5316\u9636\u6BB5\uFF0C\u8BE5\u9636\u6BB5\u4F1A\u5BF9\u751F\u6210\u7684<code>chunk</code>\u8FDB\u884C\u5904\u7406\u4F18\u5316\uFF0C\u5982\u6E05\u9664\u7A7A\u7684<code>chunk</code>\u3001\u91CD\u590D\u7684<code>chunk</code>\u3001\u5BF9<code>chunk</code>\u8FDB\u884C\u5206\u5305\u7B49\u7B49\u3002</p><p>\u7B2C\u4E09\u4E2A\u9636\u6BB5\u4E3A\u751F\u6210\u4EE3\u7801\u9636\u6BB5\uFF0C\u8BE5\u9636\u6BB5\u4F1A\u5BF9<code>chunks</code>\u4EE5\u53CA<code>chunk</code>\u4E0B\u7684<code>modules</code>\u8FDB\u884C\u904D\u5386\uFF0C\u6839\u636E<code>module.build</code>\u89E3\u6790\u7684\u4EE3\u7801\u751F\u6210\u65B0\u7684\u4EE3\u7801\u7247\u6BB5\u3002</p><p>\u5176\u4E2D\u751F\u6210\u4EE3\u7801\u7684\u8FC7\u7A0B\u4E3B\u8981\u662F\u901A\u8FC7<code>sourceDependency</code>\u5BF9<code>module.build</code>\u4E2D\u89E3\u6790\u51FA\u6765\u7684<code>module.dependencies</code>\u548C<code>module.blocks</code>\u8FDB\u884C\u4EE3\u7801\u751F\u6210\u3002\u9996\u5148\u4F1A\u6839\u636E<code>dependency</code>\u83B7\u53D6\u76F8\u5E94\u7684\u751F\u6210\u6A21\u677F<code>template</code>\u3002\u5176\u6B21\u8C03\u7528<code>template.apply</code>\u65B9\u6CD5\u5C06<code>dependency</code>\u66FF\u6362\u6210\u65B0\u7684\u4EE3\u7801\u5757\u3002\u6700\u540E\u4F7F\u7528<code>addToSource</code>\u65B9\u6CD5\u5C06\u6240\u6709<code>dependency</code>\u66FF\u6362\u540E\u7684\u4EE3\u7801\u4EE5\u53CA\u6E90\u7801\u5F62\u6210\u6570\u7EC4\u5F62\u5F0F\u3002</p>`,75),e=[o];function c(u,l,i,k,r,d){return a(),s("div",null,e)}var y=n(p,[["render",c]]);export{h as __pageData,y as default};
